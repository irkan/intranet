/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.9
 * Generated at: 2018-08-16 10:31:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class addDopCompany_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      BEANS.SLOGAN SLOGAN = null;
      synchronized (application) {
        SLOGAN = (BEANS.SLOGAN) _jspx_page_context.getAttribute("SLOGAN", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (SLOGAN == null){
          SLOGAN = new BEANS.SLOGAN();
          _jspx_page_context.setAttribute("SLOGAN", SLOGAN, javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        }
      }
      BEANS.CSSTotal CSS = null;
      synchronized (application) {
        CSS = (BEANS.CSSTotal) _jspx_page_context.getAttribute("CSS", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (CSS == null){
          CSS = new BEANS.CSSTotal();
          _jspx_page_context.setAttribute("CSS", CSS, javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        }
      }
      out.write('\n');
      BEANS.css1Bean CSS3 = null;
      CSS3 = (BEANS.css1Bean) _jspx_page_context.getAttribute("CSS3", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (CSS3 == null){
        CSS3 = new BEANS.css1Bean();
        _jspx_page_context.setAttribute("CSS3", CSS3, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      BEANS.addDopCompany LIST = null;
      LIST = (BEANS.addDopCompany) _jspx_page_context.getAttribute("LIST", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (LIST == null){
        LIST = new BEANS.addDopCompany();
        _jspx_page_context.setAttribute("LIST", LIST, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }

    String slogan = SLOGAN.getSlogan(request);
    LIST.getList(request);
    String s = request.getParameter("s");
    String back = LIST.back;
    String d = LIST.res;
    String id = request.getParameter("id");
    String owner = request.getParameter("owner");
    String name = LIST.name;
    if (owner == null) {
        owner = (String) session.getAttribute("id");
    }
    if (!LIST.ok) {
        response.sendRedirect("notPermited.html");
    }

      out.write("\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n");
      out.write("        <title>Добавить к допущенным</title>\n");
      out.write("        <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"/>\n");
      out.write("        <meta http-equiv=\"content-style-type\" content=\"text/css\"/>\n");
      out.write("        <link rel=\"stylesheet\" href=\"/FILES/alloy/build/aui-skin-classic/css/aui-skin-classic-all-min.css\" type=\"text/css\" media=\"screen\" />\n");
      out.write("        <script src=\"/FILES/alloy/build/aui/aui.js\" type=\"text/javascript\"></script>\n");
      out.write("        <link rel=\"stylesheet\" href=\"index.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"blue.css\" type=\"text/css\" />\n");
      out.write("        <style type=\"text/css\">\n");
      out.write("            @import url('css/topMenu.css');\n");
      out.write("            @import url('css/exxo.css');\n");
      out.write("            .inno{margin:5px;margin-left:20px;}\n");
      out.write("            .title1{width:250px;font-size:15px;}\n");
      out.write("            .title2{width:250px;font-size:13px;text-decoration:underline;font-weight:bolder;}\n");
      out.write("            .title3{width:250px;}\n");
      out.write("            .title4{font-style:italic;width:250px;}\n");
      out.write("            .title5{width:250px;}\n");
      out.write("            .title6{font-style:italic;width:250px;}\n");
      out.write("            .title7{width:250px;}\n");
      out.write("            .title8{font-style:italic;width:250px;}\n");
      out.write("            #main {position: relative;margin:0px 10px;height: auto;margin-bottom: 20px;background-color: white;padding: 4px; width: 95%;\n");
      out.write("                   border-color: #DEDEDE #DEDEDE #BFBFBF #DEDEDE;border-width: 1px; border-style: solid;}\n");
      out.write("            div.item {display: block;width: 160px;padding: 20px 10px;border: 1px solid #BFBFBF; margin: 10px;color: #3C3D58;background-color:#E2E4EE;font-size: 12px;\n");
      out.write("                      text-align: left;}\n");
      out.write("            div.inno {padding-left: 70px;}\n");
      out.write("            .item:hover {background-color:white;color: red;cursor: pointer;}\n");
      out.write("            #dopusks {font-size: 12px; margin-left: 10px;width: 168px; border: 1px solid #dedede; border-border: 1px solid #bfbfbf; background-color: rgb(252,252,252);padding-bottom: 20px;}\n");
      out.write("            #dopusks .emps {padding: 6px; cursor: pointer; padding-right: 30px;padding-left: 8px; border: 1px solid rgb(252,252,252);}\n");
      out.write("            #dopusks .emps:hover {color: red; background-image:url('drop.png'); background-repeat: no-repeat;background-color: white; border-radius: 5px; border: 1px solid rgb(240,240,240); background-position: 146px center;}\n");
      out.write("            #empsH {padding: 10px; color: gray; font-weight: bold; padding-left: 8px; padding-top:0;}\n");
      out.write("            #fname {padding: 8px; font-size: 10px;}\n");
      out.write("        </style>\n");
      out.write("        <style>");
      out.print(CSS.getCSS(request));
      out.write("</style>\n");
      out.write("        <style>");
      out.print(CSS3.getCSS("addDopCompany.jsp", request));
      out.write("</style>\n");
      out.write("    </head>\n");
      out.write("    <body id=\"addDopCompany_jsp\">\n");
      out.write("        <div id=\"content-wrapper\">\n");
      out.write("            <div id=\"header\">\n");
      out.write("                <table id=\"tableH\">\n");
      out.write("                    <tbody>\n");
      out.write("                        <tr>\n");
      out.write("                            <td id=\"tdlogo\">\n");
      out.write("                                <img src=\"logo.png\" id=\"logo\">\n");
      out.write("                            </td>\n");
      out.write("                            <td>\n");
      out.write("                                <div id=\"head\">\n");
      out.write("                                    <table>\n");
      out.write("                                        <tbody>\n");
      out.write("                                            <tr>\n");
      out.write("                                                <td id=\"slogan\" valign=\"center\">");
      out.print( slogan);
      out.write("</td>\n");
      out.write("                                                <td>");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "poisk", out, true);
      out.write("\n");
      out.write("                                                </td>\n");
      out.write("                                            </tr>\n");
      out.write("                                        </tbody>\n");
      out.write("                                    </table>\n");
      out.write("                                </div>\n");
      out.write("                                <div id=\"foot\">\n");
      out.write("                                    <ul class=\"topMenu\">\n");
      out.write("                                        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "topMenu.xhtml", out, true);
      out.write("\n");
      out.write("                                        <li><a href=\"");
      out.print(back);
      out.write("\" class=\"footmenu\">Sonlandır</a></li>\n");
      out.write("                                        <li> <a href=\"http://exxo.ru/howto/documents-howto.html#admit\" class=\"footmenu howto\" target=\"_blank\">?</a></li>\n");
      out.write("                                    </ul>\n");
      out.write("                                </div>\n");
      out.write("                            </td>\n");
      out.write("                        </tr>\n");
      out.write("                    </tbody>\n");
      out.write("                </table>\n");
      out.write("            </div>\n");
      out.write("            <table id=\"grid\" class=\"grid\">\n");
      out.write("                <tbody id=\"atbody\">\n");
      out.write("                    <tr id=\"tr\">\n");
      out.write("                        <td id=\"menu-td\" class=\"menu-td\" valign=\"top\">\n");
      out.write("                            <div class=\"exxo-menu exxo-shadow\" id=\"menu\">\n");
      out.write("                                ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu-doc.xhtml", out, true);
      out.write("\n");
      out.write("                            </div>\n");
      out.write("                            <div id=\"dopusks\" class=\"exxo-shadow\">\n");
      out.write("                                <div id=\"fname\">");
      out.print(name);
      out.write("</div>\n");
      out.write("                                <div id=\"empsH\">Допущены:</div>\n");
      out.write("                                <div id=\"empsDiv\">");
      out.print(d);
      out.write("</div>\n");
      out.write("                            </div>\n");
      out.write("                        </td>\n");
      out.write("                        <td id=\"column-3\" valign=\"top\">\n");
      out.write("                            <div id=\"main\" class=\"exxo-shadow\"></div>\n");
      out.write("                        </td>\n");
      out.write("                    </tr> \n");
      out.write("                </tbody>\n");
      out.write("            </table>\n");
      out.write("            ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "FOOTER", out, true);
      out.write("\n");
      out.write("        </div>\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("            AUI().ready('aui-io', function (A) {\n");
      out.write("                A.one(\"#main\").plug(A.Plugin.IO, {uri: 'company', method: 'POST', on: {\"end\": function () {\n");
      out.write("                            A.all(\"#main .item\").each(function () {\n");
      out.write("                                this.addClass(\"exxo-shadow1\");\n");
      out.write("                                this.on(\"click\", function () {\n");
      out.write("                                    location = \"addDopComp.jsp?uid=\" + this.getAttribute(\"id\") + \"&id=");
      out.print(id);
      out.write("&owner=");
      out.print(owner);
      out.write("\";\n");
      out.write("                                })\n");
      out.write("                            })\n");
      out.write("                        }}});\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("            AUI().ready('aui-node', 'aui-io', function (A) {\n");
      out.write("                function dropRegistrat() {\n");
      out.write("                    dropAr = \"\";\n");
      out.write("                    A.all(\"#dopusks .emps\").each(function () {\n");
      out.write("                        this.on(\"click\", function () {\n");
      out.write("                            if (confirm(\"Удалить?\"))\n");
      out.write("                                empsDrop(this)\n");
      out.write("                        })\n");
      out.write("                    });\n");
      out.write("                    A.one('#dopusks').setStyle('height', this.getComputedStyle('height'));\n");
      out.write("                }\n");
      out.write("                function empsDrop(node) {\n");
      out.write("                    node.purge().remove();\n");
      out.write("                    dropAr = \"\";\n");
      out.write("                    A.all(\"#dopusks .emps\").each(function () {\n");
      out.write("                        if (dropAr == \"\")\n");
      out.write("                            dropAr += this.getAttribute(\"id\");\n");
      out.write("                        else\n");
      out.write("                            dropAr += \",\" + this.getAttribute(\"id\");\n");
      out.write("                    });\n");
      out.write("\n");
      out.write("                    A.one(\"#empsDiv\").unplug();\n");
      out.write("                    A.one(\"#empsDiv\").plug(A.Plugin.IO, {uri: 'dopuskDrop', data: {id: \"");
      out.print(id);
      out.write("\", dopusk: dropAr, owner: \"");
      out.print(owner);
      out.write("\"},\n");
      out.write("                        method: 'post', after: {'success': function () {\n");
      out.write("                                dropRegistrat()\n");
      out.write("                            }}});\n");
      out.write("                }\n");
      out.write("                dropRegistrat();\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("        <script type=\"text/javascript\" src=\"scripts/poisk.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"scripts/topMenu.js\"></script>\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
