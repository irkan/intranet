/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.9
 * Generated at: 2018-08-16 07:46:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      BEANS.IndexBean INDEX = null;
      INDEX = (BEANS.IndexBean) _jspx_page_context.getAttribute("INDEX", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (INDEX == null){
        INDEX = new BEANS.IndexBean();
        _jspx_page_context.setAttribute("INDEX", INDEX, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      BEANS.CSSTotal CSS = null;
      synchronized (application) {
        CSS = (BEANS.CSSTotal) _jspx_page_context.getAttribute("CSS", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (CSS == null){
          CSS = new BEANS.CSSTotal();
          _jspx_page_context.setAttribute("CSS", CSS, javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        }
      }
      out.write('\n');
      BEANS.css1Bean CSS3 = null;
      CSS3 = (BEANS.css1Bean) _jspx_page_context.getAttribute("CSS3", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (CSS3 == null){
        CSS3 = new BEANS.css1Bean();
        _jspx_page_context.setAttribute("CSS3", CSS3, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\n');
      BEANS.cssPage CSS1 = null;
      CSS1 = (BEANS.cssPage) _jspx_page_context.getAttribute("CSS1", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (CSS1 == null){
        CSS1 = new BEANS.cssPage();
        _jspx_page_context.setAttribute("CSS1", CSS1, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");

    String role = (String) session.getAttribute("role");
    String user_id = (String) session.getAttribute("id");
    if (role.indexOf("a") < 0 && role.indexOf("b") < 0) {
        response.sendRedirect("notPermited.html");
    }
    String id = "2";
    if (request.getParameter("id") != null) {
        id = request.getParameter("id");
    }
    INDEX.setId(id, request);
    String res = INDEX.getRes();
    String title = INDEX.getTitle();
    String css = CSS.getCSS(request);
    String css1 = CSS1.getCSS(id, request);
    boolean trig = BASE.CASE.isDemo(request.getServletContext());

      out.write("\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n");
      out.write("        <title>");
      out.print(title);
      out.write("</title>\n");
      out.write("        <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"/>\n");
      out.write("        <meta http-equiv=\"content-style-type\" content=\"text/css\"/>\n");
      out.write("        <link rel=\"stylesheet\" href=\"/FILES/alloy/build/aui-skin-classic/css/aui-skin-classic-all-min.css\" type=\"text/css\" media=\"screen\" />\n");
      out.write("        <style type=\"text/css\">\n");
      out.write("            @import url('css/exxo.css');\n");
      out.write("            .aui-panel-hd button, #animList button {height: 24px; padding-top: 5px; min-width: 26px;}\n");
      out.write("            .aui-portal-layout-proxy {position: absolute;width: 100px;height: 20px;background: black;opacity: .7;filter: alpha(opacity=70);}\n");
      out.write("            #animList {color:#6b6b6b; left: -200px;position: absolute;top: 100px;z-index:100;display:none;background-color: white;}\n");
      out.write("            .portlet-list {background-color: white;border-width: 0px;width:250px; padding: 10px;}\n");
      out.write("            .portlet-list .portlet-item {margin: 5px;padding: 2px;display:block; border: 2px solid #dedede;}\n");
      out.write("            .aui-portal-layout-drag-target-indicator  {margin: 2px 0;}\n");
      out.write("            #content-wrapper {width: 100%;height:500px;}\n");
      out.write("            table#grid {position: relative;width:100%;min-height:300px;}\n");
      out.write("            table#grid td#column-1 {width: 60%;}\n");
      out.write("            table#grid td#column-4 {width:200px;}\n");
      out.write("            table#grid td.menu-td{width: 200px;}\n");
      out.write("            div.portlet {margin-bottom:25px;font-size: 12px;}\n");
      out.write("            span.blue {color:blue;}\n");
      out.write("            td#menu-td .portlet{width:150px;}\n");
      out.write("            #content-wrapper div#header{position: relative;width:  100%;}\n");
      out.write("            .img {display:block;background-color: white;width: 120px;height: 120px;float: left;margin: 5px;background-position: center;background-repeat: no-repeat;}\n");
      out.write("            div.aui-panel-hd {background-image: none;background: none;border: 0;}\n");
      out.write("            div.aui-panel-content {border: 0;}\n");
      out.write("            div#animList div.aui-panel-hd{background:#ccc;border-bottom:1px solid #999;font-weight:bold;padding:2px 3px 2px 4px; background:#c0c2c5 url(/FILES/alloy/build/aui-skin-classic/images/panel/header_bg.png) repeat-x 0 0;border:0 solid;border-color:#C8C9CA #aeb2b8 #aeb2b8 #C8C9CA;border-bottom-width:1px;padding-left:10px;text-shadow:1px 1px #fff;}\n");
      out.write("            div#animList .aui-panel-content{border:1px solid #999; font-size:11px;}\n");
      out.write("            div#animList div.aui-panel-content div.portlet-item {cursor: move; margin-top: 8px;}\n");
      out.write("            div#animList div.aui-panel-content div.portlet-item span {margin-right:5px;}\n");
      out.write("            .portlet-list div.portlet-item {display: none; padding: 10px 4px; color: #bfbfbf;}\n");
      out.write("            .portlet-list select {width: 100%; margin-bottom: 10px;}\n");
      out.write("            .portlet-list #op1 {}\n");
      out.write("            .other {display:none;}\n");
      out.write("            .portlet-list #selects {padding-bottom: 20px;}\n");
      out.write("            .portlet-list div.portlet-item:hover {border:2px solid #bfbfbf; color: black;}\n");
      out.write("            .yui3-scrollview-first,  .yui3-scrollview-last{visibility:hidden;}\n");
      out.write("            .newDocsContent li,.newBlogsContent li {line-height: 0; display: block;}\n");
      out.write("            div.exxo-scrollview-up {position: absolute; width: 24px; height: 24px; background-color: white; z-index: 999; bottom: 1px; right: 1px; cursor: pointer; background-image: url(/EXXO/small/tobegin.png); background-position: center center; background-repeat: no-repeat; background-size: auto auto; border-radius: 20px;border: 1px solid #bfbfbf;}\n");
      out.write("            div.exxo-scrollview-buttons {position: absolute; width: 52px; height: 26px; background-color: transparent; z-index: 999; top: 42px; right: 0px;}\n");
      out.write("            #content-wrapper button.exxo-scrollview-next {position: relative; display: inline-block; width: 20px; height: 20px; background-color: #dedede; cursor: pointer;background-image: url(/EXXO/small/arrow-up.png); background-position: center center; background-repeat: no-repeat; border-radius: 12px; border: 1px solid #bfbfbf; margin: 1px;}\n");
      out.write("            #content-wrapper button.exxo-scrollview-back {position: relative; display: inline-block; width: 20px; height: 20px; background-color: #dedede; cursor: pointer;background-image: url(/EXXO/small/arrow-down.png); background-position: center center; background-repeat: no-repeat; border-radius: 12px; border: 1px solid #bfbfbf; margin: 1px;}\n");
      out.write("            button.exxo-scrollview-back:hover {border-color: #dedede;background-color: white;}\n");
      out.write("            button.exxo-scrollview-next:hover {border-color: #dedede;background-color: white;}\n");
      out.write("            div.exxo-scrollview-up:hover {border-color: #dedede; background-color: white;}\n");
      out.write("            .exxo-hidden {display: none !important;}\n");
      out.write("            .newDocsContent tr.docs td,.newBlogsContent tr.blog td {line-height: normal; height: 44px; padding: 6px;}\n");
      out.write("            .newDocsContent tr.docs td.first,.newBlogsContent tr.blog td.first {width: 22px;padding: 2px; }\n");
      out.write("            .newDocsContent tr.docs td.created, .newBlogsContent tr.blog td.created {width: 100px; }\n");
      out.write("            .newDocsContent tr.docs td.fio,.newBlogsContent tr.blog td.fio {width: 33px;}\n");
      out.write("            .newDocsContent tr.docs td.fio div,.newBlogsContent tr.blog td.fio div {background-size: contain; background-position: center center; background-repeat: no-repeat; height: 44px; border-radius: 5px;}\n");
      out.write("            .newDocsContent tr.docs td.first div,.newBlogsContent tr.blog td.first div {width: 100%; height: 20px; background-position: center center; background-repeat: no-repeat;}\n");
      out.write("            .newDocsContent tr.docs td.fil a,.newBlogsContent tr.blog td.fil a{display: block; width: auto; height: 44px; overflow: hidden; text-decoration: none;}\n");
      out.write("            span.exxo-date {padding-right: 10px;font-weight: bold;}\n");
      out.write("            a.notopend {font-weight: normal; color: black;}\n");
      out.write("            #docsH3 {margin:0; padding: 5px; background-color: rgb(59,59,82);border-radius: 4px 4px 0px 0px;}\n");
      out.write("            #docsH3 a {color: #dedede;}\n");
      out.write("            #docsH3 a:hover {color: white;}\n");
      out.write("            #blogH3 {margin:0; padding: 5px; background-color: rgb(82, 82, 136);border-radius: 4px 4px 0px 0px;}\n");
      out.write("            #blogH3 a {color: #dedede;}\n");
      out.write("            #blogH3 a:hover {color: white;}\n");
      out.write("            div.portlet {border-radius: 4px;}\n");
      out.write("            .newGalsContent li.gal a {display: inline-block;width: 120px;height: 120px;margin: 2px;background-position: center;background-repeat: no-repeat;}\n");
      out.write("            .newGalsContent li.gal, .IMG li {background-image: none; display: inline-block; margin:0; padding:0;}\n");
      out.write("            .newGalsContent, .IMG{white-space:nowrap;}\n");
      out.write("        </style>\n");
      out.write("        <script src=\"/FILES/alloy/build/aui/aui.js\" type=\"text/javascript\"></script>\n");
      out.write("        <link rel=\"stylesheet\" href=\"vids.css\" type=\"text/css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"index.css\" type=\"text/css\" />\n");
      out.write("        <style>");
      out.print(css);
      out.write("</style>\n");
      out.write("        <style>");
      out.print(CSS3.getCSS("main.jsp", request));
      out.write("</style>\n");
      out.write("        <style>");
      out.print(css1);
      out.write("</style>\n");
      out.write("    </head>\n");
      out.write("    <body class=\"yui3-skin-sam\" id=\"main_jsp\">\n");
      out.write("        <div id=\"content-wrapper\">\n");
      out.write("            <div id=\"header\">\n");
      out.write("                <div id=\"header1\"></div>\n");
      out.write("                <div id=\"header2\"></div>\n");
      out.write("\n");
      out.write("            </div>");
      out.print(res);
      out.write("</div>\n");
      out.write("        <div id=\"animList\" class=\"exxo-shadow1\">\n");
      out.write("            <div class=\"portlet-list\">\n");
      out.write("                <div id=\"selects\">\n");
      out.write("                    <select id=\"op1\" name=\"op1\">\n");
      out.write("                        <option value=\"0\" SELECTED> widget seçin </option>\n");
      out.write("                        <option value=\"text\"> tekst </option>\n");
      out.write("                        <option value=\"calendar\"> kalendar </option>\n");
      out.write("                        <option value=\"bloges\"> mesajlar </option>\n");
      out.write("                        <option value=\"docs\"> sənədlər </option>\n");
      out.write("                        <option value=\"birthday\"> doğum günləri </option>\n");
      out.write("                        <option value=\"faces\"> yeni əməkdaşlar </option>\n");
      out.write("                        <option value=\"desk\"> elanlar </option>\n");
      out.write("                        <option value=\"photos\"> şəkillər </option>\n");
      out.write("                        <option value=\"albums\"> fotoalbomlar </option>\n");
      out.write("                        <option value=\"news\"> xəbərlər </option>\n");
      out.write("                    </select>\n");
      out.write("                    <select id=\"op2\" name=\"op2\" class=\"other\">\n");
      out.write("                        <option value=\"0\" SELECTED>seçin</option>\n");
      out.write("                        <option value=\"1\">işçilər</option>\n");
      out.write("                        <option value=\"2\">şirkət</option>\n");
      out.write("                    </select>\n");
      out.write("                    <select id=\"op3\" name=\"op3\" class=\"other\">\n");
      out.write("                        <option value=\"1\" SELECTED>bütün</option>\n");
      out.write("                        <option value=\"2\">yalnız iş üçün</option>\n");
      out.write("                    </select>\n");
      out.write("                    <select id=\"op4\" name=\"op4\" class=\"other\">\n");
      out.write("                        <option value=\"1\" SELECTED>bütün</option>\n");
      out.write("                        <option value=\"2\">gələnlər</option>\n");
      out.write("                        <option value=\"3\">göndərilənlər</option>\n");
      out.write("                    </select>\n");
      out.write("                    <select id=\"op5\" name=\"op5\" class=\"other\">\n");
      out.write("                        <option value=\"0\" SELECTED>seçin</option>\n");
      out.write("                        <option value=\"1\">bütün</option>\n");
      out.write("                        <option value=\"2\">ümumi</option>\n");
      out.write("                        <option value=\"3\">şəxsi</option>\n");
      out.write("                        <option value=\"4\">qrup</option>\n");
      out.write("                        <option value=\"5\">proyekt</option>\n");
      out.write("                        <option value=\"6\">alt bölmələr</option>\n");
      out.write("                        <option value=\"7\">hamsı</option>\n");
      out.write("                    </select>\n");
      out.write("                    <select id=\"op6\" name=\"op6\" class=\"other\">\n");
      out.write("                        <option value=\"1\" SELECTED>Sənədlərim</option>\n");
      out.write("                        <option value=\"2\">Gələnlər</option>\n");
      out.write("                        <option value=\"3\">Общие компании</option>\n");
      out.write("                        <option value=\"4\">Gələnlər şirkətə</option>\n");
      out.write("                        <option value=\"5\">Göndərilənlər</option>\n");
      out.write("                        <option value=\"6\">Daxili sənədlər</option>\n");
      out.write("                    </select>\n");
      out.write("                    <select id=\"op7\" name=\"op7\" class=\"other\">\n");
      out.write("                        <option value=\"0\" SELECTED>seçin</option>\n");
      out.write("                        <option value=\"1\">bütün</option>\n");
      out.write("                        <option value=\"2\">ümumi</option>\n");
      out.write("                        <option value=\"3\">şəxsi</option>\n");
      out.write("                        <option value=\"4\">qrup</option>\n");
      out.write("                        <option value=\"5\">proyekt</option>\n");
      out.write("                        <option value=\"6\">alt bölmələr</option>\n");
      out.write("                        <option value=\"7\">hamsı</option>\n");
      out.write("                    </select>\n");
      out.write("                </div>   \n");
      out.write("                <div class=\"portlet-item\" id=\"text-element\"><span class=\"aui-button-icon aui-icon aui-icon-document\"></span>Mətn elementi</div>\n");
      out.write("                <div class=\"portlet-item\" id=\"my-calendar\"><span class=\"aui-button-icon aui-icon aui-icon-calendar\"></span>İstənilən yerə sürükləyin</div>\n");
      out.write("                <div class=\"portlet-item\" id=\"my-birthday\"><span class=\"aui-button-icon aui-icon aui-icon-heart\"></span>İstənilən yerə sürükləyin</div>\n");
      out.write("                <div class=\"portlet-item\" id=\"my-NC\"><span class=\"aui-button-icon aui-icon aui-icon-person\"></span>İstənilən yerə sürükləyin</div>\n");
      out.write("                <div class=\"portlet-item my-D\" id=\"my-D\"><span class=\"aui-button-icon aui-icon aui-icon-copy\"></span>İstənilən yerə sürükləyin</div>\n");
      out.write("                <div class=\"portlet-item\" id=\"my-news\"><span class=\"aui-button-icon aui-icon aui-icon-document-b\"></span>İstənilən yerə sürükləyin</div>\n");
      out.write("                <div class=\"portlet-item\" id=\"my-gal\"><span class=\"aui-button-icon aui-icon aui-icon-folder-open\"></span>İstənilən yerə sürükləyin</div>\n");
      out.write("                <div class=\"portlet-item\" id=\"my-Kgal\"><span class=\"aui-button-icon aui-icon aui-icon-folder-open\"></span>İstənilən yerə sürükləyin</div>\n");
      out.write("                <div class=\"portlet-item\" id=\"my-desk\"><span class=\"aui-button-icon aui-icon aui-icon-notice\"></span>İstənilən yerə sürükləyin</div>\n");
      out.write("                <div class=\"portlet-item my-B\" id=\"my-B\"><span class=\"aui-button-icon aui-icon aui-icon-note\"></span>İstənilən yerə sürükləyin</div>\n");
      out.write("                <div class=\"portlet-item\" id=\"my-P\"><span class=\"aui-button-icon aui-icon aui-icon-image\"></span>İstənilən yerə sürükləyin</div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div id=\"menus\" class=\"yui3-menu\">");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu.jsp", out, true);
      out.write("</div>\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("            AUI().ready('aui-portal-layout', 'anim', 'aui-panel', 'aui-io-request', 'aui-toolbar', 'aui-scroller', 'scrollview', 'scrollview-paginator', 'datatype-number', function (A) {\n");
      out.write("                var user =");
      out.print(user_id);
      out.write(";\n");
      out.write("                var sv_height = 285;\n");
      out.write("                var dragging;\n");
      out.write("                A.one('body').delegate('mousedown', function (e) {\n");
      out.write("                    dragging = this;\n");
      out.write("                }, '.portlet');\n");
      out.write("                A.one('#menus').setStyle('display', 'block').prependTo(A.one('#menu'));\n");
      out.write("                new A.Panel({collapsible: false, collapsed: false, headerContent: '', bodyContent: A.one('#menus'),\n");
      out.write("                    icons: [{icon: 'pencil', handler: {fn: function (e) {\n");
      out.write("                                    location = 'menuEditor.jsp';\n");
      out.write("                                }, type: 'click'}}]}).render('#menu');\n");
      out.write("                var pl = A.one(\"#animList\");\n");
      out.write("                var plHTML = pl.html();\n");
      out.write("                pl.empty();\n");
      out.write("                new A.Panel({collapsible: false, collapsed: false, headerContent: '', bodyContent: plHTML,\n");
      out.write("                    icons: [{icon: 'closethick', handler: {fn: function (e) {\n");
      out.write("                                    pListHide()\n");
      out.write("                                }, type: 'click'}}]}).render(pl);\n");
      out.write("                var DDM = A.DD.DDM;\n");
      out.write("                var proxyNode = A.Node.create('<div class=\"aui-portal-layout-proxy\"></div>');\n");
      out.write("                var portalLayout = new A.PortalLayout({dragNodes: '.portlet', dropNodes: '.column', proxyNode: proxyNode, lazyStart: true,\n");
      out.write("                    after: {'drag:end': function (event) {\n");
      out.write("                            fixElements();\n");
      out.write("                            loadOne(dragging);\n");
      out.write("                        }}});\n");
      out.write("                loadAll();\n");
      out.write("                function loadOne(ins) {\n");
      out.write("                    var id = ins.getAttribute('id');\n");
      out.write("                    ins.empty();\n");
      out.write("                    if (id.indexOf(\"text\") == 0) {\n");
      out.write("                        var instance = new A.Panel({collapsible: false, collapsed: false, headerContent: '', bodyContent: '',\n");
      out.write("                            icons: [{icon: 'closethick', handler: {fn: function (e) {\n");
      out.write("                                            if (confirm(\"Удалить элемент?\")) {\n");
      out.write("                                                alterText(user, id, 'deleteText');\n");
      out.write("                                                ins.empty().unplug().remove();\n");
      out.write("                                                fixElements();\n");
      out.write("                                            }\n");
      out.write("                                        }, type: 'click'}},\n");
      out.write("                                {icon: 'pencil', handler: {fn: function (e) {\n");
      out.write("                                            location = 'editor.jsp?id=' + id + '&b=");
      out.print(id);
      out.write("';\n");
      out.write("                                        }, type: 'click'}}]}).render(ins);\n");
      out.write("                        textR(ins, instance, 'textOut');\n");
      out.write("                    } else if (id.indexOf(\"calendar\") == 0) {\n");
      out.write("                        widget(ins, 'eventsVid');\n");
      out.write("                    } else if (id.indexOf(\"Birthday\") == 0) {\n");
      out.write("                        widget(ins, 'birthOut');\n");
      out.write("                    } else if (id.indexOf(\"newComers\") == 0) {\n");
      out.write("                        widget(ins, 'newComers');\n");
      out.write("                    } else if (id.indexOf(\"newDocsK\") == 0) {\n");
      out.write("                        widget(ins, 'newDocK');\n");
      out.write("                    } else if (id.indexOf(\"newDocs\") == 0) {\n");
      out.write("                        widget(ins, 'newDoc');\n");
      out.write("                    } else if (id.indexOf(\"newNews\") == 0) {\n");
      out.write("                        widget(ins, 'newNews');\n");
      out.write("                    } else if (id.indexOf(\"newGal\") == 0) {\n");
      out.write("                        widget(ins, 'newGal');\n");
      out.write("                    } else if (id.indexOf(\"newKGal\") == 0) {\n");
      out.write("                        widget(ins, 'newKGal');\n");
      out.write("                    } else if (id.indexOf(\"newDesk\") == 0) {\n");
      out.write("                        widget(ins, 'newDesk');\n");
      out.write("                    } else if (id.indexOf(\"newBlog\") == 0) {\n");
      out.write("                        widget(ins, 'newBlog');\n");
      out.write("                    } else if (id.indexOf(\"newBBlog\") == 0) {\n");
      out.write("                        widget(ins, 'newBBlog');\n");
      out.write("                    } else if (id.indexOf(\"newPhotos\") == 0) {\n");
      out.write("                        widget(ins, 'NewPhotos');\n");
      out.write("                    }\n");
      out.write("                    ;\n");
      out.write("                }\n");
      out.write("                function loadAll() {\n");
      out.write("                    A.all(\".portlet\").each(function () {\n");
      out.write("                        var ins = this;\n");
      out.write("                        var id = ins.getAttribute('id');\n");
      out.write("                        ins.empty();\n");
      out.write("                        if (id.indexOf(\"text\") == 0) {\n");
      out.write("                            var instance = new A.Panel({collapsible: false, collapsed: false, headerContent: '', bodyContent: '',\n");
      out.write("                                icons: [{icon: 'closethick', handler: {fn: function (e) {\n");
      out.write("                                                if (confirm(\"Удалить элемент?\")) {\n");
      out.write("                                                    alterText(user, id, 'deleteText');\n");
      out.write("                                                    ins.empty().unplug().remove();\n");
      out.write("                                                    fixElements();\n");
      out.write("                                                }\n");
      out.write("                                            }, type: 'click'}},\n");
      out.write("                                    {icon: 'pencil', handler: {fn: function (e) {\n");
      out.write("                                                location = 'editor.jsp?id=' + id + '&b=");
      out.print(id);
      out.write("';\n");
      out.write("                                            }, type: 'click'}}]}).render(ins);\n");
      out.write("                            textR(ins, instance, 'textOut');\n");
      out.write("                        } else if (id.indexOf(\"calendar\") == 0) {\n");
      out.write("                            widget(ins, 'eventsVid');\n");
      out.write("                        } else if (id.indexOf(\"Birthday\") == 0) {\n");
      out.write("                            widget(ins, 'birthOut');\n");
      out.write("                        } else if (id.indexOf(\"newComers\") == 0) {\n");
      out.write("                            widget(ins, 'newComers');\n");
      out.write("                        } else if (id.indexOf(\"newDocsK\") == 0) {\n");
      out.write("                            widget(ins, 'newDocK');\n");
      out.write("                        } else if (id.indexOf(\"newDocs\") == 0) {\n");
      out.write("                            widget(ins, 'newDoc');\n");
      out.write("                        } else if (id.indexOf(\"newNews\") == 0) {\n");
      out.write("                            widget(ins, 'newNews');\n");
      out.write("                        } else if (id.indexOf(\"newGal\") == 0) {\n");
      out.write("                            widget(ins, 'newGal');\n");
      out.write("                        } else if (id.indexOf(\"newKGal\") == 0) {\n");
      out.write("                            widget(ins, 'newKGal');\n");
      out.write("                        } else if (id.indexOf(\"newDesk\") == 0) {\n");
      out.write("                            widget(ins, 'newDesk');\n");
      out.write("                        } else if (id.indexOf(\"newBlog\") == 0) {\n");
      out.write("                            widget(ins, 'newBlog');\n");
      out.write("                        } else if (id.indexOf(\"newBBlog\") == 0) {\n");
      out.write("                            widget(ins, 'newBBlog');\n");
      out.write("                        } else if (id.indexOf(\"newPhotos\") == 0) {\n");
      out.write("                            widget(ins, 'NewPhotos');\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("                function widget(ins, servlet) {\n");
      out.write("                    var instance = new A.Panel({collapsible: false, collapsed: false, headerContent: '', bodyContent: '',\n");
      out.write("                        icons: [{icon: 'closethick', handler: {fn: function (e) {\n");
      out.write("                                        if (confirm(\"Удалить элемент?\")) {\n");
      out.write("                                            ins.empty().unplug().remove();\n");
      out.write("                                            fixElements();\n");
      out.write("                                        }\n");
      out.write("                                    }, type: 'click'}}]}).render(ins);\n");
      out.write("                    textR(ins, instance, servlet);\n");
      out.write("                }\n");
      out.write("                function textR(ins, instance, servlet) {\n");
      out.write("                    var node = ins;\n");
      out.write("                    var width = Math.round(A.Number.parse(node.getComputedStyle('width').split('px')[0]));\n");
      out.write("                    var nodeFontSize = A.Number.parse(node.getComputedStyle('fontSize').split('px')[0]);\n");
      out.write("                    var classNode = \"exxo-width-normal\";\n");
      out.write("                    if (width <= 250)\n");
      out.write("                        classNode = \"exxo-width-small\";\n");
      out.write("                    else if (width > 400)\n");
      out.write("                        classNode = \"exxo-width-big\";\n");
      out.write("                    var id = ins.getAttribute('id');\n");
      out.write("                    var x2 = id;\n");
      out.write("                    var title = '';\n");
      out.write("                    var text = '';\n");
      out.write("                    A.io.request(servlet, {dataType: 'text', cache: false, data: {id: x2, width: width, font: nodeFontSize}, method: 'post',\n");
      out.write("                        on: {success: function (event, id, xhr) {\n");
      out.write("                                var Datas = this.get('responseData');\n");
      out.write("                                instance.set('bodyContent', Datas);\n");
      out.write("                                if (ins.get('parentNode')) {\n");
      out.write("                                    if (servlet == 'textOut' || servlet == 'newNews') {\n");
      out.write("                                        node.all('img').each(function () {\n");
      out.write("                                            var style = this.getStyle('display');\n");
      out.write("                                            this.setStyle('display', 'none');\n");
      out.write("                                            width = Math.round(A.Number.parse(node.one('>div>div>div>div').getComputedStyle('width').split('px')[0]));\n");
      out.write("                                            this.setStyle('maxWidth', width + 'px');\n");
      out.write("                                            this.setStyle('display', style);\n");
      out.write("                                        });\n");
      out.write("                                    } else if (servlet == 'NewPhotos') {\n");
      out.write("                                        scrollViewH(node, \".IMG ul\", servlet, x2);\n");
      out.write("                                    } else if (servlet == 'newBlog' || servlet == 'newBBlog') {\n");
      out.write("                                        scrollView(node, \"div.newBlogsContent ul\", servlet, x2);\n");
      out.write("                                    } else if (servlet == 'newDoc' || servlet == 'newDocK') {\n");
      out.write("                                        scrollView(node, \"div.newDocsContent ul\", servlet, x2);\n");
      out.write("                                    } else if (servlet == 'newDesk') {\n");
      out.write("                                        var component = new A.Scroller({contentBox: node.one('.desk'), height: sv_height, orientation: 'vertical', duration: 0.5}).render();\n");
      out.write("                                    } else if (servlet == 'newGal' || servlet == 'newKGal') {\n");
      out.write("                                        scrollViewH(node, \"div.newGalsContent\", servlet, x2);\n");
      out.write("                                    }\n");
      out.write("                                }\n");
      out.write("                            }}});\n");
      out.write("                }\n");
      out.write("                var PortletItem = function () {\n");
      out.write("                    PortletItem.superclass.constructor.apply(this, arguments);\n");
      out.write("                };\n");
      out.write("                PortletItem.NAME = 'PortletItem';\n");
      out.write("                PortletItem.ATTRS = {\n");
      out.write("                    dd: {value: {target: false}}, lazyStart: {value: true},\n");
      out.write("                    proxyNode: {value: proxyNode}, itemContainer: {value: A.one('.portlet-list')}};\n");
      out.write("                A.extend(PortletItem, A.PortalLayout, {\n");
      out.write("                    _getAppendNode: function () {\n");
      out.write("                        var instance = this;\n");
      out.write("                        instance.appendNode = DDM.activeDrag.get('node').cloneNode(true);\n");
      out.write("                        return instance.appendNode;\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("                var portletListT = new PortletItem({dragNodes: '#text-element'});\n");
      out.write("                portletListT.on('drag:end', function (event) {\n");
      out.write("                    var D = new Date();\n");
      out.write("                    var id = 'text_' + D.getTime() + '-' +");
      out.print( user_id);
      out.write(";\n");
      out.write("                    alterText(user, id, 'insertText');\n");
      out.write("                    var newText = A.Node.create('<div class=\"portlet\" id=\"' + id + '\"></div>');\n");
      out.write("                    if (portletListT.appendNode && portletListT.appendNode.inDoc()) {\n");
      out.write("                        portletListT.appendNode.replace(newText);\n");
      out.write("                    }\n");
      out.write("                    var BodyContent = '<span class=\"aui-button-icon aui-icon aui-icon-loading\"></span>';\n");
      out.write("                    var instance = new A.Panel({collapsible: false, collapsed: false, headerContent: '', bodyContent: BodyContent, icons: [\n");
      out.write("                            {icon: 'closethick', handler: {fn: function (e) {\n");
      out.write("                                        if (confirm(\"Удалить элемент?\")) {\n");
      out.write("                                            alterText(user, id, 'deleteText');\n");
      out.write("                                            newText.empty().unplug().remove();\n");
      out.write("                                            fixElements();\n");
      out.write("                                        }\n");
      out.write("                                    }, type: 'click'}},\n");
      out.write("                            {icon: 'pencil', handler: {fn: function (e) {\n");
      out.write("                                        location = 'editor.jsp?id=' + id + '&b=");
      out.print(id);
      out.write("';\n");
      out.write("                                    }, type: 'click'}}],\n");
      out.write("                        after: {init: function (event) {\n");
      out.write("                                fixElements();\n");
      out.write("                            }}}).render(newText);\n");
      out.write("                });\n");
      out.write("                makeAPortlet('#my-birthday', 'Birthday', 'birthOut');\n");
      out.write("                makeAPortlet('#my-NC', 'newComers', 'newComers');\n");
      out.write("                makeAPortlet('#my-news', 'newNews', 'newNews');\n");
      out.write("                makeAPortlet('#my-gal', 'newGal', 'newGal');\n");
      out.write("                makeAPortlet('#my-Kgal', 'newKGal', 'newKGal');\n");
      out.write("                makeAPortlet('#my-desk', 'newDesk', 'newDesk');\n");
      out.write("                makeAPortlet('#my-P', 'newPhotos', 'NewPhotos');\n");
      out.write("                makeAPortlet('#my-calendar', 'calendar', 'eventsVid');\n");
      out.write("                function makeAPortlet(dragNode, aimNode, servlet) {\n");
      out.write("                    var portletListB = new PortletItem({dragNodes: dragNode});\n");
      out.write("                    portletListB.on('drag:end', function (event) {\n");
      out.write("                        var newBirthday = A.Node.create('<div class=\"portlet\" id=\"' + aimNode + '\"></div>');\n");
      out.write("                        if (portletListB.appendNode && portletListB.appendNode.inDoc()) {\n");
      out.write("                            portletListB.appendNode.replace(newBirthday);\n");
      out.write("                        }\n");
      out.write("                        var BodyContent = '<span class=\"aui-button-icon aui-icon aui-icon-loading\"></span>';\n");
      out.write("                        var inst;\n");
      out.write("                        var instance = new A.Panel({collapsible: false, collapsed: false, headerContent: '', bodyContent: BodyContent, icons: [\n");
      out.write("                                {icon: 'closethick', handler: {fn: function (e) {\n");
      out.write("                                            if (confirm(\"Удалить элемент?\")) {\n");
      out.write("                                                newBirthday.empty().unplug().remove();\n");
      out.write("                                                fixElements();\n");
      out.write("                                            }\n");
      out.write("                                        }, type: 'click'}}],\n");
      out.write("                            after: {init: function (event) {\n");
      out.write("                                    inst = this;\n");
      out.write("                                    textR(newBirthday, inst, servlet);\n");
      out.write("                                    fixElements();\n");
      out.write("                                }}}).render(newBirthday);\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("            ");
 if (!trig) {
      out.write("\n");
      out.write("                new A.Toolbar({activeState: true, children: [\n");
      out.write("                        {label: 'Sonlandır', icon: 'check', handler: {fn: function (e) {\n");
      out.write("                                    location = \"index.jsp?id=");
      out.print(id);
      out.write("\"\n");
      out.write("                                }}},\n");
      out.write("                        {label: 'Добавить элемент', icon: 'circle-plus', handler: {fn: function (e) {\n");
      out.write("                                    pListShow()\n");
      out.write("                                }}},\n");
      out.write("                        {label: 'Новая страница', icon: 'document', handler: {fn: function (e) {\n");
      out.write("                                    location = 'addNew';\n");
      out.write("                                }}},\n");
      out.write("                        {label: 'Название страницы', icon: 'pencil', handler: {fn: function (e) {\n");
      out.write("                                    changeTitle(");
      out.print(id);
      out.write(',');
      out.write(' ');
      out.write('"');
      out.print(title);
      out.write("\")\n");
      out.write("                                }}},\n");
      out.write("                        {label: 'Удалить страницу', icon: 'closethick', handler: {fn: function (e) {\n");
      out.write("                                    if (confirm(\"Удалить страницу?\"))\n");
      out.write("                                        closePage(");
      out.print(id);
      out.write(")\n");
      out.write("                                }}},\n");
      out.write("                        {label: 'Список страниц', icon: 'script', handler: {fn: function (e) {\n");
      out.write("                                    location = \"listPage.jsp?user=\" + user;\n");
      out.write("                                }}},\n");
      out.write("                        {label: 'Лого', icon: 'image', handler: {fn: function (e) {\n");
      out.write("                                    location = \"logoIns.jsp\";\n");
      out.write("                                }}}\n");
      out.write("                        //{label: 'Активировать',icon: 'key',handler: {fn: function(e){location='/WELLCOME/register.xhtml';}}}\n");
      out.write("                    ]}).render(A.one('#header1'));\n");
      out.write("            ");
} else {
      out.write("\n");
      out.write("                new A.Toolbar({activeState: false, children: [\n");
      out.write("                        {label: 'Sonlandır', icon: 'check', handler: {fn: function (e) {\n");
      out.write("                                    location = \"index.jsp?id=");
      out.print(id);
      out.write("\"\n");
      out.write("                                }}},\n");
      out.write("                        {label: 'Добавить элемент', icon: 'circle-plus', handler: {fn: function (e) {\n");
      out.write("                                    pListShow()\n");
      out.write("                                }}},\n");
      out.write("                        {label: 'Новая страница', icon: 'document', handler: {fn: function (e) {\n");
      out.write("                                    location = 'addNew';\n");
      out.write("                                }}},\n");
      out.write("                        {label: 'Название страницы', icon: 'pencil', handler: {fn: function (e) {\n");
      out.write("                                    changeTitle(");
      out.print(id);
      out.write(',');
      out.write(' ');
      out.write('"');
      out.print(title);
      out.write("\")\n");
      out.write("                                }}},\n");
      out.write("                        {label: 'Удалить страницу', icon: 'closethick', handler: {fn: function (e) {\n");
      out.write("                                    if (confirm(\"Удалить страницу?\"))\n");
      out.write("                                        closePage(");
      out.print(id);
      out.write(")\n");
      out.write("                                }}},\n");
      out.write("                        {label: 'Список страниц', icon: 'script', handler: {fn: function (e) {\n");
      out.write("                                    location = \"listPage.jsp?user=\" + user;\n");
      out.write("                                }}},\n");
      out.write("                        {label: 'Лого', icon: 'image', handler: {fn: function (e) {\n");
      out.write("                                    location = \"logoIns.jsp\";\n");
      out.write("                                }}}\n");
      out.write("                    ]}).render(A.one('#header1'));\n");
      out.write("            ");
}
      out.write("\n");
      out.write("                new A.Toolbar({activeState: false, children: [\n");
      out.write("                        {label: 'Стиль общий', icon: 'script', handler: {fn: function (e) {\n");
      out.write("                                    location = 'css.jsp';\n");
      out.write("                                }}},\n");
      out.write("                        {label: 'Стиль страницы', icon: 'script', handler: {fn: function (e) {\n");
      out.write("                                    location = 'styleP.jsp?id=");
      out.print(id);
      out.write("';\n");
      out.write("                                }}},\n");
      out.write("                        {label: 'Стили сервисов', icon: 'script', handler: {fn: function (e) {\n");
      out.write("                                    location = 'styleList.jsp';\n");
      out.write("                                }}},\n");
      out.write("                        {label: 'Справка', icon: 'help', handler: {fn: function (e) {\n");
      out.write("                                    window.open('http://exxo.ru/intranet/howto/CMS/');\n");
      out.write("                                }}}\n");
      out.write("                    ]}).render(A.one('#header2'));\n");
      out.write("                function alterText(user, id, servlet) {\n");
      out.write("                    var io = A.io.request(servlet, {cache: false, data: {user: user, id: id}, method: 'post'});\n");
      out.write("                }\n");
      out.write("                function fixElements() {\n");
      out.write("                    var page_id = ");
      out.print(id);
      out.write(";\n");
      out.write("                    var grid = A.one('#grid');\n");
      out.write("                    grid.all('div, span').each(function () {\n");
      out.write("                        this.removeAttribute('_yuid');\n");
      out.write("                    });\n");
      out.write("                    var node = grid.cloneNode(true);\n");
      out.write("                    node.all('.column').removeClass('yui3-dd-drop');\n");
      out.write("                    node.all('.column div').setAttribute('class', 'portlet');\n");
      out.write("                    node.all('.column div').empty();\n");
      out.write("                    node.one('div#menu').empty();\n");
      out.write("                    node.all('div, tbody, td, tr').each(function () {\n");
      out.write("                        this.removeAttribute('_yuid');\n");
      out.write("                    });\n");
      out.write("                    var structure = node.outerHTML();\n");
      out.write("                    node.remove();\n");
      out.write("                    node.destroy();\n");
      out.write("                    alterText(page_id, structure, 'insStructure');\n");
      out.write("                }\n");
      out.write("                function pListShow() {\n");
      out.write("                    var pl = A.one(\"#animList\");\n");
      out.write("                    pl.setStyle('display', 'block');\n");
      out.write("                    an.run();\n");
      out.write("                }\n");
      out.write("                function pListHide() {\n");
      out.write("                    an1.run();\n");
      out.write("                }\n");
      out.write("                var an = new A.Anim({node: \"#animList\", duration: 0.85, easing: A.Easing.elasticOut, from: {xy: [-200, 100]}, to: {xy: [200, 100]}});\n");
      out.write("                var an1 = new A.Anim({node: \"#animList\", duration: 0.8, easing: A.Easing.elasticOut, from: {xy: [200, 100]}, to: {xy: [-200, 100]}});\n");
      out.write("                an1.on('end', function () {\n");
      out.write("                    var pl = A.one(\"#animList\");\n");
      out.write("                    pl.setStyle('display', 'none');\n");
      out.write("                });\n");
      out.write("                function changeTitle(id, title) {\n");
      out.write("                    var name = window.prompt(\"Введите новое название страницы\", title);\n");
      out.write("                    if (name) {\n");
      out.write("                        alterText(name, id, \"changeTitle\");\n");
      out.write("                        document.title = name;\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("                function closePage() {\n");
      out.write("                    var pageId =");
      out.print(id);
      out.write(";\n");
      out.write("                    if (pageId == 2) {\n");
      out.write("                        alert(\"Нельзя удалить главную страницу!\");\n");
      out.write("                        return;\n");
      out.write("                    }\n");
      out.write("                    A.all(\".portlet\").each(function () {\n");
      out.write("                        var idNode = this.getAttribute(\"id\");\n");
      out.write("                        if (idNode.indexOf(\"text\") >= 0)\n");
      out.write("                            alterText(user, idNode, 'deleteText');\n");
      out.write("                    });\n");
      out.write("                    var str = \"=");
      out.print(id);
      out.write("$\";\n");
      out.write("                    var re = new RegExp(str);\n");
      out.write("                    A.all(\"#menus a\").each(function () {\n");
      out.write("                        if (this.getAttribute(\"href\").match(re))\n");
      out.write("                            this.get('parentNode').unplug().remove().destroy();\n");
      out.write("                    });\n");
      out.write("                    A.io.request(\"menu\", {cache: false, data: {menu: A.one('#menus').html()}, method: 'post',\n");
      out.write("                        on: {end: function () {\n");
      out.write("                                A.io.request(\"deletePage\", {cache: false, data: {menu: \"");
      out.print(id);
      out.write("\"}, method: 'post',\n");
      out.write("                                    on: {end: function () {\n");
      out.write("                                            location = \"main.jsp\";\n");
      out.write("                                        }}\n");
      out.write("                                })\n");
      out.write("                            }}\n");
      out.write("                    })\n");
      out.write("                }\n");
      out.write("                function alterMenu(menu, servlet) {\n");
      out.write("                    var io = A.io.request(servlet, {cache: false, data: {menu: menu}, method: 'post'});\n");
      out.write("                }\n");
      out.write("                new A.DD.Drag({node: A.one('#animList'), haltDown: false});\n");
      out.write("                A.one('#content-wrapper').setStyle('minHeight', A.DOM.winHeight() + 'px');\n");
      out.write("\n");
      out.write("\n");
      out.write("                A.one('#op1').on('change', function () {\n");
      out.write("                    A.all('.portlet-list div.portlet-item').setStyle('display', 'none');\n");
      out.write("                    A.all('.other').setStyle('display', 'none');\n");
      out.write("                    var v = this.get('value');\n");
      out.write("                    A.all('.portlet-list div.portlet-item').setStyle('display', 'none');\n");
      out.write("                    if (v == 'calendar')\n");
      out.write("                        A.one('#my-calendar').setStyle('display', 'block');\n");
      out.write("                    else if (v == 'text')\n");
      out.write("                        A.one('#text-element').setStyle('display', 'block');\n");
      out.write("                    else if (v == 'birthday')\n");
      out.write("                        A.one('#my-birthday').setStyle('display', 'block');\n");
      out.write("                    else if (v == 'bloges') {\n");
      out.write("                        var op3 = A.one(\"#op3\");\n");
      out.write("                        op3.set('value', '0');\n");
      out.write("                        op3.setStyle('display', 'block');\n");
      out.write("                        var op4 = A.one(\"#op4\");\n");
      out.write("                        op4.set('value', '0');\n");
      out.write("                        op4.setStyle('display', 'block');\n");
      out.write("                        var op5 = A.one(\"#op5\");\n");
      out.write("                        op5.set('value', '0');\n");
      out.write("                        op5.setStyle('display', 'block');\n");
      out.write("                    } else if (v == 'docs') {\n");
      out.write("                        var op6 = A.one(\"#op6\");\n");
      out.write("                        op6.set('value', '0');\n");
      out.write("                        op6.setStyle('display', 'block');\n");
      out.write("                        var op7 = A.one(\"#op7\");\n");
      out.write("                        op7.set('value', '0');\n");
      out.write("                        op7.setStyle('display', 'block');\n");
      out.write("                    } else if (v == 'faces')\n");
      out.write("                        A.one('#my-NC').setStyle('display', 'block');\n");
      out.write("                    else if (v == 'desk')\n");
      out.write("                        A.one('#my-desk').setStyle('display', 'block');\n");
      out.write("                    else if (v == 'photos')\n");
      out.write("                        A.one('#my-P').setStyle('display', 'block');\n");
      out.write("                    else if (v == 'albums') {\n");
      out.write("                        var op2 = A.one(\"#op2\");\n");
      out.write("                        op2.set('value', '0');\n");
      out.write("                        op2.setStyle('display', 'block');\n");
      out.write("                    } else if (v == 'news')\n");
      out.write("                        A.one('#my-news').setStyle('display', 'block');\n");
      out.write("                });\n");
      out.write("                A.one('#op2').on('change', function () {\n");
      out.write("                    var v = this.get('value');\n");
      out.write("                    A.all('.portlet-list div.portlet-item').setStyle('display', 'none');\n");
      out.write("                    if (v == '1')\n");
      out.write("                        A.one('#my-gal').setStyle('display', 'block');\n");
      out.write("                    else if (v == '2')\n");
      out.write("                        A.one('#my-Kgal').setStyle('display', 'block');\n");
      out.write("                });\n");
      out.write("                A.one('#op5').on('change', function () {\n");
      out.write("                    var v = this.get('value');\n");
      out.write("                    var s = \"my-b\";\n");
      out.write("                    var m = \"\";\n");
      out.write("                    var b = A.one('#op3').get('value');\n");
      out.write("                    var i = A.one('#op4').get('value');\n");
      out.write("                    if (b == 1)\n");
      out.write("                        m = 'a';\n");
      out.write("                    else if (b == 2)\n");
      out.write("                        m = 'b';\n");
      out.write("                    if (i == 1)\n");
      out.write("                        m += 'A';\n");
      out.write("                    else if (i == 2)\n");
      out.write("                        m += 'I';\n");
      out.write("                    else\n");
      out.write("                        m += 'O';\n");
      out.write("                    A.all('.portlet-list div.portlet-item').setStyle('display', 'none');\n");
      out.write("                    m += '_' + v;\n");
      out.write("                    s += m;\n");
      out.write("                    A.one('#' + s).setStyle('display', 'block');\n");
      out.write("                });\n");
      out.write("                A.one('#op7').on('change', function () {\n");
      out.write("                    var v = this.get('value');\n");
      out.write("                    var s = \"my-D\";\n");
      out.write("                    var m = \"\";\n");
      out.write("                    var i = A.one('#op6').get('value');\n");
      out.write("                    m += i;\n");
      out.write("                    A.all('.portlet-list div.portlet-item').setStyle('display', 'none');\n");
      out.write("                    m += '_' + v;\n");
      out.write("                    s += m;\n");
      out.write("                    A.one('#' + s).setStyle('display', 'block');\n");
      out.write("                });\n");
      out.write("\n");
      out.write("                A.one('#op3').on(\"change\", function () {\n");
      out.write("                    if (A.one('#op5').get('value') != 0)\n");
      out.write("                        A.one('#op5').set('value', '0');\n");
      out.write("                });\n");
      out.write("                A.one('#op4').on(\"change\", function () {\n");
      out.write("                    if (A.one('#op5').get('value') != 0)\n");
      out.write("                        A.one('#op5').set('value', '0');\n");
      out.write("                });\n");
      out.write("                A.one('#op6').on(\"change\", function () {\n");
      out.write("                    if (A.one('#op7').get('value') != 0)\n");
      out.write("                        A.one('#op7').set('value', '0');\n");
      out.write("                });\n");
      out.write("                var S = ['a', 'b'];\n");
      out.write("                var B = ['A', 'I', 'O'];\n");
      out.write("\n");
      out.write("                for (var i = 1; i <= 2; i++) {\n");
      out.write("                    for (var y = 1; y <= 3; y++) {\n");
      out.write("                        for (var k = 1; k <= 7; k++) {\n");
      out.write("                            var m = S[i - 1] + B[y - 1] + \"_\" + k;\n");
      out.write("                            var s = '<div class=\"portlet-item my-b' + m + '\" id=\"my-b' + m + '\"><span class=\"aui-button-icon aui-icon aui-icon-image\"></span>перетащите в нужное место</div>';\n");
      out.write("                            A.one('.portlet-list').append(s);\n");
      out.write("                            makeAPortlet('#my-b' + m, 'newBlog_' + m, 'newBlog');\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                for (var y = 1; y <= 6; y++) {\n");
      out.write("                    for (var k = 1; k <= 7; k++) {\n");
      out.write("                        var m = y + \"_\" + k;\n");
      out.write("                        var s = '<div class=\"portlet-item my-D' + m + '\" id=\"my-D' + m + '\"><span class=\"aui-button-icon aui-icon aui-icon-image\"></span>перетащите в нужное место</div>';\n");
      out.write("                        A.one('.portlet-list').append(s);\n");
      out.write("                        makeAPortlet('#my-D' + m, 'newDocs_' + m, 'newDoc');\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("                function appender(x2, servlet, sv, count, node) {\n");
      out.write("                    var width = Math.round(A.Number.parse(node.getComputedStyle('width').split('px')[0]));\n");
      out.write("                    var nodeFontSize = A.Number.parse(node.getComputedStyle('fontSize').split('px')[0]);\n");
      out.write("                    var content = sv.get('contentBox');\n");
      out.write("                    A.io.request(\"add_\" + servlet, {\n");
      out.write("                        dataType: 'text',\n");
      out.write("                        cache: false,\n");
      out.write("                        data: {id: x2, count: count, width: width, font: nodeFontSize},\n");
      out.write("                        method: 'post',\n");
      out.write("                        on: {success: function (event, id, xhr) {\n");
      out.write("                                content.append(this.get('responseData'));\n");
      out.write("                                sv.set('height', sv_height + 10 + \"px\");\n");
      out.write("                                sv.set('height', sv_height + \"px\");\n");
      out.write("                                sv.syncUI();\n");
      out.write("                                contentDelegate(sv);\n");
      out.write("                            }}});\n");
      out.write("                }\n");
      out.write("                ;\n");
      out.write("                function contentDelegate(sv) {\n");
      out.write("                    var content = sv.get(\"contentBox\");\n");
      out.write("                    content.delegate(\"click\", function (e) {\n");
      out.write("                        if (Math.abs(sv.lastScrolledAmt) > 2) {\n");
      out.write("                            e.preventDefault();\n");
      out.write("                        }\n");
      out.write("                    }, \"a\");\n");
      out.write("                    content.delegate(\"mousedown\", function (e) {\n");
      out.write("                        e.preventDefault();\n");
      out.write("                    }, \"a, li\");\n");
      out.write("                }\n");
      out.write("                function scrollView(node, string, servlet, x2) {\n");
      out.write("                    var count = 1;\n");
      out.write("                    var sv = new A.ScrollView({srcNode: node.one(string), height: sv_height, axis: \"y\", flick: {\n");
      out.write("                            minDistance: 10, minVelocity: 0.3, axis: \"y\"},\n");
      out.write("                        on: {'scrollEnd': function () {\n");
      out.write("                                if (sv.pages.get('index') == 0 && up != null)\n");
      out.write("                                    up.addClass('exxo-hidden');\n");
      out.write("                                else if (sv.pages.get('index') != 0)\n");
      out.write("                                    up.removeClass('exxo-hidden');\n");
      out.write("                                var h = 0;\n");
      out.write("                                sv.get('contentBox').all('table').each(function () {\n");
      out.write("                                    h += this.outerHeight();\n");
      out.write("                                });\n");
      out.write("                                if (count < 10 && (Math.abs(sv.get('scrollY') - h) < (sv_height + 200 * count))) {\n");
      out.write("                                    appender(x2, servlet, sv, count, node);\n");
      out.write("                                    count++;\n");
      out.write("                                }\n");
      out.write("                            }}\n");
      out.write("                    });\n");
      out.write("                    sv.plug(A.Plugin.ScrollViewPaginator, {selector: 'li'});\n");
      out.write("                    sv.render();\n");
      out.write("                    contentDelegate(sv);\n");
      out.write("                    node.setStyle('position', 'relative');\n");
      out.write("                    var up = A.Node.create(\"<div class='exxo-scrollview-up exxo-hidden'></div>\");\n");
      out.write("                    node.append(up);\n");
      out.write("                    up.on('click', function () {\n");
      out.write("                        sv.pages.scrollTo(0, 0.6, \"ease-in\");\n");
      out.write("                    });\n");
      out.write("                    var buts = A.Node.create(\"<div class='exxo-scrollview-buttons'></div>\");\n");
      out.write("                    node.append(buts);\n");
      out.write("                    var back = A.Node.create(\"<button class='exxo-scrollview-back'></button>\");\n");
      out.write("                    buts.append(back);\n");
      out.write("                    var next = A.Node.create(\"<button class='exxo-scrollview-next'></button>\");\n");
      out.write("                    buts.append(next);\n");
      out.write("                    next.on('click', function () {\n");
      out.write("                        sv.pages.next();\n");
      out.write("                    });\n");
      out.write("                    back.on('click', function () {\n");
      out.write("                        sv.pages.prev();\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("                function scrollViewH(node, string, servlet, x2) {\n");
      out.write("                    node.addClass('exxo-hidden');\n");
      out.write("                    var nodeW = Math.round(A.Number.parse(node.get('parentNode').getComputedStyle('width').split('px')[0]));\n");
      out.write("                    node.removeClass('exxo-hidden');\n");
      out.write("                    var count = 1;\n");
      out.write("                    var sv = new A.ScrollView({srcNode: node.one(string), height: 150, width: nodeW - 16, axis: \"x\", flick: false, drag: false,\n");
      out.write("                        on: {'scrollEnd': function () {\n");
      out.write("                                if (sv.pages.get('index') == 0 && up != null)\n");
      out.write("                                    up.addClass('exxo-hidden');\n");
      out.write("                                else if (sv.pages.get('index') != 0)\n");
      out.write("                                    up.removeClass('exxo-hidden');\n");
      out.write("                                node.all('.unload_' + (this.pages.get('index') + 1)).removeClass('exxo-loading');\n");
      out.write("                            },\n");
      out.write("                            'render': function () {\n");
      out.write("                                node.all('.unload_' + this.pages.get('index')).removeClass('exxo-loading');\n");
      out.write("                                A.all('.unload_' + (this.pages.get('index') + 1)).removeClass('exxo-loading');\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("                    sv.plug(A.Plugin.ScrollViewPaginator, {selector: 'li'});\n");
      out.write("                    sv.render();\n");
      out.write("                    node.setStyle('position', 'relative');\n");
      out.write("                    var up = A.Node.create(\"<div class='exxo-scrollview-up exxo-hidden'></div>\");\n");
      out.write("                    node.append(up);\n");
      out.write("                    up.on('click', function () {\n");
      out.write("                        sv.pages.scrollTo(0, 0.6, \"ease-in\");\n");
      out.write("                    });\n");
      out.write("                    var buts = A.Node.create(\"<div class='exxo-scrollview-buttons'></div>\");\n");
      out.write("                    node.append(buts);\n");
      out.write("                    var back = A.Node.create(\"<button class='exxo-scrollview-back'></button>\");\n");
      out.write("                    buts.append(back);\n");
      out.write("                    var next = A.Node.create(\"<button class='exxo-scrollview-next'></button>\");\n");
      out.write("                    buts.append(next);\n");
      out.write("                    next.on('click', function () {\n");
      out.write("                        sv.pages.next();\n");
      out.write("                    });\n");
      out.write("                    back.on('click', function () {\n");
      out.write("                        sv.pages.prev();\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("            YUI().ready('node-menunav', function (A) {\n");
      out.write("                var menu = A.one(\"#menus\");\n");
      out.write("                menu.plug(A.Plugin.NodeMenuNav, {submenuHideDelay: 1000, mouseOutHideDelay: 50, submenuShowDelay: 50});\n");
      out.write("                menu.get(\"ownerDocument\").get(\"documentElement\").removeClass(\"yui3-loading\");\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
