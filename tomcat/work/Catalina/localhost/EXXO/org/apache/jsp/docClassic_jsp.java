/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.9
 * Generated at: 2018-08-16 10:24:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class docClassic_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      BEANS.SLOGAN SLOGAN = null;
      synchronized (application) {
        SLOGAN = (BEANS.SLOGAN) _jspx_page_context.getAttribute("SLOGAN", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (SLOGAN == null){
          SLOGAN = new BEANS.SLOGAN();
          _jspx_page_context.setAttribute("SLOGAN", SLOGAN, javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        }
      }
      out.write('\n');
      BEANS.CSSTotal CSS = null;
      synchronized (application) {
        CSS = (BEANS.CSSTotal) _jspx_page_context.getAttribute("CSS", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (CSS == null){
          CSS = new BEANS.CSSTotal();
          _jspx_page_context.setAttribute("CSS", CSS, javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        }
      }
      out.write('\n');
      BEANS.css1Bean CSS3 = null;
      CSS3 = (BEANS.css1Bean) _jspx_page_context.getAttribute("CSS3", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (CSS3 == null){
        CSS3 = new BEANS.css1Bean();
        _jspx_page_context.setAttribute("CSS3", CSS3, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      BEANS.DocClassic DC = null;
      DC = (BEANS.DocClassic) _jspx_page_context.getAttribute("DC", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (DC == null){
        DC = new BEANS.DocClassic();
        _jspx_page_context.setAttribute("DC", DC, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }

    String slogan = SLOGAN.getSlogan(request);
    String own = "";
    String owner = request.getParameter("owner");
    String id = request.getParameter("id");
    DC.getParams(request);
    String c = DC.c + "";
    String v = DC.v + "";
    String free = DC.free + "%";
    if (DC.free <= 0) {
        free = "<span style='color:red;'>yer yoxdur</span>";
    }
    boolean editable = false;
    String role = (String) session.getAttribute("role");
    if (owner == null || (role.indexOf("o") >= 0 && owner.equals("-100")) || (role.indexOf("p") >= 0 && owner.equals("-101"))
            || (role.indexOf("q") >= 0 && owner.equals("-102")) || (role.indexOf("r") >= 0 && owner.equals("-103"))) {
        editable = true;
    }
    String data = "";
    if (owner != null) {
        data = ", data: {owner: \"" + owner + "\"}";
        own = "&owner=" + owner;
    }
    boolean general = false;
    if (owner != null && owner.equals("-100")) {
        general = true;
    }

      out.write("\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n");
      out.write("        <title>Sənədlər</title>\n");
      out.write("        <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"/>\n");
      out.write("        <meta http-equiv=\"content-style-type\" content=\"text/css\"/>\n");
      out.write("        <link rel=\"stylesheet\" href=\"/FILES/alloy/build/aui-skin-classic/css/aui-skin-classic-all-min.css\" type=\"text/css\" media=\"screen\" />\n");
      out.write("        <script src=\"/FILES/alloy/build/aui/aui.js\" type=\"text/javascript\"></script>\n");
      out.write("        <link rel=\"stylesheet\" href=\"index.css\" type=\"text/css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"blue.css\" type=\"text/css\" />\n");
      out.write("        <style type=\"text/css\">\n");
      out.write("            @import url('css/topMenu.css');\n");
      out.write("            @import url('css/exxo.css');\n");
      out.write("            td.choose {width: 20px; background-image: none;}\n");
      out.write("            .file-hover td.choose {background-image: url(\"check.png\"); background-position: center center;background-repeat: no-repeat;}\n");
      out.write("            #panel a {padding-right: 25px;}\n");
      out.write("            #panel {margin-bottom: 10px;}\n");
      out.write("            .fil {cursor: pointer;}\n");
      out.write("            .cat {cursor: pointer;}\n");
      out.write("            .item-hover {background: red;}\n");
      out.write("            .item-hover  a {color: white;}\n");
      out.write("            #main {position: relative;margin: 25px; margin-left: 10px; width:auto;height: auto;margin-bottom: 10px;background-color: white;padding: 4px;overflow-y: auto;overflow-x: hidden;}\n");
      out.write("            .hov{ color:black; background-color: white;}\n");
      out.write("            .inno{margin:5px;margin-left:20px;}\n");
      out.write("            div.cat {background-image: url(\"folder_closed.png\");background-position: left;background-repeat: no-repeat; padding:6px; padding-left: 20px;}\n");
      out.write("            .file-hover {background-color: #E3E2FD !important;}\n");
      out.write("            .filepath{color:gray;}\n");
      out.write("            table#small {width: 100%;}\n");
      out.write("            #tdmain {width:70%;}\n");
      out.write("            #tdinfo{width:30%;}\n");
      out.write("            #info, #info1 {margin:0px 25px;width:auto;height: 100%;margin-left: 0px;padding: 4px;background-color: rgb(252, 252, 252);}\n");
      out.write("            table#files {width:100%}\n");
      out.write("            table#files td {text-align: left;}\n");
      out.write("            td.icon {width:20px; height:24px;}\n");
      out.write("            td.fname, td.name {padding-left:20px; max-width: 200px;}\n");
      out.write("            td.created {font-size: 10px; color: #3B3B8F; width:70px; padding-right: 4px;padding-left: 4px;}\n");
      out.write("            td.dop {width: 20px;}\n");
      out.write("            tr.cat td.icon {background-image: url(\"folder_closed.png\");background-position: center center;background-repeat: no-repeat;}\n");
      out.write("            #tdinfo #info img#dop {border: 0;}\n");
      out.write("            #tags a{margin-right: 6px;}\n");
      out.write("            table#files tr:nth-of-type(odd) {background-color: #F5F2F2;}\n");
      out.write("            #counts {width: 150px;font-size:11px;margin: 10px; margin-top: 25px; color: black;border-color: #DEDEDE #DEDEDE #BFBFBF #DEDEDE;border-width: 1px;border-style: solid;padding: 10px;\n");
      out.write("                     background-color: white}\n");
      out.write("            #counts td.res{color:#3B3B8F; text-align: right;}\n");
      out.write("            #counts table {width: 100%;margin-bottom: 10px;}\n");
      out.write("            #edit1 button, #edit2 button {height: 24px; padding-top: 5px; min-width: 26px;}\n");
      out.write("            .lable {font-size:12px; padding:5px;}\n");
      out.write("            div#edit1, div#edit2 {margin-bottom:0px;}\n");
      out.write("            #info1 {border-color: #DEDEDE #DEDEDE #BFBFBF #DEDEDE;border-width: 1px;border-style: solid; background-color: #EEEEF1;}\n");
      out.write("            #info1 td.td2 {padding-left: 6px;}\n");
      out.write("            .mem .aui-icon {display: inline-block;}\n");
      out.write("            .mem-label {height: 24px;vertical-align: middle;padding-left: 10px;}\n");
      out.write("            #form1, #form {margin: 25px;padding:20px;position: absolute;z-index: 99998;top:20px;left:10%;height: auto;width: auto;color: black;background-color: white; display: none;overflow: auto;}\n");
      out.write("            #form1 input, #form input {width:260px;}\n");
      out.write("            #FILEFORM1 input[type=submit], #FILEFORM input[type=submit]  {padding: 5px; width: 110px; margin: 10px auto; display: block;}\n");
      out.write("            label {display:block;margin-top:10px;}\n");
      out.write("            .close {color:red;width:100%;text-align:right;}\n");
      out.write("            .close span {cursor: pointer;}\n");
      out.write("            .mems {margin-top: 10px;}\n");
      out.write("            div#info {text-align: left;}\n");
      out.write("            #form select {width:260px;}\n");
      out.write("            #form textarea, #hic textarea{width:260px; overflow: auto;}\n");
      out.write("            #moveMain{margin: 0; padding:10px;position: absolute;z-index: 99999;top:49px;left: 99px;width: 100%;height: 100%;color: black;background-color: white;\n");
      out.write("                      display: none;overflow-y: auto;overflow-x: hidden; border-color: #DEDEDE #DEDEDE #BFBFBF #DEDEDE;border-width: 1px;border-style: solid;}\n");
      out.write("            #moveMain .fil {display: none;}\n");
      out.write("            #moveMain .close {margin-bottom: 10px;}\n");
      out.write("            .hov {color: red;}\n");
      out.write("            #info a {text-decoration: none;}\n");
      out.write("            #info:hover a{color:#972626;}\n");
      out.write("            #info a:hover {color:#972626; text-decoration: underline;}\n");
      out.write("            #props {margin-top: 10px;}\n");
      out.write("            a#addgroup{padding-left: 22px;background-image: url('small/application_view_list.png'); background-position: center left; background-repeat: no-repeat; text-decoration: none;}\n");
      out.write("            a#addgroup:hover {color: #972626;text-decoration: underline;}\n");
      out.write("            #content td.dop {width: 16px; padding: 4px}\n");
      out.write("            #too {margin-bottom: 6px;}\n");
      out.write("            #too span.emps{color: gray;}\n");
      out.write("            #catName {position: absolute;z-index: 99998;top:20px;left:10%;height: auto; width: 300px; padding: 5px; color: black;background-color: white; display: none;overflow: auto;}\n");
      out.write("            #catName1 {padding: 20px;}\n");
      out.write("            #catName input[type=submit] {display: block; margin: 20px auto; margin-bottom: 0px; padding: 4px;}\n");
      out.write("            #catName input[type=text]{width: 240px;}\n");
      out.write("            #form input[type=checkbox] {width: auto;}\n");
      out.write("            #form td {padding: 2px; padding-right:10px;}\n");
      out.write("            #form label{font-size: 12px; color: gray;}\n");
      out.write("            label[for=public], label[for=props] {margin-top:0;}\n");
      out.write("            table#small #main div.up {background-image: none;padding-left:0;}\n");
      out.write("            table#small div.up span {display: inline-block; margin-left: 5px; margin-right: 10px; margin-top: 0px;}\n");
      out.write("            table#small #main div.upper {margin-bottom: 14px;}\n");
      out.write("            table#small #main div.upper, table#small #main .cat {font-size: 14px;}\n");
      out.write("        </style>\n");
      out.write("        <style>");
      out.print(CSS.getCSS(request));
      out.write("</style><style>");
      out.print(CSS3.getCSS("docClassic.jsp", request));
      out.write("</style>\n");
      out.write("    </head>\n");
      out.write("    <body id=\"docClassic_jsp\">\n");
      out.write("        <div id=\"content-wrapper\">\n");
      out.write("            <div id=\"header\">\n");
      out.write("                <table id=\"tableH\">\n");
      out.write("                    <tbody>\n");
      out.write("                        <tr>\n");
      out.write("                            <td id=\"tdlogo\">\n");
      out.write("                                <img src=\"logo.png\" id=\"logo\"></td>\n");
      out.write("                            <td>\n");
      out.write("                                <div id=\"head\">\n");
      out.write("                                    <table>\n");
      out.write("                                        <tbody>\n");
      out.write("                                            <tr>\n");
      out.write("                                                <td id=\"slogan\" valign=\"center\">");
      out.print( slogan);
      out.write("</td>\n");
      out.write("                                                <td>\n");
      out.write("                                                    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "poisk", out, true);
      out.write("\n");
      out.write("                                                </td>\n");
      out.write("                                            </tr>\n");
      out.write("                                        </tbody>\n");
      out.write("                                    </table>\n");
      out.write("                                </div>\n");
      out.write("                                <div id=\"foot\">\n");
      out.write("                                    <ul class=\"topMenu\">\n");
      out.write("                                        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "topMenu.xhtml", out, true);
      out.write("\n");
      out.write("                                        <li><a href=\"documentsMod.jsp");
 if (owner != null) {
      out.write("?owner=");
      out.print(owner);
}
      out.write("\" class=\"footmenu\">Redaktə et</a></li>\n");
      out.write("                                            ");
 if (editable) {
      out.write("\n");
      out.write("                                        <li> <a href=\"http://exxo.ru/intranet/howto/documents/files/\" class=\"footmenu howto\" target=\"_blank\">?</a></li>");
} else {
      out.write("\n");
      out.write("                                        <li> <a href=\"http://exxo.ru/howto/documents-howto.html#find\" class=\"footmenu howto\" target=\"_blank\">?</a></li>");
}
      out.write("\n");
      out.write("                                    </ul>\n");
      out.write("                                </div>\n");
      out.write("                            </td>\n");
      out.write("                        </tr>\n");
      out.write("                    </tbody>\n");
      out.write("                </table>\n");
      out.write("            </div>\n");
      out.write("            <table id=\"grid\" class=\"grid\">\n");
      out.write("                <tbody id=\"atbody\">\n");
      out.write("                    <tr id=\"tr\">\n");
      out.write("                        <td id=\"menu-td\" class=\"menu-td\" valign=\"top\">\n");
      out.write("                            <div class=\"exxo-menu exxo-shadow\" id=\"menu\">\n");
      out.write("                                ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu-doc.xhtml", out, true);
      out.write("\n");
      out.write("                            </div>\n");
      out.write("                            <div id=\"counts\" class=\"exxo-shadow\">\n");
      out.write("                                <table>\n");
      out.write("                                    <tr>\n");
      out.write("                                        <td>fayl:</td>\n");
      out.write("                                        <td class=\"res\">");
      out.print(c);
      out.write("</td>\n");
      out.write("                                    </tr>\n");
      out.write("                                    <tr>\n");
      out.write("                                        <td>bayt:</td>\n");
      out.write("                                        <td class=\"res\">");
      out.print(v);
      out.write("</td>\n");
      out.write("                                    </tr>\n");
      out.write("                                    ");
 if (owner == null || !owner.equals("-100")) {
      out.write("\n");
      out.write("                                    <tr><td>boş:</td><td class=\"res\">");
      out.print(free);
      out.write("</td></tr>\n");
      out.write("                                            ");
 }
      out.write("\n");
      out.write("                                </table>\n");
      out.write("                            </div>\n");
      out.write("                            ");
      out.print( DC.href);
      out.write("</td>\n");
      out.write("                        <td id=\"column-3\" valign=\"top\"> \n");
      out.write("                            <table id=\"small\">\n");
      out.write("                                <tbody>\n");
      out.write("                                    <tr>\n");
      out.write("                                        <td id=\"tdmain\"  valign=\"top\">\n");
      out.write("                                            <div id=\"main\" class=\"exxo-shadow\"></div>\n");
      out.write("                                        </td>\n");
      out.write("                                        <td id=\"tdinfo\"  valign=\"top\">\n");
      out.write("                                            ");
if (editable) {
      out.write("\n");
      out.write("                                            <div id=\"info1\">\n");
      out.write("                                                <table>\n");
      out.write("                                                    <tr><td><div id=\"edit1\" ></div></td><td class=\"td2\"><div id=\"edit2\" ></div></td></tr>\n");
      out.write("                                                </table>\n");
      out.write("                                            </div>\n");
      out.write("                                            ");
}
      out.write("\n");
      out.write("                                            <div id=\"info\" class=\"exxo-shadow\">\n");
      out.write("                                                ");
if (editable) {
      out.write("\n");
      out.write("                                                <table>\n");
      out.write("                                                    <tr class=\"mem\"><td><span class=\"aui-icon aui-icon-folder-open\"></span></td><td class=\"mem-label\"> &#151; Kataloq əlavə et</td></tr>\n");
      out.write("                                                    <tr class=\"mem\"><td><span class=\"aui-icon aui-icon-document\"></span></td><td class=\"mem-label\"> &#151; Fayl əlavə et</td></tr>\n");
      out.write("                                                    <tr class=\"mem\"><td><span class=\"aui-icon aui-icon-copy\"></span></td><td class=\"mem-label\"> &#151; Fayllar əlavə et</td></tr>\n");
      out.write("                                                    <tr class=\"mem\"><td><span class=\"aui-icon aui-icon-plusthick\"></span></td><td class=\"mem-label\"> &#151; Versiya əlavə et</td></tr>\n");
      out.write("                                                    <tr class=\"mem\"><td><span class=\"aui-icon aui-icon-closethick\"></span></td><td class=\"mem-label\"> &#151; Fayl və ya kataloqu sil</td></tr>\n");
      out.write("                                                    <tr class=\"mem\"><td><span class=\"aui-icon aui-icon-arrow-4\"></span></td><td class=\"mem-label\"> &#151; Fayl və ya kataloqun yerini dəyişdir</td></tr>\n");
      out.write("                                                    <tr class=\"mem\"><td><span class=\"aui-icon aui-icon-gear\"></span></td><td class=\"mem-label\"> &#151; Fayl və ya kataloqun attributlarını redaktə et</td></tr></table>\n");
      out.write("                                                                ");
}
      out.write("\n");
      out.write("                                                <div class=\"mems\">Faylı seçmək üçün üzərinə basın. Seçimi ləğv etmək üçün - yenidən basın və ya başqa elementə vurun.</div>\n");
      out.write("                                        </td>\n");
      out.write("                                    </tr>\n");
      out.write("                                </tbody>\n");
      out.write("                            </table>\n");
      out.write("                        </td>\n");
      out.write("                    </tr> \n");
      out.write("                </tbody>\n");
      out.write("            </table>\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("        ");
if (editable) {
      out.write("\n");
      out.write("        <div id=\"moveMain\">\n");
      out.write("            <div class=\"close\"><span>BAĞLA</span></div>\n");
      out.write("            <div id=\"moveMain1\"></div>\n");
      out.write("        </div>\n");
      out.write("        <div id=\"form\">\n");
      out.write("            <div class=\"close\"><span>BAĞLA</span></div>\n");
      out.write("            <form id=\"FILEFORM\" action=\"addFile\" enctype=\"multipart/form-data\" method=\"POST\">\n");
      out.write("                <label for=\"file\">Выберите файл</label>\n");
      out.write("                <input type=\"file\" name=\"file\" id=\"file\">\n");
      out.write("                <label for=\"name\">Имя файла</label>\n");
      out.write("                <input type=\"text\" name=\"name\" id=\"name\">\n");
      out.write("                <label for=\"dopusk\">Допуск</label>\n");
      out.write("                <select name=\"dopusk\" id=\"dopusk\" ");
 if (general) { 
      out.write("disabled=\"disabled\"");
 }
      out.write(">\n");
      out.write("                    <option value=\"0\" ");
 if (owner != null && owner.equals("-100")) { 
      out.write("selected");
 }
      out.write(">общий</option>    \n");
      out.write("                    <option value=\"1\" >по проекту</option>\n");
      out.write("                    <option value=\"2\" >по группе</option>\n");
      out.write("                    <option value=\"3\" >по подразделению</option>\n");
      out.write("                    <option value=\"4\" ");
 if (!general) { 
      out.write("selected");
 }
      out.write(">персональный</option>\n");
      out.write("                </select>\n");
      out.write("                <label for=\"discription\">Описание</label>\n");
      out.write("                <textarea name=\"discription\" rows=\"5\" cols=\"22\" ></textarea>\n");
      out.write("                <label for=\"tags\">Теги</label>\n");
      out.write("                <textarea name=\"tags\" rows=\"5\" cols=\"22\" ></textarea>\n");
      out.write("                <br><br>\n");
      out.write("                <table>\n");
      out.write("                    <tr><td><label for=\"public\">Опубликовать</label></td><td><input type=\"checkbox\" name=\"public\" value=\"1\"></td></tr>\n");
      out.write("                    <tr><td><label for=\"props\">Перейти в свойства</label></td><td><input type=\"checkbox\" name=\"props\" value=\"1\" checked></td></tr></table>\n");
      out.write("                ");
 if (owner != null) {
      out.write("<input type=\"hidden\" name=\"owner\" value=\"");
      out.print( owner);
      out.write('"');
      out.write('>');
}
      out.write("\n");
      out.write("                <input type='hidden' name='r' value='1'>\n");
      out.write("                <input type=\"submit\" value=\"Yadda saxla\">\n");
      out.write("            </form>\n");
      out.write("        </div>\n");
      out.write("        <div id=\"form1\">\n");
      out.write("            <div class=\"close\"><span>BAĞLA</span></div>\n");
      out.write("            <form id=\"FILEFORM1\" action=\"fileVer\" enctype=\"multipart/form-data\" method=\"POST\">\n");
      out.write("                <label for=\"file\">Выберите файл</label>\n");
      out.write("                <input type=\"file\" name=\"file\" id=\"file\">\n");
      out.write("                ");
 if (owner != null) {
      out.write("\n");
      out.write("                <input type=\"hidden\" name=\"owner\" value=\"");
      out.print( owner);
      out.write("\">\n");
      out.write("                ");
}
      out.write("\n");
      out.write("                <input type='hidden' name='r' value='1'>\n");
      out.write("                <input type=\"submit\" value=\"Yadda saxla\">\n");
      out.write("            </form>\n");
      out.write("        </div>\n");
      out.write("        <div id=\"catName\">\n");
      out.write("            <div class=\"close\"><span>BAĞLA</span></div>\n");
      out.write("            <div id=\"catName1\"></div>\n");
      out.write("        </div>\n");
      out.write("        ");
}
      out.write("\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("            AUI().ready('aui-io', 'aui-toolbar', 'anim', 'aui-overlay-mask', 'aui-loading-mask', 'aui-loading-mask', function(A) {\n");
      out.write("            var myHeight = A.DOM.winHeight() - 150;\n");
      out.write("            if (myHeight < 300) myHeight = 300;\n");
      out.write("            var fileID;\n");
      out.write("            var isCopy = false;\n");
      out.write("            var isStep_6 = false;\n");
      out.write("            var startID = \"1\";\n");
      out.write("            var infoHTML = A.one(\"#info\").html();\n");
      out.write("            var fixed = false;\n");
      out.write("            ");
 if (id != null) {
      out.write(" startID =");
      out.print(id);
      out.write(' ');
 } 
      out.write("\n");
      out.write("            var carCat = startID;\n");
      out.write("            Reload(startID, null);\n");
      out.write("            ");
 if (editable) {
      out.write("\n");
      out.write("            var conf = {\n");
      out.write("            from:{opacity: 0},\n");
      out.write("                    to: {opacity: 1},\n");
      out.write("                    on:{'start': function(){\n");
      out.write("                    if (!this.get('reverse')){\n");
      out.write("                    overlayMask.set('target', document).show();\n");
      out.write("                    this.get('node').setStyle('display', 'block');\n");
      out.write("                    }}},\n");
      out.write("                    after: {'end': function(){\n");
      out.write("                    this.set('reverse', !this.get('reverse'));\n");
      out.write("                    this.stop();\n");
      out.write("                    if (this.get('node').getStyle('opacity') == 0) this.get('node').setStyle('display', 'none');\n");
      out.write("                    if (!this.get('reverse'))overlayMask.set('target', document).hide();\n");
      out.write("                    }}};\n");
      out.write("            new A.Toolbar({activeState: false, children: [\n");
      out.write("            {label: '', icon: 'folder-open', handler: {fn: function(e){itemAdd(carCat)}}},\n");
      out.write("            {label: '', icon: 'document', handler: {fn: function(e){fileAdd(carCat)}}},\n");
      out.write("            {label: '', icon: 'copy', handler: {fn: function(e){filesAdd(carCat)}}},\n");
      out.write("            {label: '', icon: 'plusthick', handler: {fn: function(e){if (!isCopy && !isStep_6)fileVer(fileID); else if (isCopy)alert('Нельзя добавить версию к копии документа!');\n");
      out.write("            else alert('Данная операция запрещена с утвержденным документом!'); }}}\n");
      out.write("            ]}).render(A.one('#edit1'));\n");
      out.write("            new A.Toolbar({activeState: false, children: [\n");
      out.write("            {label: '', icon: 'closethick', handler: {fn: function(e){\n");
      out.write("            if (fixed && !isCopy) {\n");
      out.write("            if (!isStep_6) dropFile(carCat, fileID, \"файл\");\n");
      out.write("            else alert('Данная операция запрещена с утвержденным документом!');\n");
      out.write("            }\n");
      out.write("            else if (fixed && isCopy)dropFile(carCat, fileID, \"копию\");\n");
      out.write("            else if (A.one('table#files tr') != null) alert(\"Можно удалить только пустой каталог\");\n");
      out.write("            else if (carCat == 1) alert('Нельзя удалить корневой каталог');\n");
      out.write("            else dropFile(1, carCat, \"каталог\");\n");
      out.write("            }}},\n");
      out.write("            {label: '', icon: 'arrow-4', handler: {fn: function(e){if (fixed)itemMove(fileID);\n");
      out.write("            else if (carCat == 1) alert(\"Нельзя переместить корневой каталог\"); else itemMove(carCat)}}},\n");
      out.write("            {label: '', icon: 'gear', handler: {fn: function(e){if (fixed) location = \"fileProp.jsp?id=\" + fileID; else changeCatName(carCat); }}}\n");
      out.write("            ]}).render(A.one('#edit2'));\n");
      out.write("            ");
}
      out.write("\n");
      out.write("            function Reload(superior, id){\n");
      out.write("            A.one(\"#main\").unplug(A.Plugin.IO);\n");
      out.write("            var data = {superior:superior");
 if (owner != null) {
      out.write(", owner:");
      out.print( owner);
      out.write(' ');
} 
      out.write("};\n");
      out.write("            if (id != null) data = {id:id");
 if (owner != null) {
      out.write(", owner:");
      out.print( owner);
      out.write(' ');
} 
      out.write("};\n");
      out.write("            A.one(\"#main\").plug(A.Plugin.IO, { uri: 'docClassic', method: 'POST',\n");
      out.write("                    data:data,\n");
      out.write("                    on:{'end':function(event){\n");
      out.write("                    var superNode = A.one('.upper');\n");
      out.write("                    if (superNode != null)\n");
      out.write("                            carCat = superNode.getAttribute('id');\n");
      out.write("                    else carCat = 1;\n");
      out.write("                    A.all(\".cat\").each(function(){this.on(\"mouseover\", function(){\n");
      out.write("                    if (!fixed) {\n");
      out.write("                    this.addClass(\"file-hover\");\n");
      out.write("                    A.one(\"#info\").html(infoHTML);\n");
      out.write("                    }\n");
      out.write("                    });\n");
      out.write("                    this.on(\"click\", function(){fixed = false; })\n");
      out.write("                    });\n");
      out.write("                    A.all(\".fil\").each(function(){this.on(\"mouseover\", function(){\n");
      out.write("                    if (!fixed) {\n");
      out.write("                    this.addClass(\"file-hover\");\n");
      out.write("                    fileID = this.get(\"id\");\n");
      out.write("                    if (this.hasClass('copy')) isCopy = true;\n");
      out.write("                    else isCopy = false;\n");
      out.write("                    if (this.hasClass('s_6')) isStep_6 = true;\n");
      out.write("                    else isStep_6 = false;\n");
      out.write("                    A.one(\"#info\").unplug(A.Plugin.IO);\n");
      out.write("                    A.one(\"#info\").plug(A.Plugin.IO, { uri: 'fileInfo', data:{id:fileID}, method: 'POST'});\n");
      out.write("                    }\n");
      out.write("                    })});\n");
      out.write("                    A.all(\".item\").each(function(){this.on(\"mouseout\", function(){if (!fixed) this.removeClass(\"file-hover\"); })});\n");
      out.write("                    A.all(\".fil\").each(function(){this.on(\"click\", function(){\n");
      out.write("                    if (this.hasClass(\"file-hover\") && fixed)fixed = false;\n");
      out.write("                    else if (fixed && !this.hasClass(\"file-hover\")){\n");
      out.write("                    this.radioClass(\"file-hover\");\n");
      out.write("                    fileID = this.get(\"id\");\n");
      out.write("                    if (this.hasClass('copy')) isCopy = true;\n");
      out.write("                    else isCopy = false;\n");
      out.write("                    if (this.hasClass('s_6')) isStep_6 = true;\n");
      out.write("                    else isStep_6 = false;\n");
      out.write("                    A.one(\"#info\").unplug(A.Plugin.IO);\n");
      out.write("                    A.one(\"#info\").plug(A.Plugin.IO, { uri: 'fileInfo', data:{id:fileID}, method: 'POST'});\n");
      out.write("                    }\n");
      out.write("                    else {\n");
      out.write("                    fixed = true;\n");
      out.write("                    }\n");
      out.write("                    })});\n");
      out.write("                    A.all(\".cat\").each(function(){this.on(\"click\", function(){\n");
      out.write("                    if (!this.hasClass(\"upper\"))\n");
      out.write("                            Reload(this.get(\"id\"), null);\n");
      out.write("                    else Reload(null, this.get(\"id\")); })}); }}})}\n");
      out.write("            ");
if (editable) {
      out.write("\n");
      out.write("\n");
      out.write("            function dropFile(cat, file, what){\n");
      out.write("            if (confirm(\"Хотите удалить \" + what + \"?\")) {\n");
      out.write("            if (what == \"каталог\") location = \"killCat?c=\" + cat + \"&r=1");
      out.print( own);
      out.write("&p1=\" + file;\n");
      out.write("            else if (what == \"файл\") location = \"dropFile?c=\" + cat + \"&r=1");
      out.print( own);
      out.write("&p1=\" + file;\n");
      out.write("            else if (what == \"копию\") location = \"dropCopy?c=\" + cat + \"&r=1");
      out.print( own);
      out.write("&id=\" + file;\n");
      out.write("            }\n");
      out.write("            }\n");
      out.write("            var overlayMask = new A.OverlayMask().render();\n");
      out.write("            var newFile = A.one(\"#newVer\");\n");
      out.write("            if (newFile != null) newFile.on(\"click\", function(){fileVer(); });\n");
      out.write("            A.one(\"#moveMain\").setStyle('opacity', '0');\n");
      out.write("            A.one('#form1').setStyle('opacity', '0');\n");
      out.write("            A.one('#form').setStyle('opacity', '0');\n");
      out.write("            A.one('#form1').plug(A.LoadingMask, {background: '#000'});\n");
      out.write("            A.one('#form').plug(A.LoadingMask, {background: '#000'});\n");
      out.write("            A.one('#form input[type=submit]').after('click', function(){A.one('#form').loadingmask.toggle(); });\n");
      out.write("            A.one('#form1 input[type=submit]').after('click', function(){A.one('#form1').loadingmask.toggle(); });\n");
      out.write("            A.one(\"#moveMain\").plug(A.Plugin.NodeFX, conf);\n");
      out.write("            A.one('#form1').plug(A.Plugin.NodeFX, conf);\n");
      out.write("            A.one('#form').plug(A.Plugin.NodeFX, conf);\n");
      out.write("            A.one('#form1 .close span').on('click', function(event){closer(A.one('#form1')); });\n");
      out.write("            A.one('#form .close span').on('click', function(event){closer(A.one('#form')); });\n");
      out.write("            A.one('#moveMain .close span').on('click', function(event){closer(A.one('#moveMain')); });\n");
      out.write("            A.one('#catName').setStyle('opacity', '0');\n");
      out.write("            A.one('#catName').plug(A.Plugin.NodeFX, conf);\n");
      out.write("            A.one('#catName .close span').on('click', function(event){closer(A.one('#catName')); });\n");
      out.write("            function fileVer(id){\n");
      out.write("            if (id != null && id != \"\" && fixed) {\n");
      out.write("            var str = \"<input type='hidden' name='id' value='\" + id + \"'>\";\n");
      out.write("            A.one('#FILEFORM1').append(A.Node.create(str));\n");
      out.write("            A.one('#form1').fx.run(); }\n");
      out.write("            else {alert(\"Необходимо выбрать файл\"); }\n");
      out.write("            }\n");
      out.write("            A.one(\".aui-overlaymask-content\").setStyle(\"height\", \"100%\");\n");
      out.write("            function closer(node){node.fx.run(); }\n");
      out.write("            function itemAdd(id){\n");
      out.write("            var name = window.prompt(\"введите имя каталога\", \"\");\n");
      out.write("            if (name) alterText(id, name");
 if (owner != null) {
      out.write(',');
      out.write(' ');
      out.write('"');
      out.print( owner);
      out.write('"');
}
      out.write(", \"addCat\");\n");
      out.write("            else alert(\"Нужно ввести название каталога\");\n");
      out.write("            }\n");
      out.write("            function alterText(p1, p2");
 if (owner != null) {
      out.write(", owner");
}
      out.write(", servlet){\n");
      out.write("            A.io.request(servlet, {cache: false, data: {p1: p1,\n");
      out.write("                    p2: p2 ");
 if (owner != null) {
      out.write(", owner:");
      out.print( owner);
}
      out.write("\n");
      out.write("            }, on:{success:function(){Reload(carCat, null)}},\n");
      out.write("                    method: 'post'});\n");
      out.write("            }\n");
      out.write("            function fileAdd(id){\n");
      out.write("            var str = \"<input type='hidden' name='superior' value='\" + id + \"'>\";\n");
      out.write("            A.one('#FILEFORM').append(A.Node.create(str));\n");
      out.write("            A.one('#form').fx.run();\n");
      out.write("            }\n");
      out.write("            function itemMove(unit_id){\n");
      out.write("            var div = A.one(\"#moveMain\");\n");
      out.write("            var div1 = A.one(\"#moveMain1\");\n");
      out.write("            div1.purge(true);\n");
      out.write("            div1.unplug(A.Plugin.IO);\n");
      out.write("            div.setStyle(\"width\", A.DOM.winWidth() - 198 + \"px\");\n");
      out.write("            div.setStyle(\"height\", A.DOM.winHeight() - 98 + \"px\");\n");
      out.write("            div1.plug(A.Plugin.IO, { uri: 'documents', method: 'POST', on:{end:function(){\n");
      out.write("            var nodlist = A.all(\"#moveMain .cat\");\n");
      out.write("            var n = A.Node.one(\"#moveMain [id=\" + unit_id + \"]\").setStyle(\"display\", \"none\");\n");
      out.write("            n.next().setStyle(\"display\", \"none\");\n");
      out.write("            nodlist.on(\"mouseenter\", function(event){event.target.addClass(\"hov\")});\n");
      out.write("            nodlist.on(\"mouseleave\", function(event){event.target.removeClass(\"hov\")});\n");
      out.write("            nodlist.on(\"click\", function(event){\n");
      out.write("            var superior = event.target.get(\"id\");\n");
      out.write("            alterText(unit_id, superior");
 if (owner != null) {
      out.write(',');
      out.write(' ');
      out.write('"');
      out.print( owner);
      out.write('"');
}
      out.write(", \"moveCat\");\n");
      out.write("            div1.purge(true);\n");
      out.write("            div1.unplug(A.Plugin.IO);\n");
      out.write("            div.fx.run();\n");
      out.write("            });\n");
      out.write("            }}");
      out.print( data);
      out.write("\n");
      out.write("            });\n");
      out.write("            div.fx.run();\n");
      out.write("            }\n");
      out.write("            A.one('#catName .close span').on('click', function(event){closer(A.one('#catName')); });\n");
      out.write("            A.one(\"#catName\").setStyle('opacity', '0');\n");
      out.write("            function changeCatName(id) {\n");
      out.write("            if (id == 1) alert('нельзя изменять корневую папку');\n");
      out.write("            else {\n");
      out.write("            var div1 = A.one(\"#catName1\");\n");
      out.write("            var div = A.one(\"#catName\");\n");
      out.write("            div1.unplug(A.Plugin.IO);\n");
      out.write("            div1.plug(A.Plugin.IO, { uri: 'docNameForm', method: 'POST', data:{id:id");
 if (owner != null) {
      out.write(", owner:");
      out.print( owner);
}
      out.write("}});\n");
      out.write("            div.fx.run();\n");
      out.write("            }}\n");
      out.write("            A.one('#form select').on('change', function(){if (this.get('value') == '0') {\n");
      out.write("            A.one('[name=props]').removeAttribute('checked');\n");
      out.write("            A.one('[name=public]').setAttribute('checked', '');\n");
      out.write("            } else {\n");
      out.write("            A.one('[name=public]').removeAttribute('checked');\n");
      out.write("            A.one('[name=props]').setAttribute('checked', '');\n");
      out.write("            }});\n");
      out.write("            function filesAdd(id) {\n");
      out.write("            location = \"addFile.xhtml?cat=\" + id + \"");
if (owner != null) {
      out.write("&owner=");
      out.print( owner);
}
      out.write("\";\n");
      out.write("                }\n");
      out.write("            ");
 if (general) {
      out.write("\n");
      out.write("                A.one('[name=props]').removeAttribute('checked');\n");
      out.write("                A.one('[name=public]').setAttribute('checked', '');\n");
      out.write("            ");
}
      out.write("\n");
      out.write("            ");
}
      out.write("\n");
      out.write("                A.one(\"#main\").setStyle(\"height\", myHeight + \"px\");\n");
      out.write("                });\n");
      out.write("        </script>\n");
      out.write("        <script type=\"text/javascript\" src=\"scripts/poisk.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"scripts/topMenu.js\"></script>\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
