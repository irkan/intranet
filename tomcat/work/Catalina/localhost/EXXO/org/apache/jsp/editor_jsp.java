/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.9
 * Generated at: 2018-08-16 13:03:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class editor_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      BEANS.CSSTotal CSS = null;
      synchronized (application) {
        CSS = (BEANS.CSSTotal) _jspx_page_context.getAttribute("CSS", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (CSS == null){
          CSS = new BEANS.CSSTotal();
          _jspx_page_context.setAttribute("CSS", CSS, javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        }
      }
      out.write('\n');
      BEANS.css1Bean CSS3 = null;
      CSS3 = (BEANS.css1Bean) _jspx_page_context.getAttribute("CSS3", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (CSS3 == null){
        CSS3 = new BEANS.css1Bean();
        _jspx_page_context.setAttribute("CSS3", CSS3, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\n');

    String role = (String) session.getAttribute("role");
    if (role.indexOf("a") < 0 && role.indexOf("b") < 0) {
        response.sendRedirect("notPermited.html");
    }
    String id = request.getParameter("id");
    String b = request.getParameter("b");
    if (b == null || b.equals("")) {
        b = "2";
    }

      out.write("\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=10\" >\n");
      out.write("        <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"/FILES/alloy/build/aui-skin-classic/css/aui-skin-classic-all-min.css\" type=\"text/css\" media=\"screen\" />\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"yui/build/assets/skins/sam/skin.css\">\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"yui/build/fonts/fonts-min.css\" />\n");
      out.write("        <script type=\"text/javascript\" src=\"yui/build/yahoo-dom-event/yahoo-dom-event.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"yui/build/element/element-min.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"yui/build/container/container_core-min.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"yui/build/menu/menu-min.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"yui/build/button/button-min.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"yui/build/editor/my-editor-min.js\"></script>\n");
      out.write("        <title>Portalın redaktəsi</title>\n");
      out.write("        <style type=\"text/css\">\n");
      out.write("            @import url('css/topMenu.css');\n");
      out.write("            @import url('css/exxo.css');\n");
      out.write("            @import url('editor.css');    \n");
      out.write("            .yui-skin-sam .yui-toolbar-container .yui-toolbar-imgEmp span.yui-toolbar-icon {\n");
      out.write("                background-image: url(\"emp.png\");background-position: 1px 1px;background-repeat: no-repeat;left: 5px;}\n");
      out.write("            .yui-skin-sam .yui-toolbar-container .yui-toolbar-imgEmp-selected span.yui-toolbar-icon {\n");
      out.write("                background-image: url(\"emp.png\");background-position: 1px 1px;background-repeat: no-repeat;left: 5px;}\n");
      out.write("            .yui-skin-sam .yui-toolbar-container .yui-toolbar-imgMy span.yui-toolbar-icon {\n");
      out.write("                background-image: url(\"imgMy.gif\");background-position: 1px 1px;background-repeat: no-repeat;left: 5px;}\n");
      out.write("            .yui-skin-sam .yui-toolbar-container .yui-toolbar-imgMy-selected span.yui-toolbar-icon {\n");
      out.write("                background-image: url(\"imgMy.gif\");background-position: 1px 1px;background-repeat: no-repeat;left: 5px;}\n");
      out.write("            .yui-skin-sam .yui-toolbar-container .yui-toolbar-imgMyK span.yui-toolbar-icon {\n");
      out.write("                background-image: url(\"imgK.gif\");background-position: 1px 1px;background-repeat: no-repeat;left: 5px;}\n");
      out.write("            .yui-skin-sam .yui-toolbar-container .yui-toolbar-imgMyK-selected span.yui-toolbar-icon {\n");
      out.write("                background-image: url(\"imgK.gif\");background-position: 1px 1px;background-repeat: no-repeat;left: 5px;}\n");
      out.write("            #imges {position:relative;width:auto;height:auto;margin: 4px; background-color:rgb(250,250,250);border: 1px solid #bfbfbf; border-radius: 5px;}\n");
      out.write("            #close {color:red;width:auto;text-align:right; padding:5px; padding-right: 10px;}\n");
      out.write("            #inserter {padding: 20px;}\n");
      out.write("            #containerImg img.photo {margin: 2px;}\n");
      out.write("            .hov{color:black;background-color: white;}\n");
      out.write("            .inno{margin:5px;margin-left:20px;}\n");
      out.write("            .cat {background-position: left;background-repeat: no-repeat;display: inline-block; width: 180px;vertical-align: top;margin: 10px;font-weight: bold; }\n");
      out.write("            .fil {margin: 5px;float: left;font-style: italic;font-weight: bolder;}\n");
      out.write("            .file-hover {color: red;}\n");
      out.write("            .yui-editor-container .yui-editor-editable-container {width: 610px !important; padding-right: 0px; padding-left:90px;}\n");
      out.write("            #msgpost {width: 700px;}\n");
      out.write("            #editorContainer {background-color: white; width:700px;}\n");
      out.write("            #submit {padding: 4px; margin: 15px; cursor: pointer;}\n");
      out.write("            a.html {display:block; margin: 15px; text-decoration: none; }\n");
      out.write("            a.html:hover {text-decoration: underline; color:#972626;}\n");
      out.write("            #editor-center {padding: 25px;}\n");
      out.write("            td#menu {width: 200px; vertical-align: top; padding-top: 25px;}\n");
      out.write("            td#menu input {width: 140px; height: 50px;}\n");
      out.write("            div#topMenu {width: 100%; height: 36px; background-color: gray;background-image: url(\"img/spr.png\");background-position: bottom;background-repeat: repeat-x;}\n");
      out.write("            #foot {height: 30px;padding-top: 6px;margin: 0;background-color: transparent;width: auto;border: 0;text-align: left;padding-left: 275px;background-image: none;}\n");
      out.write("            .footmenu {font-size: 15px;text-decoration: none;color: white;background-color: transparent; padding: 5px; display: inline-block;}\n");
      out.write("            body {background-color:white;}\n");
      out.write("            #leftMenu {width: 210px; padding: 10px; margin-left: 10px; background-color: white; margin-top: 25px;}\n");
      out.write("            #menu-navi {width: 95%; margin-left:10px; height: auto;}\n");
      out.write("            #menu-navi table {width:100%;}\n");
      out.write("            #menu-navi table td.oneNavi,#menu-navi table td.threeNavi  {width: 60px;}\n");
      out.write("            #menu-navi span {display: block; border: 1px solid #BFBFBF; width: 40px; height: 40px; margin: 10px; }\n");
      out.write("            #menu-navi span:hover {background-color: white; cursor: pointer;}\n");
      out.write("            span#backward {background-image: url('small/backward1.png'); background-position: center center; background-repeat: no-repeat;border-radius: 8px;}\n");
      out.write("            span#forward {background-image: url('small/forward1.png'); background-position: center center; background-repeat: no-repeat;border-radius: 8px; }\n");
      out.write("            span#backward:hover {background-image: url('small/backward.png'); }\n");
      out.write("            span#forward:hover {background-image: url('small/forward.png');}\n");
      out.write("            #imgesContainer {position: absolute;background-color: transparent;  width: 100%; height: auto; z-index: 99999999;display:none; left:0px; top: 0px;}\n");
      out.write("        </style>\n");
      out.write("        <script src=\"/FILES/alloy/build/aui/aui.js\" type=\"text/javascript\"></script>\n");
      out.write("        <style>");
      out.print(CSS.getCSS(request));
      out.write("</style><style>");
      out.print(CSS3.getCSS("editor.jsp", request));
      out.write("</style>\n");
      out.write("    </head>\n");
      out.write("    <body class=\"yui-skin-sam\" id=\"editor_jsp\">\n");
      out.write("        <div id=\"topMenu\">\n");
      out.write("            <div id=\"foot\">\n");
      out.write("                <ul class=\"topMenu\">\n");
      out.write("                    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "topMenu.xhtml", out, true);
      out.write("\n");
      out.write("                    <li><a href=\"main.jsp?id=");
      out.print(b);
      out.write("\" class=\"footmenu\">Sonlandır</a></li>\n");
      out.write("                    <li> <a href=\"http://exxo.ru/howto/cms-howto.html#editelement\" class=\"footmenu howto\" target=\"_blank\">?</a></li>\n");
      out.write("                </ul>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <form action=\"text\" method=\"post\">\n");
      out.write("            <table id=\"content\"><tr><td id=\"menu\">\n");
      out.write("                        <input type=\"submit\" id='submit' value=\"Yadda saxla\"/>\n");
      out.write("                        <a href=\"htmlEditor.jsp?id=");
      out.print(id);
      out.write('&');
      out.write('b');
      out.write('=');
      out.print(b);
      out.write("\" class=\"html\">Redaktə HTML</a>         \n");
      out.write("                    </td><td id=\"editor-center\">\n");
      out.write("                        <input type=\"hidden\" name=\"id\" id=\"id\" value=\"");
out.print(id);
      out.write("\">\n");
      out.write("                        <input type=\"hidden\" name=\"b\" value=\"");
      out.print(b);
      out.write("\">\n");
      out.write("                        <div id=\"editorContainer\" class=\"exxo-shadow1\">\n");
      out.write("                            <textarea name=\"msgpost\" id=\"msgpost\" cols=\"50\" rows=\"10\"></textarea>\n");
      out.write("                        </div>   \n");
      out.write("                    </td>\n");
      out.write("                    <td id=\"info\"></td></tr></table></form>\n");
      out.write("        <div id=\"imgesContainer\">\n");
      out.write("            <div id=\"imges\">\n");
      out.write("                <div id=\"close\">\n");
      out.write("                    <span class=\"exxo-anim-closer\">BAĞLA</span>\n");
      out.write("                </div>\n");
      out.write("                <div id=\"inserter\" class=\"exxo-images\">\n");
      out.write("\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("        <script type=\"text/javascript\" charset=\"utf-8\" src=\"scripts/topMenu.js\"></script>\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("            AUI().ready('anim', 'aui-io', 'aui-resize', 'imageloader', 'aui-overlay-mask', function (A) {\n");
      out.write("                var data;\n");
      out.write("                var myEditor;\n");
      out.write("                var of = 0;\n");
      out.write("                var title = '';\n");
      out.write("                var text = '';\n");
      out.write("                var overlayMask = new A.OverlayMask().render();\n");
      out.write("                var id = '");
out.print(id);
      out.write("';\n");
      out.write("                var ROWS =");
      out.print(BASE.VER.getMaxBloks(request.getServletContext()));
      out.write(";\n");
      out.write("                var io = A.io.request('textOutEdit', {\n");
      out.write("                    dataType: 'text', cache: false, data: {id: id}, method: 'post', on: {\n");
      out.write("                        success: function (event, id, xhr) {\n");
      out.write("                            var Datas = this.get('responseData');\n");
      out.write("                            A.one('#msgpost').text(Datas);\n");
      out.write("                            editorPut();\n");
      out.write("                        }}});\n");
      out.write("                A.one('#imgesContainer').setStyle('opacity', '0');\n");
      out.write("                function editorPut() {\n");
      out.write("                    myEditor = new YAHOO.widget.Editor('msgpost', {\n");
      out.write("                        height: '300px', width: '700px', dompath: false, animate: true,\n");
      out.write("                        css: 'html { height: 95%; } body { padding: 7px; box-sizing: border-box; -moz-box-sizing: border-box; background-color: #fff; font: 14px arial,helvetica,clean,sans-serif;*font-size:small;*font:x-small;line-height: 2; } a, a:visited, a:hover { color: blue !important; text-decoration: underline !important; cursor: text !important; } .warning-localfile { border-bottom: 1px dashed red !important; } .yui-busy { cursor: wait !important; } img.selected { border: 2px dotted #808080; } img { cursor: pointer !important; border: none; } body.ptags.webkit div.yui-wk-p { margin: 11px 0; } body.ptags.webkit div.yui-wk-div { margin: 0; } img {max-width: 100%}'});\n");
      out.write("                    myEditor.on('toolbarLoaded', function () {\n");
      out.write("                        this.toolbar.set('titlebar', title);\n");
      out.write("                        var flickrConfig = {type: 'push', label: 'Əməkdaşın fotosunu yerləşdir', value: 'imgEmp'}\n");
      out.write("                        myEditor.toolbar.addButtonToGroup(flickrConfig, 'insertitem');\n");
      out.write("                        this.toolbar.on('imgEmpClick', function () {\n");
      out.write("                            var _sel = this._getSelectedElement();\n");
      out.write("                            if (_sel && _sel.tagName && (_sel.tagName.toLowerCase() == 'img')) {\n");
      out.write("                            } else {\n");
      out.write("                                openAnim.run();\n");
      out.write("                                inserter(\"emp\", myEditor);\n");
      out.write("                                return false;\n");
      out.write("                            }\n");
      out.write("                        }, this, true);\n");
      out.write("                        var imgMyConfig = {type: 'push', label: 'Mənim qalareyamdan foto yerləşdir', value: 'imgMy'}\n");
      out.write("                        myEditor.toolbar.addButtonToGroup(imgMyConfig, 'insertitem');\n");
      out.write("                        this.toolbar.on('imgMyClick', function () {\n");
      out.write("                            var _sel = this._getSelectedElement();\n");
      out.write("                            if (_sel && _sel.tagName && (_sel.tagName.toLowerCase() == 'img')) {\n");
      out.write("                            } else {\n");
      out.write("                                of = 0;\n");
      out.write("                                Reload(\"1\", null, null);\n");
      out.write("                                openAnim.run();\n");
      out.write("                                return false;\n");
      out.write("                            }\n");
      out.write("                        }, this, true);\n");
      out.write("                        var imgMyKConfig = {type: 'push', label: 'Ümumi qalareyadan foto yerləşdir', value: 'imgMyK'}\n");
      out.write("                        myEditor.toolbar.addButtonToGroup(imgMyKConfig, 'insertitem');\n");
      out.write("                        this.toolbar.on('imgMyKClick', function () {\n");
      out.write("                            var _sel = this._getSelectedElement();\n");
      out.write("                            if (_sel && _sel.tagName && (_sel.tagName.toLowerCase() == 'img')) {\n");
      out.write("                            } else {\n");
      out.write("                                of = 0;\n");
      out.write("                                Reload(\"1\", null, \"-100\");\n");
      out.write("                                openAnim.run();\n");
      out.write("                                return false;\n");
      out.write("                            }\n");
      out.write("                        }, this, true);\n");
      out.write("                    });\n");
      out.write("                    myEditor.render();\n");
      out.write("                    myEditor.on('windowRender', function () {\n");
      out.write("                        new A.Resize({node: '.yui-editor-editable-container', handles: 'b'}).render();\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("                A.one('#submit').on('click', function (e) {\n");
      out.write("                    YAHOO.widget.EditorInfo.saveAll();\n");
      out.write("                });\n");
      out.write("                function closer(node) {\n");
      out.write("                    closeAnim.run();\n");
      out.write("                }\n");
      out.write("                function inserter(type, myEditor) {\n");
      out.write("                    var Ser = \"\";\n");
      out.write("                    var Data;\n");
      out.write("                    if (type == \"emp\") {\n");
      out.write("                        Ser = 'imgesOut';\n");
      out.write("                        Data = {}\n");
      out.write("                    } else if (type == \"my\") {\n");
      out.write("                        Ser = 'galClassic';\n");
      out.write("                        Data = {owner: '10', superior: '1'}\n");
      out.write("                    }\n");
      out.write("                    var io = A.io.request(Ser, {dataType: 'text', cache: false, data: Data, method: 'post',\n");
      out.write("                        on: {\n");
      out.write("                            success: function (event, id, xhr) {\n");
      out.write("                                var Datas = this.get('responseData');\n");
      out.write("                                A.one('#imges #inserter').html(Datas);\n");
      out.write("                                A.all('img.photo').each(function () {\n");
      out.write("                                    this.on(\"click\", function () {\n");
      out.write("                                        myEditor.execCommand('insertimage', this.getAttribute('src'));\n");
      out.write("                                        closer(A.one(\"#imges\"));\n");
      out.write("                                    })\n");
      out.write("                                });\n");
      out.write("                            }}});\n");
      out.write("                }\n");
      out.write("                function Reload(superior, id, owner) {\n");
      out.write("                    A.one(\"#inserter\").unplug(A.Plugin.IO);\n");
      out.write("                    var data = {superior: superior, of: of};\n");
      out.write("                    if (owner != null)\n");
      out.write("                        data = {superior: superior, owner: owner, of: of};\n");
      out.write("                    if (id != null && owner != null)\n");
      out.write("                        data = {id: id, owner: owner, of: of};\n");
      out.write("                    else if (id != null && owner == null)\n");
      out.write("                        data = {id: id, of: of};\n");
      out.write("                    A.one(\"#inserter\").plug(A.Plugin.IO, {uri: 'galClassic', method: 'POST', data: data, on: {'end': function (event) {\n");
      out.write("                                A.all(\".cat\").each(function () {\n");
      out.write("                                    this.on(\"mouseover\", function () {\n");
      out.write("                                        this.addClass(\"file-hover\");\n");
      out.write("                                    })\n");
      out.write("                                });\n");
      out.write("                                A.all(\".fil\").each(function () {\n");
      out.write("                                    this.on(\"mouseover\", function () {\n");
      out.write("                                        this.addClass(\"file-hover\");\n");
      out.write("                                    })\n");
      out.write("                                });\n");
      out.write("                                A.all(\".item\").each(function () {\n");
      out.write("                                    this.on(\"mouseout\", function () {\n");
      out.write("                                        this.removeClass(\"file-hover\");\n");
      out.write("                                    })\n");
      out.write("                                });\n");
      out.write("                                new A.ImgLoadGroup({foldDistance: 25, className: 'exxo-loading'});\n");
      out.write("                                A.all(\".fil a\").each(function () {\n");
      out.write("                                    var href = this.getAttribute('href');\n");
      out.write("                                    this.setAttribute('href', 'javascript:')\n");
      out.write("                                    this.on(\"click\", function () {\n");
      out.write("                                        var html = '<a href=\"' + href + '\" class=\"imger\"><img src=\"' + href + '&icon=1\" title=\"' + this.getAttribute('title') + '\"></a>';\n");
      out.write("                                        myEditor.execCommand('inserthtml', html);\n");
      out.write("                                        //myEditor.execCommand('insertimage', href);\n");
      out.write("                                        closer(A.one(\"#imges\"));\n");
      out.write("                                        return false;\n");
      out.write("                                    })\n");
      out.write("                                });\n");
      out.write("                                A.all(\".cat\").each(function () {\n");
      out.write("                                    this.on(\"click\", function () {\n");
      out.write("                                        of = 0;\n");
      out.write("                                        if (!this.hasClass(\"up\"))\n");
      out.write("                                            Reload(this.get(\"id\"), null, owner);\n");
      out.write("                                        else\n");
      out.write("                                            Reload(\"1\", null, owner);\n");
      out.write("                                    })\n");
      out.write("                                });\n");
      out.write("                                A.all(\".cat1\").each(function () {\n");
      out.write("                                    this.on(\"click\", function () {\n");
      out.write("                                        of = 0;\n");
      out.write("                                        if (!this.hasClass(\"up\"))\n");
      out.write("                                            Reload(this.get(\"id\"), null, owner);\n");
      out.write("                                        else\n");
      out.write("                                            Reload(\"1\", null, owner);\n");
      out.write("                                    })\n");
      out.write("                                });\n");
      out.write("                                if (A.one(\"#forward\") != null)\n");
      out.write("                                    A.one(\"#forward\").on(\"click\", function () {\n");
      out.write("                                        of = of + ROWS;\n");
      out.write("                                        Reload(superior, id, owner);\n");
      out.write("                                        A.one(\"#imges .exxo-anim-closer\").scrollIntoView( );\n");
      out.write("                                    });\n");
      out.write("                                if (A.one(\"#backward\") != null)\n");
      out.write("                                    A.one(\"#backward\").on(\"click\", function () {\n");
      out.write("                                        of = of - ROWS;\n");
      out.write("                                        if (of < 0)\n");
      out.write("                                            of = 0;\n");
      out.write("                                        Reload(superior, id, owner);\n");
      out.write("                                        A.one(\"#imges .exxo-anim-closer\").scrollIntoView( );\n");
      out.write("                                    });\n");
      out.write("                            }}})\n");
      out.write("                }\n");
      out.write("                A.one('#close span').on('click', function (event) {\n");
      out.write("                    closer(A.one(\"#imges\"));\n");
      out.write("                });\n");
      out.write("                var myHeight = A.DOM.winHeight() - 50;\n");
      out.write("                if (myHeight < 250)\n");
      out.write("                    myHeight = 250;\n");
      out.write("                var node = A.one(A.one(\"#imgesContainer\"));\n");
      out.write("                node.setStyle('opacity', '0');\n");
      out.write("                var openAnim = new A.Anim({node: node, to: {opacity: 1}, on: {'start': function () {\n");
      out.write("                            A.one(node).setStyle('display', 'block');\n");
      out.write("                            node.one('.exxo-anim-closer').scrollIntoView( );\n");
      out.write("                            overlayMask.set('target', document).show();\n");
      out.write("                        }}});\n");
      out.write("                var closeAnim = new A.Anim({node: node, to: {opacity: 0}, on: {'end': function () {\n");
      out.write("                            A.one(node).setStyle('display', 'none');\n");
      out.write("                            overlayMask.set('target', document).hide();\n");
      out.write("                        }}});\n");
      out.write("                node.one('.exxo-anim-closer').on('click', function () {\n");
      out.write("                    closeAnim.run();\n");
      out.write("                });\n");
      out.write("                A.one('#imges').setStyle(\"minHeight\", A.DOM.winHeight() - 10 + \"px\");\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
