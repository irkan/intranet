/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.9
 * Generated at: 2018-08-16 12:58:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class correspondence_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      BEANS.SLOGAN SLOGAN = null;
      synchronized (application) {
        SLOGAN = (BEANS.SLOGAN) _jspx_page_context.getAttribute("SLOGAN", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (SLOGAN == null){
          SLOGAN = new BEANS.SLOGAN();
          _jspx_page_context.setAttribute("SLOGAN", SLOGAN, javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        }
      }
      out.write('\n');
      BEANS.CSSTotal CSS = null;
      synchronized (application) {
        CSS = (BEANS.CSSTotal) _jspx_page_context.getAttribute("CSS", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (CSS == null){
          CSS = new BEANS.CSSTotal();
          _jspx_page_context.setAttribute("CSS", CSS, javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        }
      }
      BEANS.css1Bean CSS3 = null;
      CSS3 = (BEANS.css1Bean) _jspx_page_context.getAttribute("CSS3", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (CSS3 == null){
        CSS3 = new BEANS.css1Bean();
        _jspx_page_context.setAttribute("CSS3", CSS3, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }

    String slogan = SLOGAN.getSlogan(request);
    String id = request.getParameter("id");
    String carCat = (String) session.getAttribute("blog_car_cat");
    if (carCat == null) {
        carCat = "0";
    }

      out.write("\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n");
      out.write("        <title>MesajlarÄ±m</title>\n");
      out.write("        <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"/>\n");
      out.write("        <meta http-equiv=\"content-style-type\" content=\"text/css\"/>\n");
      out.write("        <link rel=\"stylesheet\" href=\"/FILES/alloy/build/aui-skin-classic/css/aui-skin-classic-all-min.css\" type=\"text/css\" media=\"screen\" />\n");
      out.write("        <script src=\"/FILES/alloy/build/aui/aui.js\" type=\"text/javascript\"></script>\n");
      out.write("        <link rel=\"stylesheet\" href=\"index.css\" type=\"text/css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"blue.css\" type=\"text/css\" />\n");
      out.write("        <style type=\"text/css\">\n");
      out.write("            @import url('css/topMenu.css');\n");
      out.write("            @import url('css/exxo.css');\n");
      out.write("            td.choose {width: 20px; background-image: none;}\n");
      out.write("            .file-hover td.choose {background-image: url(\"check.png\"); background-position: center center;background-repeat: no-repeat;}\n");
      out.write("            #panel a {padding-right: 25px;}\n");
      out.write("            #panel {margin-bottom: 10px;}\n");
      out.write("            .fil {cursor: pointer;}\n");
      out.write("            .cat {cursor: pointer;}\n");
      out.write("            .item-hover {background: red;}\n");
      out.write("            .item-hover  a {color: white;}\n");
      out.write("            #main {position: relative;margin: 25px; margin-left: 10px; width:auto;height: auto;margin-bottom: 10px;background-color: white;padding: 4px;overflow-y: auto;overflow-x: hidden;}\n");
      out.write("            .hov{ color:black; background-color: white;}\n");
      out.write("            .inno{margin:5px;margin-left:20px;}\n");
      out.write("            div.cat {background-image: url(\"folder_closed.png\");background-position: left;background-repeat: no-repeat; padding:6px; padding-left: 20px;}\n");
      out.write("            .file-hover {background-color: #E3E2FD !important;}\n");
      out.write("            .filepath{color:gray;}\n");
      out.write("            table#small {width: 100%;}\n");
      out.write("            #tdmain {width:50%;}\n");
      out.write("            #tdinfo{width:50%;}\n");
      out.write("            #info, #info1 {margin:0px 25px;width:auto;height: auto; margin-left: 0px;padding: 4px;background-color: #FDF2F2;}\n");
      out.write("            table#files {width:100%}\n");
      out.write("            table#files td {text-align: left;}\n");
      out.write("            td.icon {width:20px; height:24px;}\n");
      out.write("            td.fname, td.name {padding-left:10px; max-width: 200px;}\n");
      out.write("            td.created {font-size: 10px; color: #3B3B8F; width:70px; padding-right: 4px;padding-left: 4px;}\n");
      out.write("            td.dop {width: 20px;}\n");
      out.write("            tr.cat td.icon {background-image: url(\"folder_closed.png\");background-position: center center;background-repeat: no-repeat;}\n");
      out.write("            #tdinfo #info img#dop {border: 0;}\n");
      out.write("            #tags a{margin-right: 6px;}\n");
      out.write("            table#files tr:nth-of-type(odd) {background-color: #F5F2F2;}\n");
      out.write("            #counts {width: 150px;font-size:11px;margin: 10px; margin-top: 25px; color: black;border-color: #DEDEDE #DEDEDE #BFBFBF #DEDEDE;border-width: 1px;border-style: solid;padding: 10px;\n");
      out.write("                     background-color: white}\n");
      out.write("            #counts td.res{color:#3B3B8F; text-align: right;}\n");
      out.write("            #counts table {width: 100%;margin-bottom: 10px;}\n");
      out.write("            #edit1 button, #edit2 button, #edit3 button {height: 24px; padding-top: 5px; min-width: 26px;}\n");
      out.write("            .lable {font-size:12px; padding:5px;}\n");
      out.write("            div#edit1, div#edit2 {margin-bottom:0px;}\n");
      out.write("            #info1 {border-color: #DEDEDE #DEDEDE #BFBFBF #DEDEDE;border-width: 1px;border-style: solid; background-color: #EEEEF1;}\n");
      out.write("            #info1 td.td2 , #info1 td.td3 {padding-left: 6px;}\n");
      out.write("            .mem .aui-icon {display: inline-block;}\n");
      out.write("            .mem-label {height: 24px;vertical-align: middle;padding-left: 10px;}\n");
      out.write("            label {display:block;margin-top:10px;}\n");
      out.write("            .close {color:red;width:100%;text-align:right;}\n");
      out.write("            .close span {cursor: pointer;}\n");
      out.write("            .mems {margin-top: 10px;}\n");
      out.write("            div#info {text-align: left;}\n");
      out.write("            #moveMain{margin: 0; padding:10px;position: absolute;z-index: 99999;top:49px;left: 99px;width: 100%;height: 100%;color: black;background-color: white;\n");
      out.write("                      display: none;overflow-y: auto;overflow-x: hidden; border-color: #DEDEDE #DEDEDE #BFBFBF #DEDEDE;border-width: 1px;border-style: solid;}\n");
      out.write("            #moveMain .fil {display: none;}\n");
      out.write("            #moveMain .close {margin-bottom: 10px;}\n");
      out.write("            .hov {color: red;}\n");
      out.write("            #info a {text-decoration: none;}\n");
      out.write("            #info:hover a{color:#972626;}\n");
      out.write("            #info a:hover {color:#972626; text-decoration: underline;}\n");
      out.write("            #props {margin-top: 10px;}\n");
      out.write("            a#addgroup{padding-left: 22px;background-image: url('small/application_view_list.png'); background-position: center left; background-repeat: no-repeat; text-decoration: none;}\n");
      out.write("            a#addgroup:hover {color: #972626;text-decoration: underline;}\n");
      out.write("            #catName {position: absolute;z-index: 99998;top:20px;left:10%;height: auto; width: 300px; padding: 5px; color: black;background-color: white; display: none;overflow: auto;}\n");
      out.write("            #catName1 {padding: 20px;}\n");
      out.write("            #catName input[type=submit] {display: block; margin: 20px auto; margin-bottom: 0px; padding: 4px;}\n");
      out.write("            #catName input[type=text]{width: 240px;}\n");
      out.write("            #info {overflow:auto;}\n");
      out.write("            #cont {font-size: 12px; margin-top: 10px;}\n");
      out.write("            #infobutt a, #infobutt span{margin-left: 10px; margin-right: 5px; font-weight: bold;}\n");
      out.write("            #infobutt span:first-of-type {margin-left: 0px;}\n");
      out.write("            .star span{background-repeat: no-repeat;background: url('/FILES/alloy/build/aui-skin-classic/images/icon_sprite.png') no-repeat 0 0;\n");
      out.write("                       display: block;height: 16px;overflow: hidden;width: 16px;background-position: -224px -112px;}\n");
      out.write("            #menu-navi {width: 95%; margin-left:10px; height: auto;}\n");
      out.write("            #menu-navi table {width:100%;}\n");
      out.write("            #menu-navi table td.oneNavi,#menu-navi table td.threeNavi  {width: 60px;}\n");
      out.write("            #menu-navi a {display: block; border: 1px solid #BFBFBF; width: 40px; height: 40px; margin: 10px; }\n");
      out.write("            #menu-navi a:hover {background-color: white;}\n");
      out.write("            a#backward {background-image: url('small/backward1.png'); background-position: center center; background-repeat: no-repeat;border-radius: 8px;}\n");
      out.write("            a#forward {background-image: url('small/forward1.png'); background-position: center center; background-repeat: no-repeat;border-radius: 8px; }\n");
      out.write("            a#backward:hover {background-image: url('small/backward.png'); }\n");
      out.write("            a#forward:hover {background-image: url('small/forward.png');}\n");
      out.write("            #content td.dop {width: 16px; padding: 4px}\n");
      out.write("            #too {margin-bottom: 6px;}\n");
      out.write("            #too span.emps{color: gray;}\n");
      out.write("            #tags {margin: 20px 0px;}\n");
      out.write("            a#addgroup{padding-left: 22px;background-image: url('small/application_view_list.png'); background-position: center left; background-repeat: no-repeat; text-decoration: none;}\n");
      out.write("            a#addgroup:hover {color: #972626;text-decoration: underline;}\n");
      out.write("            #info table.exxo-table tr:nth-of-type(odd) td {background-color: white;}\n");
      out.write("            #info table.exxo-table tr:hover td {background-color: #E3E2FD; cursor: pointer;}\n");
      out.write("            #info table.exxo-table {margin-top: 10px;}\n");
      out.write("            #info table.exxo-table tr:first-of-type td {border-top: 1px solid #bfbfbf;}\n");
      out.write("            #input {color: gray; margin-top: 20px;}\n");
      out.write("            #cont img {max-width: 100%;}\n");
      out.write("        </style>\n");
      out.write("        <style>\n");
      out.write("            ");
      out.print(CSS.getCSS(request));
      out.write("\n");
      out.write("        </style>\n");
      out.write("        <style>\n");
      out.write("            ");
      out.print(CSS3.getCSS("correspondence.jsp", request));
      out.write("\n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("    <body id=\"correspondence_jsp\">\n");
      out.write("        <div id=\"content-wrapper\">\n");
      out.write("            <div id=\"header\">\n");
      out.write("                <table id=\"tableH\">\n");
      out.write("                    <tbody>\n");
      out.write("                        <tr>\n");
      out.write("                            <td id=\"tdlogo\">\n");
      out.write("                                <img src=\"logo.png\" id=\"logo\"></td>\n");
      out.write("                            <td>\n");
      out.write("                                <div id=\"head\">\n");
      out.write("                                    <table>\n");
      out.write("                                        <tbody>\n");
      out.write("                                            <tr>\n");
      out.write("                                                <td id=\"slogan\" valign=\"center\">");
      out.print( slogan);
      out.write("</td>\n");
      out.write("                                                <td>\n");
      out.write("                                                    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "poisk", out, true);
      out.write("\n");
      out.write("                                                </td>\n");
      out.write("                                            </tr>\n");
      out.write("                                        </tbody>\n");
      out.write("                                    </table>\n");
      out.write("                                </div>\n");
      out.write("                                <div id=\"foot\">\n");
      out.write("                                    <ul class=\"topMenu\">\n");
      out.write("                                        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "topMenu.xhtml", out, true);
      out.write("\n");
      out.write("                                        <li> <a href=\"http://exxo.ru/howto/mail-howto.html#message\" class=\"footmenu howto\" target=\"_blank\">?</a></li>\n");
      out.write("                                    </ul></div>\n");
      out.write("                            </td>\n");
      out.write("                        </tr>\n");
      out.write("                    </tbody>\n");
      out.write("                </table>\n");
      out.write("            </div>\n");
      out.write("            <table id=\"grid\" class=\"grid\">\n");
      out.write("                <tbody id=\"atbody\">\n");
      out.write("                    <tr id=\"tr\">\n");
      out.write("                        <td id=\"menu-td\" class=\"menu-td\" valign=\"top\">\n");
      out.write("                            <div class=\"exxo-menu exxo-shadow\" id=\"menu\">\n");
      out.write("                                ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu-blog.xhtml", out, true);
      out.write("\n");
      out.write("                            </div>\n");
      out.write("                        </td>\n");
      out.write("                        <td id=\"column-3\" valign=\"top\"> \n");
      out.write("                            <table id=\"small\">\n");
      out.write("                                <tbody>\n");
      out.write("                                    <tr>\n");
      out.write("                                        <td id=\"tdmain\"  valign=\"top\">\n");
      out.write("                                            <div id=\"main\" class=\"exxo-shadow\"></div>\n");
      out.write("                                        </td>\n");
      out.write("                                        <td id=\"tdinfo\"  valign=\"top\">\n");
      out.write("                                            <div id=\"info1\">\n");
      out.write("                                                <table>\n");
      out.write("                                                    <tr>\n");
      out.write("                                                        <td>\n");
      out.write("                                                            <div id=\"edit1\" ></div>\n");
      out.write("                                                        </td>\n");
      out.write("                                                        <td class=\"td2\">\n");
      out.write("                                                            <div id=\"edit2\" ></div>\n");
      out.write("                                                        </td>\n");
      out.write("                                                        <td class=\"td3\">\n");
      out.write("                                                            <div id=\"edit3\" ></div>\n");
      out.write("                                                        </td>\n");
      out.write("                                                    </tr>\n");
      out.write("                                                </table>\n");
      out.write("                                            </div>\n");
      out.write("                                            <div id=\"info\" class=\"exxo-shadow\">\n");
      out.write("\n");
      out.write("                                                <table>\n");
      out.write("                                                    <tr class=\"mem\"><td><span class=\"aui-icon aui-icon-folder-open\"></span></td><td class=\"mem-label\"> &#151; Qovluq yarat</td></tr>\n");
      out.write("                                                    <tr class=\"mem\"><td><span class=\"aui-icon aui-icon-pencil\"></span></td><td class=\"mem-label\"> &#151; Yeni mesajlar</td></tr>\n");
      out.write("                                                    <tr class=\"mem\"><td><span class=\"aui-icon aui-icon-star\"></span></td><td class=\"mem-label\"> &#151; Â«VacibÂ» kimi qeyd et /  Vacibliyi lÉÄv et</td></tr>\n");
      out.write("                                                    <tr class=\"mem\"><td><span class=\"aui-icon aui-icon-closethick\"></span></td><td class=\"mem-label\"> &#151; MesajÄ± gizlÉt vÉ ya qovluÄu sil</td></tr>\n");
      out.write("                                                    <tr class=\"mem\"><td><span class=\"aui-icon aui-icon-arrow-4\"></span></td><td class=\"mem-label\"> &#151; MesajÄ±n vÉ ya qovluÄun yerini dÉyiÅ</td></tr>\n");
      out.write("                                                    <tr class=\"mem\"><td><span class=\"aui-icon aui-icon-gear\"></span></td><td class=\"mem-label\"> &#151; MesajÄ±n atributunu vÉ ya qovluÄun adÄ±nÄ± dÉyiÅ</td></tr>\n");
      out.write("                                                    <tr class=\"mem\"><td><span class=\"aui-icon aui-icon-mail-open\"></span></td><td class=\"mem-label\"> &#151; MesajÄ± aÃ§</td></tr>\n");
      out.write("                                                    <tr class=\"mem\"><td><span class=\"aui-icon aui-icon-tag\"></span></td><td class=\"mem-label\"> &#151; OxÅar mesajlarÄ± tap</td></tr>\n");
      out.write("                                                </table>\n");
      out.write("                                                <div class=\"mems\">MesajÄ± seÃ§mÉk Ã¼Ã§Ã¼n Ã¼zÉrinÉ basÄ±n. &#151; SeÃ§imi lÉÄv etmÉk Ã¼Ã§Ã¼n yenidÉn basÄ±n vÉ ya baÅqa elementÉ vurun.</div>\n");
      out.write("                                        </td>\n");
      out.write("                                    </tr>\n");
      out.write("                                </tbody>\n");
      out.write("                            </table>\n");
      out.write("                        </td>\n");
      out.write("                    </tr> \n");
      out.write("                </tbody>\n");
      out.write("            </table>\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div id=\"moveMain\">\n");
      out.write("            <div class=\"close\"><span>BAÄLA</span></div>\n");
      out.write("            <div id=\"moveMain1\"></div>\n");
      out.write("        </div>\n");
      out.write("        <div id=\"catName\">\n");
      out.write("            <div class=\"close\"><span>BAÄLA</span></div>\n");
      out.write("            <div id=\"catName1\"></div>\n");
      out.write("        </div>\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("            AUI().ready('aui-io', 'aui-toolbar', 'anim', 'aui-overlay-mask', function (A) {\n");
      out.write("                var conf = {\n");
      out.write("                    from: {opacity: 0},\n");
      out.write("                    to: {opacity: 1},\n");
      out.write("                    on: {'start': function () {\n");
      out.write("                            if (!this.get('reverse')) {\n");
      out.write("                                overlayMask.set('target', document).show();\n");
      out.write("                                this.get('node').setStyle('display', 'block');\n");
      out.write("                            }\n");
      out.write("                        }},\n");
      out.write("                    after: {'end': function () {\n");
      out.write("                            this.set('reverse', !this.get('reverse'));\n");
      out.write("                            this.stop();\n");
      out.write("                            if (this.get('node').getStyle('opacity') == 0)\n");
      out.write("                                this.get('node').setStyle('display', 'none');\n");
      out.write("                            if (!this.get('reverse'))\n");
      out.write("                                overlayMask.set('target', document).hide();\n");
      out.write("                        }}};\n");
      out.write("\n");
      out.write("                var myHeight = A.DOM.winHeight() - 150;\n");
      out.write("                if (myHeight < 300)\n");
      out.write("                    myHeight = 300;\n");
      out.write("                var fileID;\n");
      out.write("                var startID = \"");
      out.print( carCat);
      out.write("\";\n");
      out.write("                var infoHTML = A.one(\"#info\").html();\n");
      out.write("                var fixed = false;\n");
      out.write("                var of = 0;\n");
      out.write("                var ROWS =");
      out.print(BASE.VER.getMaxRows1(request.getServletContext()));
      out.write(";\n");
      out.write("            ");
 if (id != null) {
      out.write(" startID =");
      out.print(id);
      out.write(' ');
 }
      out.write("\n");
      out.write("                var carCat = startID;\n");
      out.write("                Reload(startID, null);\n");
      out.write("\n");
      out.write("                new A.Toolbar({activeState: false, children: [\n");
      out.write("                        {label: '', icon: 'folder-open', handler: {fn: function (e) {\n");
      out.write("                                    itemAdd(carCat);\n");
      out.write("                                }}},\n");
      out.write("                        {label: '', icon: 'pencil', handler: {fn: function (e) {\n");
      out.write("                                    location = 'blogInsert.jsp?r=1';\n");
      out.write("                                }}},\n");
      out.write("                        {label: '', icon: 'star', handler: {fn: function (e) {\n");
      out.write("                                    markBlog(fileID);\n");
      out.write("                                }}}\n");
      out.write("                    ]}).render(A.one('#edit1'));\n");
      out.write("\n");
      out.write("                new A.Toolbar({activeState: false, children: [\n");
      out.write("                        {label: '', icon: 'closethick', handler: {fn: function (e) {\n");
      out.write("                                    if (fixed)\n");
      out.write("                                        dropFile(carCat, fileID, \"ÑÐºÑÑÑÑ ÑÐ¾Ð¾Ð±ÑÐµÐ½Ð¸Ðµ\");\n");
      out.write("                                    else if (A.one('table#files tr') != null)\n");
      out.write("                                        alert(\"ÐÐ¾Ð¶Ð½Ð¾ ÑÐ´Ð°Ð»Ð¸ÑÑ ÑÐ¾Ð»ÑÐºÐ¾ Ð¿ÑÑÑÑÑ Ð¿Ð°Ð¿ÐºÑ\");\n");
      out.write("                                    else if (carCat == 0)\n");
      out.write("                                        alert('ÐÐµÐ»ÑÐ·Ñ ÑÐ´Ð°Ð»Ð¸ÑÑ ÐºÐ¾ÑÐ½ÐµÐ²ÑÑ Ð¿Ð°Ð¿ÐºÑ');\n");
      out.write("                                    else\n");
      out.write("                                        dropFile(0, carCat, \"ÑÐ´Ð°Ð»Ð¸ÑÑ Ð¿Ð°Ð¿ÐºÑ\");\n");
      out.write("                                }}},\n");
      out.write("                        {label: '', icon: 'arrow-4', handler: {fn: function (e) {\n");
      out.write("                                    if (fixed)\n");
      out.write("                                        itemMove(fileID);\n");
      out.write("                                    else if (carCat == 0)\n");
      out.write("                                        alert(\"ÐÐµÐ»ÑÐ·Ñ Ð¿ÐµÑÐµÐ¼ÐµÑÑÐ¸ÑÑ ÐºÐ¾ÑÐ½ÐµÐ²ÑÑ Ð¿Ð°Ð¿ÐºÑ\");\n");
      out.write("                                    else\n");
      out.write("                                        itemMove(carCat)\n");
      out.write("                                }}},\n");
      out.write("                        {label: '', icon: 'gear', handler: {fn: function (e) {\n");
      out.write("                                    if (fixed)\n");
      out.write("                                        location = \"addTags.jsp?el=\" + fileID + \"&s=bloges\";\n");
      out.write("                                    else\n");
      out.write("                                        changeCatName(carCat);\n");
      out.write("                                }}}\n");
      out.write("                    ]}).render(A.one('#edit2'));\n");
      out.write("\n");
      out.write("                new A.Toolbar({activeState: false, children: [\n");
      out.write("                        {label: '', icon: 'mail-open', handler: {fn: function (e) {\n");
      out.write("                                    if (fixed)\n");
      out.write("                                        location = \"blog.jsp?id=\" + fileID;\n");
      out.write("                                    else\n");
      out.write("                                        alert(\"ÐÑÐ±ÐµÑÐ¸ÑÐµ ÑÐ¾Ð¾Ð±ÑÐµÐ½Ð¸Ðµ\");\n");
      out.write("                                }}},\n");
      out.write("                        {label: '', icon: 'tag', handler: {fn: function (e) {\n");
      out.write("                                    if (fixed)\n");
      out.write("                                        location = \"docTags?el=\" + fileID + \"&&s=bloges\";\n");
      out.write("                                    else\n");
      out.write("                                        alert(\"ÐÑÐ±ÐµÑÐ¸ÑÐµ ÑÐ¾Ð¾Ð±ÑÐµÐ½Ð¸Ðµ\");\n");
      out.write("                                }}}\n");
      out.write("                    ]}).render(A.one('#edit3'));\n");
      out.write("                function Reload(superior, id) {\n");
      out.write("                    A.one(\"#main\").unplug(A.Plugin.IO);\n");
      out.write("                    var data = {superior: superior, of: of};\n");
      out.write("                    if (id != null)\n");
      out.write("                        data = {id: id, of: of};\n");
      out.write("                    A.one(\"#main\").plug(A.Plugin.IO, {uri: 'blogClassic', method: 'POST',\n");
      out.write("                        data: data,\n");
      out.write("                        on: {'end': function (event) {\n");
      out.write("                                if (A.one(\"#forward\") != null)\n");
      out.write("                                    A.one(\"#forward\").on(\"click\", function () {\n");
      out.write("                                        of = of + ROWS;\n");
      out.write("                                        fixed = false;\n");
      out.write("                                        Reload(carCat, null);\n");
      out.write("                                    });\n");
      out.write("                                if (A.one(\"#backward\") != null)\n");
      out.write("                                    A.one(\"#backward\").on(\"click\", function () {\n");
      out.write("                                        of = of - ROWS;\n");
      out.write("                                        if (of < 0)\n");
      out.write("                                            of = 0;\n");
      out.write("                                        fixed = false;\n");
      out.write("                                        Reload(carCat, null);\n");
      out.write("                                    });\n");
      out.write("                                var superNode = A.one('.upper');\n");
      out.write("                                if (superNode != null)\n");
      out.write("                                    carCat = superNode.getAttribute('id');\n");
      out.write("                                else\n");
      out.write("                                    carCat = 0;\n");
      out.write("                                A.all(\".cat\").each(function () {\n");
      out.write("                                    this.on(\"mouseover\", function () {\n");
      out.write("                                        if (!fixed) {\n");
      out.write("                                            this.addClass(\"file-hover\");\n");
      out.write("                                            A.one(\"#info\").html(infoHTML);\n");
      out.write("                                        }\n");
      out.write("                                    });\n");
      out.write("                                    this.on(\"click\", function () {\n");
      out.write("                                        fixed = false;\n");
      out.write("                                    })\n");
      out.write("                                });\n");
      out.write("                                A.all(\".fil\").each(function () {\n");
      out.write("                                    this.on(\"mouseover\", function () {\n");
      out.write("                                        if (!fixed) {\n");
      out.write("                                            this.addClass(\"file-hover\");\n");
      out.write("                                            fileID = this.get(\"id\");\n");
      out.write("                                            A.one(\"#info\").unplug(A.Plugin.IO);\n");
      out.write("                                            A.one(\"#info\").plug(A.Plugin.IO, {uri: 'blogInfo', data: {id: fileID}, method: 'POST'});\n");
      out.write("                                        }\n");
      out.write("                                    })\n");
      out.write("                                });\n");
      out.write("                                A.all(\".item\").each(function () {\n");
      out.write("                                    this.on(\"mouseout\", function () {\n");
      out.write("                                        if (!fixed)\n");
      out.write("                                            this.removeClass(\"file-hover\");\n");
      out.write("                                    })\n");
      out.write("                                });\n");
      out.write("                                A.all(\".fil\").each(function () {\n");
      out.write("                                    this.on(\"click\", function () {\n");
      out.write("                                        if (this.hasClass(\"file-hover\") && fixed)\n");
      out.write("                                            fixed = false;\n");
      out.write("                                        else if (fixed && !this.hasClass(\"file-hover\")) {\n");
      out.write("                                            this.radioClass(\"file-hover\");\n");
      out.write("                                            fileID = this.get(\"id\");\n");
      out.write("                                            A.one(\"#info\").unplug(A.Plugin.IO);\n");
      out.write("                                            A.one(\"#info\").plug(A.Plugin.IO, {uri: 'blogInfo', data: {id: fileID}, method: 'POST'});\n");
      out.write("                                        } else {\n");
      out.write("                                            fixed = true;\n");
      out.write("                                        }\n");
      out.write("                                    })\n");
      out.write("                                });\n");
      out.write("                                A.all(\".cat\").each(function () {\n");
      out.write("                                    this.on(\"click\", function () {\n");
      out.write("                                        of = 0;\n");
      out.write("                                        if (!this.hasClass(\"upper\"))\n");
      out.write("                                            Reload(this.get(\"id\"), null);\n");
      out.write("                                        else\n");
      out.write("                                            Reload(null, this.get(\"id\"));\n");
      out.write("                                    })\n");
      out.write("                                });\n");
      out.write("                            }}})\n");
      out.write("                }\n");
      out.write("                function dropFile(cat, file, what) {\n");
      out.write("                    if (confirm(\"Ð¥Ð¾ÑÐ¸ÑÐµ \" + what + \"?\")) {\n");
      out.write("                        if (what == \"ÑÐ´Ð°Ð»Ð¸ÑÑ Ð¿Ð°Ð¿ÐºÑ\")\n");
      out.write("                            location = \"killDocCat?c=\" + cat + \"&p1=\" + file;\n");
      out.write("                        else if (what == \"ÑÐºÑÑÑÑ ÑÐ¾Ð¾Ð±ÑÐµÐ½Ð¸Ðµ\") {\n");
      out.write("                            var str = \"tr[id=\" + file + \"] td.icon\";\n");
      out.write("                            var div = A.one(str);\n");
      out.write("                            if (div.hasClass(\"star\"))\n");
      out.write("                                alert(\"ÐÐµÐ»ÑÐ·Ñ ÑÐºÑÑÑÑ ÑÐ¾Ð¾Ð±ÑÐµÐ½Ð¸Ðµ, Ð¿Ð¾Ð¼ÐµÑÐµÐ½Ð½Ð¾Ðµ ÐºÐ°Ðº Â«ÐÐ°Ð¶Ð½Ð¾ÐµÂ»!\");\n");
      out.write("                            else\n");
      out.write("                                A.io.request('hideBlog', {cache: false, data: {id: file, star: '1'}, method: 'post', on: {success: function () {\n");
      out.write("                                            Reload(cat, null);\n");
      out.write("                                        }}});\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("                var overlayMask = new A.OverlayMask().render();\n");
      out.write("                A.one(\"#moveMain\").setStyle('opacity', '0');\n");
      out.write("                A.one('#catName').setStyle('opacity', '0');\n");
      out.write("                A.one(\"#moveMain\").plug(A.Plugin.NodeFX, conf);\n");
      out.write("                A.one('#catName').plug(A.Plugin.NodeFX, conf);\n");
      out.write("                A.one('#catName .close span').on('click', function (event) {\n");
      out.write("                    closer(A.one('#catName'));\n");
      out.write("                });\n");
      out.write("                A.one('#moveMain .close span').on('click', function (event) {\n");
      out.write("                    closer(A.one('#moveMain'));\n");
      out.write("                });\n");
      out.write("                A.one(\".aui-overlaymask-content\").setStyle(\"height\", \"100%\");\n");
      out.write("                function closer(node) {\n");
      out.write("                    node.fx.run();\n");
      out.write("                }\n");
      out.write("                function itemAdd(id) {\n");
      out.write("                    var name = window.prompt(\"Ð²Ð²ÐµÐ´Ð¸ÑÐµ Ð¸Ð¼Ñ Ð¿Ð°Ð¿ÐºÐ¸\", \"\");\n");
      out.write("                    if (name)\n");
      out.write("                        alterText(id, name, \"addDocCat\");\n");
      out.write("                    else\n");
      out.write("                        alert(\"ÐÑÐ¶Ð½Ð¾ Ð²Ð²ÐµÑÑÐ¸ Ð½Ð°Ð·Ð²Ð°Ð½Ð¸Ðµ Ð¿Ð°Ð¿ÐºÐ¸\");\n");
      out.write("                }\n");
      out.write("                function alterText(p1, p2, servlet) {\n");
      out.write("                    A.io.request(servlet, {cache: false, data: {p1: p1,\n");
      out.write("                            p2: p2}, on: {success: function () {\n");
      out.write("                                Reload(carCat, null)\n");
      out.write("                            }},\n");
      out.write("                        method: 'post'});\n");
      out.write("                }\n");
      out.write("                function itemMove(unit_id) {\n");
      out.write("                    var div = A.one(\"#moveMain\");\n");
      out.write("                    var div1 = A.one(\"#moveMain1\");\n");
      out.write("                    div1.purge(true);\n");
      out.write("                    div1.unplug(A.Plugin.IO);\n");
      out.write("                    div.setStyle(\"width\", A.DOM.winWidth() - 198 + \"px\");\n");
      out.write("                    div.setStyle(\"height\", A.DOM.winHeight() - 98 + \"px\");\n");
      out.write("                    div1.plug(A.Plugin.IO, {uri: 'blogstructure', method: 'POST', on: {end: function () {\n");
      out.write("                                var nodlist = A.all(\"#moveMain .cat\");\n");
      out.write("                                if (!fixed) {\n");
      out.write("                                    var n = A.Node.one(\"#moveMain [id=\" + unit_id + \"]\").setStyle(\"display\", \"none\");\n");
      out.write("                                    n.next().setStyle(\"display\", \"none\");\n");
      out.write("                                }\n");
      out.write("                                nodlist.on(\"mouseenter\", function (event) {\n");
      out.write("                                    event.target.addClass(\"hov\")\n");
      out.write("                                });\n");
      out.write("                                nodlist.on(\"mouseleave\", function (event) {\n");
      out.write("                                    event.target.removeClass(\"hov\")\n");
      out.write("                                });\n");
      out.write("                                nodlist.on(\"click\", function (event) {\n");
      out.write("                                    var superior = event.target.get(\"id\");\n");
      out.write("                                    if (!fixed)\n");
      out.write("                                        alterText(unit_id, superior, \"moveDocCat\");\n");
      out.write("                                    else\n");
      out.write("                                        alterText(unit_id, superior, \"moveBlogCat\");\n");
      out.write("                                    div1.purge(true);\n");
      out.write("                                    div1.unplug(A.Plugin.IO);\n");
      out.write("                                    div.fx.run();\n");
      out.write("                                });\n");
      out.write("                            }}\n");
      out.write("                    });\n");
      out.write("                    div.fx.run();\n");
      out.write("                }\n");
      out.write("                function changeCatName(id) {\n");
      out.write("                    if (id == 0)\n");
      out.write("                        alert('Ð½ÐµÐ»ÑÐ·Ñ Ð¸Ð·Ð¼ÐµÐ½ÑÑÑ ÐºÐ¾ÑÐ½ÐµÐ²ÑÑ Ð¿Ð°Ð¿ÐºÑ');\n");
      out.write("                    else {\n");
      out.write("                        var div1 = A.one(\"#catName1\");\n");
      out.write("                        var div = A.one(\"#catName\");\n");
      out.write("                        div1.unplug(A.Plugin.IO);\n");
      out.write("                        div1.plug(A.Plugin.IO, {uri: 'blogNameForm', method: 'POST', data: {id: id}});\n");
      out.write("                        div.fx.run();\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("                function markBlog(id) {\n");
      out.write("                    if (fixed) {\n");
      out.write("                        var star = 1;\n");
      out.write("                        var str = \"tr[id=\" + id + \"] td.icon\";\n");
      out.write("                        var div = A.one(str);\n");
      out.write("                        if (div.hasClass(\"star\")) {\n");
      out.write("                            star = 0;\n");
      out.write("                        } else {\n");
      out.write("                            star = 1;\n");
      out.write("                        }\n");
      out.write("                        A.io.request('blogStar', {cache: false, data: {star: star, id: id}, method: 'post', on: {success: function () {\n");
      out.write("                                    if (star == 1)\n");
      out.write("                                        div.addClass(\"star\");\n");
      out.write("                                    else\n");
      out.write("                                        div.removeClass(\"star\");\n");
      out.write("                                }}});\n");
      out.write("                    } else\n");
      out.write("                        alert(\"ÐÑÐ±ÐµÑÐ¸ÑÐµ ÑÐ¾Ð¾Ð±ÑÐµÐ½Ð¸Ðµ!\");\n");
      out.write("                }\n");
      out.write("                var myWidth = A.DOM.winWidth() - 200;\n");
      out.write("                A.one(\"#main\").setStyle(\"height\", myHeight + \"px\");\n");
      out.write("                A.one(\"#tdmain\").setStyle(\"width\", (myWidth * 0.5) + \"px\");\n");
      out.write("                A.one(\"#tdinfo\").setStyle(\"width\", (myWidth * 0.5) + \"px\");\n");
      out.write("                A.one(\"#column-3\").setStyle(\"width\", (myWidth) + \"px\");\n");
      out.write("                A.one(\"#info\").setStyle(\"width\", (myWidth * 0.5 - 58) + \"px\");\n");
      out.write("                A.one(\"#info\").setStyle(\"height\", (myHeight - 66) + \"px\");\n");
      out.write("                A.one(\"#info1\").setStyle(\"width\", (myWidth * 0.5 - 36) + \"px\");\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("        <script type=\"text/javascript\" src=\"scripts/poisk.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"scripts/topMenu.js\"></script>\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
