/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.9
 * Generated at: 2018-09-17 07:16:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class documentsMod_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      BEANS.SLOGAN SLOGAN = null;
      synchronized (application) {
        SLOGAN = (BEANS.SLOGAN) _jspx_page_context.getAttribute("SLOGAN", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (SLOGAN == null){
          SLOGAN = new BEANS.SLOGAN();
          _jspx_page_context.setAttribute("SLOGAN", SLOGAN, javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        }
      }
      out.write('\n');
      BEANS.CSSTotal CSS = null;
      synchronized (application) {
        CSS = (BEANS.CSSTotal) _jspx_page_context.getAttribute("CSS", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (CSS == null){
          CSS = new BEANS.CSSTotal();
          _jspx_page_context.setAttribute("CSS", CSS, javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        }
      }
      out.write('\n');
      BEANS.css1Bean CSS3 = null;
      CSS3 = (BEANS.css1Bean) _jspx_page_context.getAttribute("CSS3", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (CSS3 == null){
        CSS3 = new BEANS.css1Bean();
        _jspx_page_context.setAttribute("CSS3", CSS3, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      BEANS.DocClassic DC = null;
      DC = (BEANS.DocClassic) _jspx_page_context.getAttribute("DC", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (DC == null){
        DC = new BEANS.DocClassic();
        _jspx_page_context.setAttribute("DC", DC, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }

    String slogan = SLOGAN.getSlogan(request);
    String owner = request.getParameter("owner");
    String id = request.getParameter("id");
    DC.getParams(request);
    String c = DC.c + "";
    String v = DC.v + "";
    String free = DC.free + "%";
    if (DC.free <= 0) {
        free = "<span style='color:red;'>yer yoxdur</span>";
    }
    boolean editable = false;
    String role = (String) session.getAttribute("role");
    if (owner == null || (role.indexOf("o") >= 0 && owner.equals("-100")) || (role.indexOf("p") >= 0 && owner.equals("-101"))
            || (role.indexOf("q") >= 0 && owner.equals("-102")) || (role.indexOf("r") >= 0 && owner.equals("-103"))) {
        editable = true;
    }
    if (!editable) {
        response.sendRedirect("notPermited.html");
    }
    String data = "";
    if (owner != null) {
        data = ", data: {owner: \"" + owner + "\"}";
    }
    boolean general = false;
    if (owner != null && owner.equals("-100")) {
        general = true;
    }

      out.write("\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n");
      out.write("        <title>Документы: редактирование</title>\n");
      out.write("        <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"/>\n");
      out.write("        <meta http-equiv=\"content-style-type\" content=\"text/css\"/>\n");
      out.write("        <link rel=\"stylesheet\" href=\"/FILES/alloy/build/aui-skin-classic/css/aui-skin-classic-all-min.css\" type=\"text/css\" media=\"screen\" />\n");
      out.write("        <script src=\"/FILES/alloy/build/aui/aui.js\" type=\"text/javascript\"></script>\n");
      out.write("        <link rel=\"stylesheet\" href=\"index.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"blue.css\" type=\"text/css\" />\n");
      out.write("        <style type=\"text/css\">\n");
      out.write("            @import url('css/topMenu.css');\n");
      out.write("            @import url('css/exxo.css');\n");
      out.write("            #main {position: relative;margin: 25px; margin-left: 10px; width:auto;height: auto;margin-bottom: 10px;background-color: white;padding: 4px;overflow-y: auto;overflow-x: hidden;}\n");
      out.write("            table#small {width: 100%;}\n");
      out.write("            #counts {width: 150px;font-size:11px;margin: 10px; margin-top: 25px; color: black;border-color: #DEDEDE #DEDEDE #BFBFBF #DEDEDE;border-width: 1px;border-style: solid;padding: 10px;\n");
      out.write("                     background-color: white}\n");
      out.write("            #counts td.res{color:#972626; text-align: right;}\n");
      out.write("            #counts table {width: 100%;margin-bottom: 10px;}\n");
      out.write("            .inno{margin:5px;margin-left:20px; }\n");
      out.write("            table#small #main div.item {width:250px; min-height: 20px; padding: 0px; padding-left:26px; padding-top: 8px; padding-right: 5px; text-align: left; padding-bottom: 3px; }\n");
      out.write("            .cat {background-image: url(\"folder_opened.png\");background-position: left;background-repeat: no-repeat;}\n");
      out.write("            .fil {background-image: url(\"file.png\");background-position: left;background-repeat: no-repeat; border: 1px solid #e1e1f8; -moz-border-radius: 6px;\n");
      out.write("                  -webkit-border-radius: 6px; border-radius: 6px; background-color: #F3F0F0;}\n");
      out.write("            .menu1 {position: absolute;width: 150px;background: #FFFFFF;border-color: #DEDEDE #BFBFBF #BFBFBF #DEDEDE;border-style: solid;border-width: 1px; font-size: 12px;} \n");
      out.write("            .menu1 ul, .menu1 li {margin: 0;}\n");
      out.write("            .menu1 li {border-bottom: 1px solid #DEDEDE;display: block;padding: 2px;}\n");
      out.write("            .menu1 li a {display: block;padding: 1px 5px;text-decoration: none; cursor: pointer;}\n");
      out.write("            .menu1 li a:hover {background: #C1C2E0; color:white; cursor: pointer;}\n");
      out.write("            .menu1 li.NoEnter a:hover {background: white; cursor: auto;}\n");
      out.write("            .menu1 li.NoEnter {display: none;}\n");
      out.write("            .item-hover {background-color: #C1C2E0; border-radius: 0;}\n");
      out.write("            .item-hover  {color: white;}\n");
      out.write("            #form, #form1 {margin: 25px;padding:20px;position: absolute;z-index: 99998;top:20px;left:10%;height: auto;width: auto;color: black;background-color: white;\n");
      out.write("                           display: none;overflow: auto;}\n");
      out.write("            label {display:block;margin-top:10px;}\n");
      out.write("            .close {color:red;width:100%;text-align:right;}\n");
      out.write("            .close span {cursor: pointer;}\n");
      out.write("            .menu li.NoEnter a{color: gray;}\n");
      out.write("            .filepath{color:gray;}\n");
      out.write("            #hic {margin: 25px;padding:20px;position: absolute;z-index: 99998;top:20px;left:10%;height: auto;width: auto;color: black;background-color: white;\n");
      out.write("                  display: none;overflow: auto;}\n");
      out.write("            .image {background-image: url(\"small/photo.png\");background-position:  4px center;background-repeat: no-repeat;}\n");
      out.write("            .text {background-image: url(\"small/page_white_text.png\");background-position:  4px center;background-repeat: no-repeat;}\n");
      out.write("            .pdf {background-image: url(\"small/doc_pdf.png\");background-position:  4px center;background-repeat: no-repeat;}\n");
      out.write("            .doc {background-image: url(\"small/page_white_word.png\");background-position:  4px center;background-repeat: no-repeat;}\n");
      out.write("            .noresult {background-image: url(\"small/application2.png\");background-position:  4px center;background-repeat: no-repeat;}\n");
      out.write("            .xls {background-image: url(\"small/page_excel.png\");background-position:  4px center;background-repeat: no-repeat;}\n");
      out.write("            .zip {background-image: url(\"small/compress.png\");background-position:  4px center;background-repeat: no-repeat;}\n");
      out.write("            .rar {background-image: url(\"small/compress.png\");background-position:  4px center;background-repeat: no-repeat;}\n");
      out.write("            .ooo_doc {background-image: url(\"small/doc_offlice.png\");background-position:  4px center;background-repeat: no-repeat;}\n");
      out.write("            .ooo_ss {background-image: url(\"small/doc_table.png\");background-position:  4px center;background-repeat: no-repeat;}\n");
      out.write("            .audio {background-image: url(\"small/doc_music.png\");background-position:  4px center;background-repeat: no-repeat;}\n");
      out.write("            .video {background-image: url(\"small/films.png\");background-position:  4px center;background-repeat: no-repeat;}\n");
      out.write("            .pp {background-image: url(\"small/page_white_powerpoint.png\"); background-position:  left center;background-repeat: no-repeat;}\n");
      out.write("            #form input, #form1 input {width:260px;}\n");
      out.write("            #form select {width:260px;}\n");
      out.write("            #form textarea, #hic textarea{width:260px;}\n");
      out.write("            #FILEFORM input[type=submit], #mhic input[type=submit], #FILEFORM1 input[type=submit] {padding: 5px; width: 110px; margin: 10px auto; display: block;}\n");
      out.write("            #moveMain{margin: 0; padding:10px;position: absolute;z-index: 99999;top:49px;left: 99px;width: 100%;height: 100%;color: black;background-color: white;\n");
      out.write("                      display: none;overflow-y: auto;overflow-x: hidden; border-color: #DEDEDE #DEDEDE #BFBFBF #DEDEDE;border-width: 1px;border-style: solid;}\n");
      out.write("            #moveMain .fil {display: none;}\n");
      out.write("            #moveMain .close {margin-bottom: 10px;}\n");
      out.write("            .hov {color: red;}\n");
      out.write("            #moveMain .inno{margin:5px;margin-left:20px;}\n");
      out.write("            #moveMain div.cat {background-image: url(\"folder_closed.png\");background-position: left;background-repeat: no-repeat; padding:6px; padding-left: 20px;}\n");
      out.write("            #moveMain .cat {cursor: pointer; font-size: 11px;}\n");
      out.write("            textarea {overflow: auto;}\n");
      out.write("            a#load {font-size: 12px; text-decoration: none; padding-left: 15px;}\n");
      out.write("            a#load:hover {color:#972626;}\n");
      out.write("        </style>\n");
      out.write("        <style>");
      out.print(CSS.getCSS(request));
      out.write("</style><style>");
      out.print(CSS3.getCSS("documentsMode.jsp", request));
      out.write("</style>\n");
      out.write("    </head>\n");
      out.write("    <body id=\"documentsMod_jsp\">\n");
      out.write("        <div id=\"content-wrapper\">\n");
      out.write("            <div id=\"header\">\n");
      out.write("                <table id=\"tableH\">\n");
      out.write("                    <tbody>\n");
      out.write("                        <tr>\n");
      out.write("                            <td id=\"tdlogo\">\n");
      out.write("                                <img src=\"logo.png\" id=\"logo\">\n");
      out.write("                            </td>\n");
      out.write("                            <td>\n");
      out.write("                                <div id=\"head\">\n");
      out.write("                                    <table>\n");
      out.write("                                        <tbody>\n");
      out.write("                                            <tr>\n");
      out.write("                                                <td id=\"slogan\" valign=\"center\">");
      out.print( slogan);
      out.write("</td>\n");
      out.write("                                                <td>\n");
      out.write("                                                    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "poisk", out, true);
      out.write("\n");
      out.write("                                                </td>\n");
      out.write("                                            </tr>\n");
      out.write("                                        </tbody>\n");
      out.write("                                    </table>\n");
      out.write("                                </div>\n");
      out.write("                                <div id=\"foot\">\n");
      out.write("                                    <ul class=\"topMenu\">\n");
      out.write("                                        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "topMenu.xhtml", out, true);
      out.write("\n");
      out.write("                                        <li><a href=\"docClassic.jsp");
 if (owner != null) {
      out.write("?owner=");
      out.print(owner);
}
      out.write("\" class=\"footmenu\">Sonlandır</a></li>\n");
      out.write("                                        <li> <a href=\"http://exxo.ru/howto/documents-howto.html#edit1\" class=\"footmenu howto\" target=\"_blank\">?</a></li>\n");
      out.write("                                    </ul>\n");
      out.write("                                </div>\n");
      out.write("                            </td>\n");
      out.write("                        </tr>\n");
      out.write("                    </tbody>\n");
      out.write("                </table>\n");
      out.write("            </div>\n");
      out.write("            <table id=\"grid\" class=\"grid\">\n");
      out.write("                <tbody id=\"atbody\">\n");
      out.write("                    <tr id=\"tr\">\n");
      out.write("                        <td id=\"menu-td\" class=\"menu-td\" valign=\"top\">\n");
      out.write("                            <div class=\"exxo-menu exxo-shadow\" id=\"menu\">\n");
      out.write("                                ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu-doc.xhtml", out, true);
      out.write("\n");
      out.write("                            </div>\n");
      out.write("                            <div id=\"counts\" class=\"exxo-shadow\">\n");
      out.write("                                <table>\n");
      out.write("                                    <tr>\n");
      out.write("                                        <td>fayllar:</td>\n");
      out.write("                                        <td class=\"res\">");
      out.print(c);
      out.write("</td>\n");
      out.write("                                    </tr>\n");
      out.write("                                    <tr>\n");
      out.write("                                        <td>bayt:</td>\n");
      out.write("                                        <td class=\"res\">");
      out.print(v);
      out.write("</td>\n");
      out.write("                                    </tr>\n");
      out.write("                                    ");
 if (owner == null || !owner.equals("-100")) {
      out.write("\n");
      out.write("                                    <tr><td>boş yer:</td><td class=\"res\">");
      out.print(free);
      out.write("</td></tr>\n");
      out.write("                                            ");
 }
      out.write("\n");
      out.write("                                </table>\n");
      out.write("                            </div>\n");
      out.write("                            ");
 if (owner != null && owner.equals("-101")) {
      out.write("\n");
      out.write("                            <a href=\"LoadInnerDocs\" id=\"load\">Məktubdan yükləyin</a>\n");
      out.write("                            ");
}
      out.write("\n");
      out.write("                        </td>\n");
      out.write("                        <td id=\"column-3\" valign=\"top\"> \n");
      out.write("                            <table id=\"small\">\n");
      out.write("                                <tbody>\n");
      out.write("                                    <tr>\n");
      out.write("                                        <td id=\"tdmain\"  valign=\"top\">\n");
      out.write("                                            <div id=\"main\" class=\"exxo-shadow\"></div>\n");
      out.write("                                        </td>\n");
      out.write("                                    </tr>\n");
      out.write("                                </tbody>\n");
      out.write("                            </table>\n");
      out.write("                        </td>\n");
      out.write("                    </tr> \n");
      out.write("                </tbody>\n");
      out.write("            </table>\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("        <div class=\"menu1 aui-overlaycontext-hidden exxo-shadow\">\n");
      out.write("            <ul><li class=\"item-add c \"><a >Kataloq əlavə et</a></li>\n");
      out.write("                <li class=\"item-move np\"><a >Sürüşdür</a></li>\n");
      out.write("                <li class=\"item-kill np\"><a >Sil</a></li>\n");
      out.write("                <li class=\"file-ver f np\"><a >НYeni versiya</a></li>\n");
      out.write("                <li class=\"item-change np\" id=\"item-change\"><a >Adını dəyişdir</a></li>\n");
      out.write("                <li class=\"file-change f np\" id=\"file-change\"><a >Məlumatı dəyişdir</a></li>\n");
      out.write("                <li class=\"file-add c \" id=\"file-add\"><a >Faylı saxla</a></li>\n");
      out.write("                <li class=\"files-add c \" id=\"files-add\"><a >Faylları saxla</a></li>\n");
      out.write("                <li class=\"file-prop f \" id=\"file-prop\"><a >Xassələri</a></li>\n");
      out.write("            </ul></div>\n");
      out.write("        <div id=\"form\"><div class=\"close\" id=\"close\"><span>BAĞLA</span></div>\n");
      out.write("            <form id=\"FILEFORM\" action=\"addFile\" enctype=\"multipart/form-data\" method=\"POST\">\n");
      out.write("                <label for=\"file\">Faylı seç</label><input type=\"file\" name=\"file\" id=\"file\">\n");
      out.write("                <label for=\"name\">Faylın adı</label><input type=\"text\" name=\"name\" id=\"name\">\n");
      out.write("                <label for=\"dopusk\">Допуск</label>\n");
      out.write("                <select name=\"dopusk\" id=\"dopusk\" ");
 if (general) { 
      out.write("disabled=\"disabled\"");
 }
      out.write(">\n");
      out.write("                    <option value=\"0\" ");
 if (owner != null && owner.equals("-100")) { 
      out.write("selected");
 }
      out.write(">ümumi</option>    \n");
      out.write("                    <option value=\"1\" >proyekt üçün</option>\n");
      out.write("                    <option value=\"2\" >qrup üçün</option>\n");
      out.write("                    <option value=\"3\" >bölünmı üçün</option>\n");
      out.write("                    <option value=\"4\" ");
 if (!general) { 
      out.write("selected");
 }
      out.write(">şəxsi</option>\n");
      out.write("                </select>\n");
      out.write("                <label for=\"discription\">Açıqlama</label><textarea name=\"discription\" rows=\"5\" cols=\"22\" ></textarea>\n");
      out.write("                <label for=\"tags\">Teq</label><textarea name=\"tags\" rows=\"5\" cols=\"22\" ></textarea><br><br>\n");
      out.write("                ");
 if (owner != null) {
      out.write("<input type=\"hidden\" name=\"owner\" value=\"");
      out.print( owner);
      out.write('"');
      out.write('>');
}
      out.write("\n");
      out.write("                <input type=\"submit\" value=\"Yadda saxla\"></form>\n");
      out.write("        </div>\n");
      out.write("        <div id=\"form1\"><div class=\"close\" id=\"close\"><span>BAĞLA</span></div>\n");
      out.write("            <form id=\"FILEFORM1\" action=\"fileVer\" enctype=\"multipart/form-data\" method=\"POST\">\n");
      out.write("                <label for=\"file\">Fayl seçin</label><input type=\"file\" name=\"file\" id=\"file\">\n");
      out.write("                ");
 if (owner != null) {
      out.write("<input type=\"hidden\" name=\"owner\" value=\"");
      out.print( owner);
      out.write('"');
      out.write('>');
}
      out.write("\n");
      out.write("                <input type=\"submit\" value=\"Yadda saxla\"></form>\n");
      out.write("        </div>\n");
      out.write("        <div id=\"hic\"><div class=\"close\" id=\"closehic\"><span>BAĞLA</span></div><div id=\"mhic\"></div></div>\n");
      out.write("        <div id=\"moveMain\">\n");
      out.write("            <div class=\"close\"><span>BAĞLA</span></div>\n");
      out.write("            <div id=\"moveMain1\"></div>\n");
      out.write("        </div>\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("            AUI().ready('aui-node', function(A) {\n");
      out.write("            var myHeight = A.DOM.winHeight() - 150;\n");
      out.write("            if (myHeight < 300) myHeight = 300;\n");
      out.write("            A.one(\"#main\").setStyle(\"height\", myHeight + \"px\");\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("            AUI().ready('anim', 'aui-overlay-mask', 'aui-overlay-context', 'aui-io', 'aui-loading-mask', function(A) {\n");
      out.write("            var conf = {\n");
      out.write("            from:{opacity: 0},\n");
      out.write("                    to: {opacity: 1},\n");
      out.write("                    on:{'start': function(){\n");
      out.write("                    if (!this.get('reverse')){\n");
      out.write("                    overlayMask.set('target', document).show();\n");
      out.write("                    this.get('node').setStyle('display', 'block');\n");
      out.write("                    }}},\n");
      out.write("                    after: {'end': function(){\n");
      out.write("                    this.set('reverse', !this.get('reverse'));\n");
      out.write("                    this.stop();\n");
      out.write("                    if (this.get('node').getStyle('opacity') == 0) this.get('node').setStyle('display', 'none');\n");
      out.write("                    if (!this.get('reverse'))overlayMask.set('target', document).hide();\n");
      out.write("                    }}};\n");
      out.write("            var overlayMask = new A.OverlayMask().render();\n");
      out.write("            A.one(\"#moveMain\").setStyle('opacity', '0');\n");
      out.write("            A.one('#form1').setStyle('opacity', '0');\n");
      out.write("            A.one('#form').setStyle('opacity', '0');\n");
      out.write("            A.one(\"#moveMain\").plug(A.Plugin.NodeFX, conf);\n");
      out.write("            A.one('#hic').setStyle('opacity', '0');\n");
      out.write("            A.one(\"#hic\").plug(A.Plugin.NodeFX, conf);\n");
      out.write("            A.one('#form1').plug(A.Plugin.NodeFX, conf);\n");
      out.write("            A.one('#form1').plug(A.LoadingMask, {background: '#000'});\n");
      out.write("            A.one('#form').plug(A.LoadingMask, {background: '#000'});\n");
      out.write("            A.one('#form input[type=submit]').after('click', function(){A.one('#form').loadingmask.toggle()});\n");
      out.write("            A.one('#form1 input[type=submit]').after('click', function(){A.one('#form1').loadingmask.toggle()});\n");
      out.write("            A.one('#form').plug(A.Plugin.NodeFX, conf);\n");
      out.write("            A.one('#form1 .close span').on('click', function(event){closer(A.one('#form1')); });\n");
      out.write("            A.one('#form .close span').on('click', function(event){closer(A.one('#form')); });\n");
      out.write("            A.one('#moveMain .close span').on('click', function(event){closer(A.one('#moveMain')); });\n");
      out.write("            A.one('#hic .close span').on('click', function(event){closer(A.one('#hic')); });\n");
      out.write("            Reload();\n");
      out.write("            function Reload(){\n");
      out.write("            A.one('div.menu1').purge(true);\n");
      out.write("            A.one(\"#main\").unplug(A.Plugin.IO);\n");
      out.write("            A.one(\"#main\").plug(A.Plugin.IO, { uri: 'documents', method: 'POST', on:{'end':function(event){\n");
      out.write("            //A.all(\".fil\").each(function(){this.addClass(\"exxo-shadow\");});  \n");
      out.write("            var menuOverlay = new A.OverlayContext({\n");
      out.write("            boundingBox: '.menu1', hideDelay: 200, hideOn: 'mouseleave', showDelay: 10, showOn: 'mouseenter', trigger: '#main .item',\n");
      out.write("                    align: { node: null, points: [ 'bl', 'br' ] }, on: {\n");
      out.write("            show: function(event) {\n");
      out.write("            menuOverlay.get('currentNode').addClass('item-hover');\n");
      out.write("            if (menuOverlay.get('currentNode').hasClass(\"fil\"))\n");
      out.write("                    A.all(\".c\").addClass(\"NoEnter\");\n");
      out.write("            else if (menuOverlay.get('currentNode').hasClass(\"cat\"))\n");
      out.write("                    A.all(\".f\").addClass(\"NoEnter\");\n");
      out.write("            if (menuOverlay.get('currentNode').hasClass(\"r\"))\n");
      out.write("                    A.all(\".np\").addClass(\"NoEnter\");\n");
      out.write("            },\n");
      out.write("                    hide: function(event) {\n");
      out.write("\n");
      out.write("                    A.all('.item').removeClass('item-hover');\n");
      out.write("                    A.all(\".c\").removeClass(\"NoEnter\");\n");
      out.write("                    A.all(\".f\").removeClass(\"NoEnter\");\n");
      out.write("                    A.all(\".np\").removeClass(\"NoEnter\");\n");
      out.write("                    },\n");
      out.write("                    xyChange: function(event) {\n");
      out.write("                    A.all('.item').removeClass('item-hover');\n");
      out.write("                    A.all(\".c\").removeClass(\"NoEnter\");\n");
      out.write("                    A.all(\".f\").removeClass(\"NoEnter\");\n");
      out.write("                    A.all(\".np\").removeClass(\"NoEnter\");\n");
      out.write("                    }},\n");
      out.write("                    after:{xyChange: function(event) {\n");
      out.write("                    this.get('currentNode').addClass('item-hover');\n");
      out.write("                    if (this.get('currentNode').hasClass(\"fil\"))\n");
      out.write("                            A.all(\".c\").addClass(\"NoEnter\");\n");
      out.write("                    else if (this.get('currentNode').hasClass(\"cat\"))\n");
      out.write("                            A.all(\".f\").addClass(\"NoEnter\");\n");
      out.write("                    if (this.get('currentNode').hasClass(\"r\"))\n");
      out.write("                            A.all(\".np\").addClass(\"NoEnter\");\n");
      out.write("                    }}}).render();\n");
      out.write("            A.all('.item').removeClass('item-hover');\n");
      out.write("            A.all('div.menu1 li').each(function(){this.on('click', function(event){\n");
      out.write("            var node = menuOverlay.get('currentNode');\n");
      out.write("            var item = this;\n");
      out.write("            var Enter = true;\n");
      out.write("            if (item.hasClass(\"NoEnter\")) Enter = false;\n");
      out.write("            menuOverlay.hide();\n");
      out.write("            registrat(item, node, Enter);\n");
      out.write("            })});\n");
      out.write("            }}");
      out.print( data);
      out.write("\n");
      out.write("            });\n");
      out.write("            }\n");
      out.write("            function registrat(item, node, Enter){\n");
      out.write("            if (item.hasClass(\"item-move\") && Enter) itemMove(node);\n");
      out.write("            else if (item.hasClass(\"item-kill\") && Enter) itemKill(node);\n");
      out.write("            else if (item.hasClass(\"item-add\") && Enter) itemAdd(node);\n");
      out.write("            else if (item.hasClass(\"item-change\") && Enter) itemChange(node);\n");
      out.write("            else if (item.hasClass(\"file-add\") && Enter) fileAdd(node);\n");
      out.write("            else if (item.hasClass(\"files-add\") && Enter) filesAdd(node);\n");
      out.write("            else if (item.hasClass(\"file-change\") && Enter) fileChange(node);\n");
      out.write("            else if (item.hasClass(\"file-prop\") && Enter) fileProp(node);\n");
      out.write("            else if (item.hasClass(\"file-ver\") && Enter) fileVer(node);\n");
      out.write("            }\n");
      out.write("            function itemKill(node){\n");
      out.write("            if (!node.next().hasChildNodes()) {\n");
      out.write("            if (confirm(\"Silmək istəyirsinizmi?\")) {\n");
      out.write("            if (node.hasClass(\"copy\")) alterText(node.get(\"id\"), \"0\"");
 if (owner != null) {
      out.write(',');
      out.write(' ');
      out.write('"');
      out.print( owner);
      out.write('"');
}
      out.write(", \"dropCopy\");\n");
      out.write("            else if (node.hasClass('fil')) {\n");
      out.write("            if (node.hasClass('s_6'))  alert(\"Əməliyyat təsdiq edilmiş sənədlə qadağandır!\");\n");
      out.write("            else alterText(node.get(\"id\"), \"0\"");
 if (owner != null) {
      out.write(',');
      out.write(' ');
      out.write('"');
      out.print( owner);
      out.write('"');
}
      out.write(", \"dropFile\");\n");
      out.write("            }\n");
      out.write("            else alterText(node.get(\"id\"), \"0\"");
 if (owner != null) {
      out.write(',');
      out.write(' ');
      out.write('"');
      out.print( owner);
      out.write('"');
}
      out.write(", \"killCat\");\n");
      out.write("            }}\n");
      out.write("            else alert(\"Yalnız boş qovluğu silə bilərsiniz! Daxildəki məlumatları silmək lazımdır\")\n");
      out.write("            }\n");
      out.write("            function itemAdd(node){\n");
      out.write("            var name = window.prompt(\"Kataloq adını daxil edin\", \"\");\n");
      out.write("            if (name) alterText(node.get(\"id\"), name");
 if (owner != null) {
      out.write(',');
      out.write(' ');
      out.write('"');
      out.print( owner);
      out.write('"');
}
      out.write(", \"addCat\");\n");
      out.write("            }\n");
      out.write("            function itemChange(node){\n");
      out.write("            var html = node.cloneNode(true);\n");
      out.write("            if (html.one(\"span\")) html.one(\"span\").remove();\n");
      out.write("            var name = window.prompt(\"fayl və ya kataloqa yeni ad verin\", html.text());\n");
      out.write("            if (name) alterText(node.get(\"id\"), name");
 if (owner != null) {
      out.write(',');
      out.write(' ');
      out.write('"');
      out.print( owner);
      out.write('"');
}
      out.write(", \"changeCat\");\n");
      out.write("            }\n");
      out.write("            function itemMove(node){\n");
      out.write("            var unit_id = node.get(\"id\");\n");
      out.write("            var div = A.one(\"#moveMain\");\n");
      out.write("            var div1 = A.one(\"#moveMain1\");\n");
      out.write("            div1.purge(true);\n");
      out.write("            div1.unplug(A.Plugin.IO);\n");
      out.write("            div.setStyle(\"width\", A.DOM.winWidth() - 198 + \"px\");\n");
      out.write("            div.setStyle(\"height\", A.DOM.winHeight() - 98 + \"px\");\n");
      out.write("            div1.plug(A.Plugin.IO, { uri: 'documents', method: 'POST', on:{end:function(){\n");
      out.write("            var nodlist = A.all(\"#moveMain .cat\");\n");
      out.write("            var n = A.Node.one(\"#moveMain [id=\" + unit_id + \"]\").setStyle(\"display\", \"none\");\n");
      out.write("            n.next().setStyle(\"display\", \"none\");\n");
      out.write("            nodlist.on(\"mouseenter\", function(event){event.target.addClass(\"hov\")});\n");
      out.write("            nodlist.on(\"mouseleave\", function(event){event.target.removeClass(\"hov\")});\n");
      out.write("            nodlist.on(\"click\", function(event){\n");
      out.write("            var superior = event.target.get(\"id\");\n");
      out.write("            alterText(unit_id, superior");
 if (owner != null) {
      out.write(',');
      out.write(' ');
      out.write('"');
      out.print( owner);
      out.write('"');
}
      out.write(", \"moveCat\");\n");
      out.write("            div1.purge(true);\n");
      out.write("            div1.unplug(A.Plugin.IO);\n");
      out.write("            div.fx.run();\n");
      out.write("            });\n");
      out.write("            }}");
      out.print( data);
      out.write("\n");
      out.write("            });\n");
      out.write("            div.fx.run();\n");
      out.write("            }\n");
      out.write("            function fileAdd(node){\n");
      out.write("            var id = node.get(\"id\");\n");
      out.write("            var str = \"<input type='hidden' name='superior' value='\" + id + \"'>\";\n");
      out.write("            A.one('#FILEFORM').append(A.Node.create(str));\n");
      out.write("            A.one('#form').fx.run();\n");
      out.write("            }\n");
      out.write("            function alterText(p1, p2");
 if (owner != null) {
      out.write(", owner");
}
      out.write(", servlet){\n");
      out.write("            A.io.request(servlet, {cache: false, data: {p1: p1,\n");
      out.write("                    p2: p2 ");
 if (owner != null) {
      out.write(", owner:");
      out.print( owner);
}
      out.write("\n");
      out.write("            }, on:{success:function(){Reload()}},\n");
      out.write("                    method: 'post'});\n");
      out.write("            }\n");
      out.write("            function closer(node){node.fx.run(); }\n");
      out.write("            function fileChange(node){\n");
      out.write("            var fileID = node.get(\"id\");\n");
      out.write("            A.one('#mhic').unplug(A.Plugin.IO);\n");
      out.write("            A.one('#mhic').plug(A.Plugin.IO, { uri: 'fileForm', data:{id:fileID ");
 if (owner != null) {
      out.write(", owner:");
      out.print( owner);
}
      out.write(" }, method: 'POST'});\n");
      out.write("            A.one('#hic').fx.run();\n");
      out.write("            }\n");
      out.write("            function fileProp(node){location = \"fileProp.jsp?id=\" + node.get(\"id\"); }\n");
      out.write("            function fileVer(node){\n");
      out.write("            if (node.hasClass(\"copy\")) alert (\"Sənədin surətinə yeni versiya əlavə edə bilməzsiniz!\");\n");
      out.write("            else if (node.hasClass(\"s_6\")) alert (\"Əməliyyat təsdiq edilmiş sənədlə qadağandır!\");\n");
      out.write("            else {\n");
      out.write("            var id = node.get(\"id\");\n");
      out.write("            var str = \"<input type='hidden' name='id' value='\" + id + \"'>\";\n");
      out.write("            A.one('#FILEFORM1').append(A.Node.create(str));\n");
      out.write("            A.one('#form1').fx.run(); }}\n");
      out.write("            function filesAdd(node) {\n");
      out.write("            var id = node.get(\"id\");\n");
      out.write("            location = \"addFile.xhtml?cat=\" + id + \"");
if (owner != null) {
      out.write("&owner=");
      out.print( owner);
}
      out.write("\";\n");
      out.write("                }\n");
      out.write("                A.one(\".aui-overlaymask-content\").setStyle(\"height\", \"100%\");\n");
      out.write("                });\n");
      out.write("        </script>\n");
      out.write("        <script type=\"text/javascript\" src=\"scripts/poisk.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"scripts/topMenu.js\"></script>\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
