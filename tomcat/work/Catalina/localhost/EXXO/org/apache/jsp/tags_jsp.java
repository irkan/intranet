/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.9
 * Generated at: 2018-08-21 08:09:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class tags_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      BEANS.SLOGAN SLOGAN = null;
      synchronized (application) {
        SLOGAN = (BEANS.SLOGAN) _jspx_page_context.getAttribute("SLOGAN", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (SLOGAN == null){
          SLOGAN = new BEANS.SLOGAN();
          _jspx_page_context.setAttribute("SLOGAN", SLOGAN, javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        }
      }
      BEANS.CSSTotal CSS = null;
      synchronized (application) {
        CSS = (BEANS.CSSTotal) _jspx_page_context.getAttribute("CSS", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (CSS == null){
          CSS = new BEANS.CSSTotal();
          _jspx_page_context.setAttribute("CSS", CSS, javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        }
      }
      out.write('\n');
      BEANS.css1Bean CSS3 = null;
      CSS3 = (BEANS.css1Bean) _jspx_page_context.getAttribute("CSS3", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (CSS3 == null){
        CSS3 = new BEANS.css1Bean();
        _jspx_page_context.setAttribute("CSS3", CSS3, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      BEANS.tagsBean TAGS = null;
      TAGS = (BEANS.tagsBean) _jspx_page_context.getAttribute("TAGS", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (TAGS == null){
        TAGS = new BEANS.tagsBean();
        _jspx_page_context.setAttribute("TAGS", TAGS, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }

    String slogan = SLOGAN.getSlogan(request);
    String role = (String) session.getAttribute("role");
    String owner = request.getParameter("owner");
    String id = (String) session.getAttribute("id");
    String list = TAGS.getList(id, request);
    if (role.indexOf("a") < 0 && role.indexOf("k") < 0 && !TAGS.permitted) {
        response.sendRedirect("notPermited.html");
    }
    String data = "";
    if (owner != null) {
        data = ", data: {owner: \"" + owner + "\"}";
    }

      out.write("\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n");
      out.write("        <title>Teq strukturunu redakt…ô edin</title>\n");
      out.write("        <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"/>\n");
      out.write("        <meta http-equiv=\"content-style-type\" content=\"text/css\"/>\n");
      out.write("        <link rel=\"stylesheet\" href=\"/FILES/alloy/build/aui-skin-classic/css/aui-skin-classic-all-min.css\" type=\"text/css\" media=\"screen\" />\n");
      out.write("        <script src=\"/FILES/alloy/build/aui/aui.js\" type=\"text/javascript\"></script>\n");
      out.write("        <link rel=\"stylesheet\" href=\"index.css\" type=\"text/css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"blue.css\" type=\"text/css\" />\n");
      out.write("        <style type=\"text/css\">\n");
      out.write("            @import url('css/topMenu.css');\n");
      out.write("            .inno{margin:5px;margin-left:20px; }\n");
      out.write("            .item {width:150px; font-size: 12px; padding: 4px;}\n");
      out.write("            .cat {background-image: url(\"folder_opened.png\");background-position: left;background-repeat: no-repeat;padding-left: 20px;}\n");
      out.write("            .r {background-image: url(\"img/home.png\");}\n");
      out.write("            .fil {background-image: url(\"img/tag.png\");background-position: left;background-repeat: no-repeat;padding-left: 20px;}\n");
      out.write("            .menu {position: absolute;width: 150px;background: #FFFFFF;border-color: #DEDEDE #BFBFBF #BFBFBF #DEDEDE;border-style: solid;border-width: 1px; font-size: 12px;}\n");
      out.write("            .menu ul, .menu li {margin: 0;}\n");
      out.write("            .menu li {border-bottom: 1px solid #DEDEDE;display: block;padding: 2px;}\n");
      out.write("            .menu li a {display: block;padding: 2px 5px;text-decoration: none;color: #336699; cursor: pointer;}\n");
      out.write("            .menu li a:hover {background: #ccc;color:red; cursor: pointer;}\n");
      out.write("            .menu li.NoEnter a:hover {background: white; cursor: auto;}\n");
      out.write("            .item-hover {background: red;}\n");
      out.write("            .item-hover  {color: white;}\n");
      out.write("            #main {position: relative;margin: 25px; margin-top: 0px; width:auto;height: 50%;overflow-y: auto;overflow-x: hidden;border-color: #dedede #dedede #bfbfbf #dedede;\n");
      out.write("                   border-width: 1px;border-style: solid; background-color: #d8d8ff;}\n");
      out.write("            #moveMain{margin: 0; padding:10px;position: absolute;z-index: 99999;top:49px;left: 99px;width: 100%;height: 100%;color: black;background-color: white;\n");
      out.write("                      display: none;overflow-y: auto;overflow-x: hidden; border-color: #DEDEDE #DEDEDE #BFBFBF #DEDEDE;border-width: 1px;border-style: solid;}\n");
      out.write("            .hov{color:black;background-color: white;}\n");
      out.write("            #form {margin: 25px;padding:20px;position: absolute;z-index: 99998;top:20px;left:10%;height: auto;width: auto;color: black;background-color: white;\n");
      out.write("                   display: none;overflow: auto;}\n");
      out.write("            label {display:block;margin-top:10px;}\n");
      out.write("            .close {color:red;width:100%;text-align:right;}\n");
      out.write("            .close span {cursor: pointer;}\n");
      out.write("            .menu li.NoEnter {display: none}\n");
      out.write("            .filepath{color:gray;}\n");
      out.write("            #hic {margin: 25px;padding:20px;position: absolute;z-index: 99998;top:20px;left:10%;height: auto;width: auto;color: black;background-color: white;\n");
      out.write("                  display: none;overflow: auto;}\n");
      out.write("            #form input {width:100%;}\n");
      out.write("            #FILEFORM input[type=submit], #mhic input[type=submit] {padding: 5px; width: 110px; margin: 10px auto; display: block;}\n");
      out.write("            #moveMain .close {margin-bottom: 10px;}\n");
      out.write("            #moveMain .fil {display: none;}\n");
      out.write("            #moveMain .cat:hover {cursor: pointer; color: red;}\n");
      out.write("            #mhic {font-size: 12px;}\n");
      out.write("            #mhic label {color: gray;}\n");
      out.write("        </style>\n");
      out.write("        <style>");
      out.print(CSS.getCSS(request));
      out.write("</style><style>");
      out.print(CSS3.getCSS("tags.jsp", request));
      out.write("</style>\n");
      out.write("    </head>\n");
      out.write("    <body id=\"tags_jsp\">\n");
      out.write("        <div id=\"content-wrapper\">\n");
      out.write("            <div id=\"header\">\n");
      out.write("                <table id=\"tableH\">\n");
      out.write("                    <tbody>\n");
      out.write("                        <tr>\n");
      out.write("                            <td id=\"tdlogo\"><img src=\"logo.png\" id=\"logo\"></td>\n");
      out.write("                            <td>\n");
      out.write("                                <div id=\"head\">\n");
      out.write("                                    <table>\n");
      out.write("                                        <tbody>\n");
      out.write("                                            <tr><td id=\"slogan\" valign=\"center\">");
      out.print( slogan);
      out.write("</td>\n");
      out.write("                                                <td>\n");
      out.write("                                                    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "poisk", out, true);
      out.write("\n");
      out.write("                                                </td>\n");
      out.write("                                            </tr>\n");
      out.write("                                        </tbody>\n");
      out.write("                                    </table>\n");
      out.write("                                </div>\n");
      out.write("                                <div id=\"foot\">\n");
      out.write("                                    <ul class=\"topMenu\">\n");
      out.write("                                        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "topMenu.xhtml", out, true);
      out.write("\n");
      out.write("                                        <li><a href=\"findTag.jsp\" class=\"footmenu\">Sonlandƒ±r</a></li>\n");
      out.write("                                        <li> <a href=\"http://exxo.ru/howto/knowledge-management-howto.html#creation\" class=\"footmenu howto\" target=\"_blank\">?</a></li>\n");
      out.write("                                    </ul>\n");
      out.write("                                </div>\n");
      out.write("                            </td>\n");
      out.write("                        </tr>\n");
      out.write("                    </tbody>\n");
      out.write("                </table>\n");
      out.write("            </div>\n");
      out.write("            <table id=\"grid\" class=\"grid\">\n");
      out.write("                <tbody id=\"atbody\"><tr id=\"tr\">\n");
      out.write("                        <td id=\"column-3\" valign=\"top\">\n");
      out.write("                            <div id=\"main\" class=\"exxo-shadow\"></div>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                </tbody>\n");
      out.write("            </table>\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("        <div class=\"menu aui-overlaycontext-hidden\">\n");
      out.write("            <ul><li class=\"item-add c \"><a >Kateqoriya …ôlav…ô et</a></li>\n");
      out.write("                <li class=\"item-move np\"><a >Yerini d…ôyi≈ü</a></li>\n");
      out.write("                <li class=\"item-kill np\"><a >Sil</a></li>\n");
      out.write("                <li class=\"item-change np\" id=\"item-change\"><a >Adƒ±nƒ± d…ôyi≈ü</a></li>\n");
      out.write("                <li class=\"file-change np\" id=\"file-change\"><a >D…ôyi≈üikliyin sahibi</a></li>\n");
      out.write("                <li class=\"file-add c \" id=\"file-add\"><a >Teq …ôlav…ô et</a></li></ul></div>\n");
      out.write("        <div id=\"moveMain\"><div class=\"close\" id=\"closeM\"><span>BAƒûLA</span></div><div id=\"Move\"></div></div>\n");
      out.write("        <div id=\"form\"><div class=\"close\" id=\"close\"><span>BAƒûLA</span></div>\n");
      out.write("            <form id=\"FILEFORM\" action=\"addTag\" method=\"POST\">\n");
      out.write("                <label for=\"name\">Ad</label><input type=\"text\" name=\"name\" id=\"name\">\n");
      out.write("                <label for=\"discription\">Sahibi</label><select name=\"owner\" id=\"owner\">");
      out.print( list);
      out.write("</select><br><br>\n");
      out.write("                <input type=\"hidden\" name=\"tag\" id=\"tag\" value=\"0\">\n");
      out.write("                <input type='hidden' name='superior' value='0' id=\"superior\">\n");
      out.write("                <input type=\"submit\" value=\"Yadda saxla\"></form>\n");
      out.write("        </div>\n");
      out.write("        <div id=\"hic\"><div class=\"close\" id=\"closehic\"><span>BAƒûLA</span></div><div id=\"mhic\"></div></div>\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("            AUI().ready('anim', 'aui-overlay-mask', 'aui-overlay-context', 'aui-io', function(A) {\n");
      out.write("            var overlayMask = new A.OverlayMask().render();\n");
      out.write("            var conf = {\n");
      out.write("            from:{opacity: 0},\n");
      out.write("                    to: {opacity: 1},\n");
      out.write("                    on:{'start': function(){\n");
      out.write("                    if (!this.get('reverse')){\n");
      out.write("                    overlayMask.set('target', document).show();\n");
      out.write("                    this.get('node').setStyle('display', 'block');\n");
      out.write("                    }}},\n");
      out.write("                    after: {'end': function(){\n");
      out.write("                    this.set('reverse', !this.get('reverse'));\n");
      out.write("                    this.stop();\n");
      out.write("                    if (this.get('node').getStyle('opacity') == 0) this.get('node').setStyle('display', 'none');\n");
      out.write("                    if (!this.get('reverse'))overlayMask.set('target', document).hide();\n");
      out.write("                    }}};\n");
      out.write("            A.one('#form').setStyle('opacity', '0');\n");
      out.write("            A.one('#form').plug(A.Plugin.NodeFX, conf);\n");
      out.write("            A.one('#hic').setStyle('opacity', '0');\n");
      out.write("            A.one('#hic').plug(A.Plugin.NodeFX, conf);\n");
      out.write("            A.one('#moveMain').setStyle('opacity', '0');\n");
      out.write("            A.one('#moveMain').plug(A.Plugin.NodeFX, conf);\n");
      out.write("            var myHeight = A.DOM.winHeight() - 160;\n");
      out.write("            if (myHeight < 300) myHeight = 300;\n");
      out.write("            A.one('#close span').on('click', function(event){closer(A.one('#form')); });\n");
      out.write("            A.one('#closehic span').on('click', function(event){closer(A.one('#hic')); });\n");
      out.write("            Reload();\n");
      out.write("            function Reload(){\n");
      out.write("            A.one('div.menu').purge(true);\n");
      out.write("            A.one(\"#main\").unplug(A.Plugin.IO);\n");
      out.write("            A.one(\"#main\").plug(A.Plugin.IO, { uri: 'tags', method: 'POST', on:{'end':function(event){var menuOverlay = new A.OverlayContext({\n");
      out.write("            boundingBox: '.menu', hideDelay: 200, hideOn: 'mouseleave', showDelay: 0, showOn: 'mouseenter', trigger: '.item',\n");
      out.write("                    align: { node: null, points: [ 'bl', 'br' ] }, on: {\n");
      out.write("            show: function(event) {\n");
      out.write("            menuOverlay.get('currentNode').addClass('item-hover');\n");
      out.write("            if (menuOverlay.get('currentNode').hasClass(\"fil\"))\n");
      out.write("                    A.all(\".c\").addClass(\"NoEnter\");\n");
      out.write("            else if (menuOverlay.get('currentNode').hasClass(\"cat\"))\n");
      out.write("                    A.all(\".f\").addClass(\"NoEnter\");\n");
      out.write("            if (menuOverlay.get('currentNode').hasClass(\"r\"))\n");
      out.write("                    A.all(\".np\").addClass(\"NoEnter\");\n");
      out.write("            },\n");
      out.write("                    hide: function(event) {\n");
      out.write("\n");
      out.write("                    A.all('.item').removeClass('item-hover');\n");
      out.write("                    A.all(\".c\").removeClass(\"NoEnter\");\n");
      out.write("                    A.all(\".f\").removeClass(\"NoEnter\");\n");
      out.write("                    A.all(\".np\").removeClass(\"NoEnter\");\n");
      out.write("                    },\n");
      out.write("                    xyChange: function(event) {\n");
      out.write("                    A.all('.item').removeClass('item-hover');\n");
      out.write("                    A.all(\".c\").removeClass(\"NoEnter\");\n");
      out.write("                    A.all(\".f\").removeClass(\"NoEnter\");\n");
      out.write("                    A.all(\".np\").removeClass(\"NoEnter\");\n");
      out.write("                    }},\n");
      out.write("                    after:{xyChange: function(event) {\n");
      out.write("                    this.get('currentNode').addClass('item-hover');\n");
      out.write("                    if (this.get('currentNode').hasClass(\"fil\"))\n");
      out.write("                            A.all(\".c\").addClass(\"NoEnter\");\n");
      out.write("                    else if (this.get('currentNode').hasClass(\"cat\"))\n");
      out.write("                            A.all(\".f\").addClass(\"NoEnter\");\n");
      out.write("                    if (this.get('currentNode').hasClass(\"r\"))\n");
      out.write("                            A.all(\".np\").addClass(\"NoEnter\");\n");
      out.write("                    }}}).render();\n");
      out.write("            A.all('.item').removeClass('item-hover');\n");
      out.write("            A.all('div.menu li').each(function(){this.on('click', function(event){\n");
      out.write("            var node = menuOverlay.get('currentNode');\n");
      out.write("            var item = this;\n");
      out.write("            var Enter = true;\n");
      out.write("            if (item.hasClass(\"NoEnter\")) Enter = false;\n");
      out.write("            menuOverlay.hide();\n");
      out.write("            registrat(item, node, Enter);\n");
      out.write("            })});\n");
      out.write("            A.one(\"#main\").setStyle(\"height\", myHeight + \"px\");\n");
      out.write("            }}");
      out.print( data);
      out.write("\n");
      out.write("            });\n");
      out.write("            }\n");
      out.write("            function registrat(item, node, Enter){\n");
      out.write("            if (item.hasClass(\"item-move\") && Enter) itemMove(node);\n");
      out.write("            else if (item.hasClass(\"item-kill\") && Enter) itemKill(node);\n");
      out.write("            else if (item.hasClass(\"item-add\") && Enter) itemAdd(node);\n");
      out.write("            else if (item.hasClass(\"item-change\") && Enter) itemChange(node);\n");
      out.write("            else if (item.hasClass(\"file-add\") && Enter) fileAdd(node);\n");
      out.write("            else if (item.hasClass(\"file-change\") && Enter) fileChange(node);\n");
      out.write("            }\n");
      out.write("            function itemKill(node){\n");
      out.write("            if (!node.next().hasChildNodes()) alterText(node.get(\"id\"), \"0\"");
 if (owner != null) {
      out.write(',');
      out.write(' ');
      out.write('"');
      out.print( owner);
      out.write('"');
}
      out.write(", \"killTag\");\n");
      out.write("            else alert(\"Yalnƒ±z bo≈ü b√∂lm…ôni sil…ô bil…ôrsiniz. B√∂lm…ônin m…ôzmununu silm…ôk lazƒ±mdƒ±r!\")\n");
      out.write("            }\n");
      out.write("            function itemAdd(node){\n");
      out.write("            var id = node.get(\"id\");\n");
      out.write("            A.one('#FILEFORM input#superior').set(\"value\", id);\n");
      out.write("            A.one('#FILEFORM input#tag').set(\"value\", \"0\");\n");
      out.write("            A.one('#form').fx.run();\n");
      out.write("            }\n");
      out.write("            function itemChange(node){\n");
      out.write("            var html = node.cloneNode(true);\n");
      out.write("            if (html.one(\"span\")) html.one(\"span\").remove();\n");
      out.write("            var name = window.prompt(\"b√∂lm…ônin v…ô ya teqin yeni adƒ±nƒ± daxil edin\", html.text());\n");
      out.write("            if (name) alterText(node.get(\"id\"), name");
 if (owner != null) {
      out.write(',');
      out.write(' ');
      out.write('"');
      out.print( owner);
      out.write('"');
}
      out.write(", \"changeTag\");\n");
      out.write("            }\n");
      out.write("            function itemMove(node){\n");
      out.write("            var div = A.one(\"#Move\");\n");
      out.write("            var Div = A.one(\"#moveMain\");\n");
      out.write("            div.purge(true);\n");
      out.write("            div.unplug(A.Plugin.IO);\n");
      out.write("            Div.setStyle(\"width\", A.DOM.winWidth() - 198 + \"px\");\n");
      out.write("            Div.setStyle(\"height\", A.DOM.winHeight() - 98 + \"px\");\n");
      out.write("            div.plug(A.Plugin.IO, { uri: 'tags', method: 'POST', on:{end:function(){\n");
      out.write("            //alert(\"–£–∫–∞–∂–∏—Ç–µ, –∫—É–¥–∞ –≤ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ\");\n");
      out.write("            var nodlist = A.all(\"#moveMain .cat\");\n");
      out.write("            var unit_id = node.get(\"id\");\n");
      out.write("            var n = A.Node.one(\"#moveMain [id=\" + unit_id + \"]\").setStyle(\"display\", \"none\");\n");
      out.write("            n.next().setStyle(\"display\", \"none\");\n");
      out.write("            //A.one(\"#moveMain .r\").setStyle(\"display\",\"none\");\n");
      out.write("            nodlist.on(\"mouseenter\", function(event){event.target.addClass(\"hov\")});\n");
      out.write("            nodlist.on(\"mouseleave\", function(event){event.target.removeClass(\"hov\")});\n");
      out.write("            nodlist.on(\"click\", function(event){\n");
      out.write("            var superior = event.target.get(\"id\");\n");
      out.write("            alterText(unit_id, superior");
 if (owner != null) {
      out.write(',');
      out.write(' ');
      out.write('"');
      out.print( owner);
      out.write('"');
}
      out.write(", \"moveTag\");\n");
      out.write("            div.purge(true);\n");
      out.write("            div.unplug(A.Plugin.IO);\n");
      out.write("            Div.fx.run();\n");
      out.write("            });\n");
      out.write("            }}");
      out.print( data);
      out.write("\n");
      out.write("            });\n");
      out.write("            Div.fx.run();\n");
      out.write("            }\n");
      out.write("            A.one(\"#closeM span\").on(\"click\", function(event){A.one(\"#moveMain\").fx.run(); });\n");
      out.write("            function fileAdd(node){\n");
      out.write("            var id = node.get(\"id\");\n");
      out.write("            A.one('#FILEFORM input#superior').set(\"value\", id);\n");
      out.write("            A.one('#FILEFORM input#tag').set(\"value\", \"1\");\n");
      out.write("            A.one('#form').fx.run();\n");
      out.write("            }\n");
      out.write("            function alterText(p1, p2");
 if (owner != null) {
      out.write(", owner");
}
      out.write(", servlet){\n");
      out.write("            A.io.request(servlet, {cache: false, data: {p1: p1,\n");
      out.write("                    p2: p2 ");
 if (owner != null) {
      out.write(", owner:");
      out.print( owner);
}
      out.write("\n");
      out.write("            }, on:{success:function(){Reload()}},\n");
      out.write("                    method: 'post'});\n");
      out.write("            }\n");
      out.write("            function closer(node){node.fx.run(); }\n");
      out.write("            function fileChange(node){\n");
      out.write("            var fileID = node.get(\"id\");\n");
      out.write("            A.one('#mhic').unplug(A.Plugin.IO);\n");
      out.write("            A.one('#mhic').plug(A.Plugin.IO, { uri: 'tagForm', data:{id:fileID ");
 if (owner != null) {
      out.write(", owner:");
      out.print( owner);
}
      out.write(" }, method: 'POST'});\n");
      out.write("            A.one('#hic').fx.run();\n");
      out.write("            }\n");
      out.write("            A.one(\".aui-overlaymask-content\").setStyle(\"height\", \"100%\");\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("        <script type=\"text/javascript\" src=\"scripts/poisk.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"scripts/topMenu.js\"></script>\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
