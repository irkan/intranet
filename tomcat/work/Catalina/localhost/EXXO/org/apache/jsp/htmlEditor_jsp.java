/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.9
 * Generated at: 2018-08-16 13:08:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class htmlEditor_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      BEANS.html HTML = null;
      synchronized (application) {
        HTML = (BEANS.html) _jspx_page_context.getAttribute("HTML", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (HTML == null){
          HTML = new BEANS.html();
          _jspx_page_context.setAttribute("HTML", HTML, javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        }
      }
      out.write('\n');

    String role = (String) session.getAttribute("role");
    String id = request.getParameter("id");
    String b = request.getParameter("b");
    if (b == null || b.equals("")) {
        b = "2";
    }

    if (role.indexOf("a") < 0 && role.indexOf("b") < 0) {
        response.sendRedirect("notPermited.html");
    }
    String html = HTML.getHtml(id, request);

      out.write("\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" >\n");
      out.write("        <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"/FILES/alloy/build/aui-skin-classic/css/aui-skin-classic-all-min.css\" type=\"text/css\" media=\"screen\" />\n");
      out.write("        <script src=\"/FILES/alloy/build/aui/aui.js\" type=\"text/javascript\"></script>\n");
      out.write("        <title>Редактор портала</title>\n");
      out.write("        <style type=\"text/css\">\n");
      out.write("            @import url('css/topMenu.css');\n");
      out.write("            @import url('css/exxo.css');\n");
      out.write("            #submit {padding: 4px; margin: 15px; cursor: pointer;}\n");
      out.write("            a.html {display:block; margin: 15px; text-decoration: none; font-size: 12px; }\n");
      out.write("            a.html:hover {text-decoration: underline; color:#972626;}\n");
      out.write("            #editor-center {padding: 25px;}\n");
      out.write("            td#menu {width: 200px; vertical-align: top; padding-top: 25px;}\n");
      out.write("            td#menu input {width: 140px; height: 50px;}\n");
      out.write("            div#topMenu {width: 100%; height: 36px; background-color: gray;background-image: url(\"img/spr.png\");background-position: bottom;background-repeat: repeat-x;}\n");
      out.write("            #foot {height: 30px;padding-top: 6px;margin: 0;background-color: transparent;width: auto;border: 0;text-align: left;padding-left: 275px;background-image: none;}\n");
      out.write("            .footmenu {font-size: 15px;text-decoration: none;color: white;background-color: transparent; padding: 5px; display: inline-block;}\n");
      out.write("            body {background-color:white;}\n");
      out.write("            #leftMenu {width: 210px; padding: 10px; margin-left: 10px; background-color: white; margin-top: 25px;}\n");
      out.write("            #content textarea {width: 100%; overflow: auto; border: 0; height: 300px;background-color: #2B0202;color: white; padding: 7px;}  \n");
      out.write("            #formcss {margin:25px; text-align: center;}\n");
      out.write("            #content h3 {text-align: center; font-size: 14px;}\n");
      out.write("            #contentInner {position: relative;margin-left: 10px; width: 670px;height: auto;margin-bottom: 10px;background-color: white; border-color: #DEDEDE #DEDEDE #BFBFBF #DEDEDE; border-width: 1px; border-style: solid; padding: 0;}\n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("    <body id=\"htmlEditor_jsp\">\n");
      out.write("        <div id=\"topMenu\">\n");
      out.write("            <div id=\"foot\">\n");
      out.write("                <ul class=\"topMenu\">\n");
      out.write("                    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "topMenu.xhtml", out, true);
      out.write("\n");
      out.write("                    <li><a href=\"main.jsp?id=");
      out.print(b);
      out.write("\" class=\"footmenu\">Sonlandır</a></li>\n");
      out.write("                    <li> <a href=\"http://exxo.ru/howto/cms-howto.html#editelement\" class=\"footmenu howto\" target=\"_blank\">?</a></li>\n");
      out.write("                </ul>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <form action=\"alterHTML\" method=\"post\">\n");
      out.write("            <table id=\"content\">\n");
      out.write("                <tr>\n");
      out.write("                    <td id=\"menu\">\n");
      out.write("                        <input type=\"submit\" id='submit' value=\"Yadda saxla\"/>\n");
      out.write("                        <a href=\"editor.jsp?id=");
      out.print(id);
      out.write('&');
      out.write('b');
      out.write('=');
      out.print(b);
      out.write("\" class=\"html\">Визуальный редактор</a>       \n");
      out.write("                    </td>\n");
      out.write("                    <td id=\"editor-center\">\n");
      out.write("                        <div id=\"contentInner\" class=\"exxo-shadow1\">\n");
      out.write("                            <h3>Редактирование HTML</h3>\n");
      out.write("                            <div id=formcss>       \n");
      out.write("                                <textarea cols=\"80\" rows=\"20\" name=\"html\">");
      out.print(html);
      out.write("</textarea>\n");
      out.write("                                <input type=\"hidden\" name=\"id\" value=\"");
      out.print(id);
      out.write("\">\n");
      out.write("                                <input type=\"hidden\" name=\"b\" value=\"");
      out.print(b);
      out.write("\">    \n");
      out.write("                            </div></div> \n");
      out.write("                    </td>\n");
      out.write("                    <td id=\"info\"></td>\n");
      out.write("                </tr>\n");
      out.write("            </table>\n");
      out.write("        </form>\n");
      out.write("        <script type=\"text/javascript\" charset=\"utf-8\" src=\"scripts/topMenu.js\"></script>\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("            AUI().ready('aui-node', function (A) {\n");
      out.write("                var myHeight = A.DOM.winHeight() - 100;\n");
      out.write("                if (myHeight < 300)\n");
      out.write("                    myHeight = 300;\n");
      out.write("                A.one(\"#content\").setStyle(\"height\", myHeight + \"px\");\n");
      out.write("                A.one(\"#content textarea\").setStyle(\"height\", myHeight - 120 + \"px\");\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
